{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.interceptor.ts","webpack:///./src/app/error/forbidden/forbidden.component.css","webpack:///./src/app/error/forbidden/forbidden.component.html","webpack:///./src/app/error/forbidden/forbidden.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/menus/menus.component.css","webpack:///./src/app/menus/menus.component.html","webpack:///./src/app/menus/menus.component.ts","webpack:///./src/app/orders/order-items/order-items.component.css","webpack:///./src/app/orders/order-items/order-items.component.html","webpack:///./src/app/orders/order-items/order-items.component.ts","webpack:///./src/app/orders/order/order.component.css","webpack:///./src/app/orders/order/order.component.html","webpack:///./src/app/orders/order/order.component.ts","webpack:///./src/app/orders/orders.component.css","webpack:///./src/app/orders/orders.component.html","webpack:///./src/app/orders/orders.component.ts","webpack:///./src/app/payment-details/payment-detail-list/payment-detail-list.component.css","webpack:///./src/app/payment-details/payment-detail-list/payment-detail-list.component.html","webpack:///./src/app/payment-details/payment-detail-list/payment-detail-list.component.ts","webpack:///./src/app/payment-details/payment-detail/payment-detail.component.css","webpack:///./src/app/payment-details/payment-detail/payment-detail.component.html","webpack:///./src/app/payment-details/payment-detail/payment-detail.component.ts","webpack:///./src/app/payment-details/payment-details.component.css","webpack:///./src/app/payment-details/payment-details.component.html","webpack:///./src/app/payment-details/payment-details.component.ts","webpack:///./src/app/roles/role-ctl/role-ctl.component.css","webpack:///./src/app/roles/role-ctl/role-ctl.component.html","webpack:///./src/app/roles/role-ctl/role-ctl.component.ts","webpack:///./src/app/roles/role/role.component.css","webpack:///./src/app/roles/role/role.component.html","webpack:///./src/app/roles/role/role.component.ts","webpack:///./src/app/roles/roles.component.css","webpack:///./src/app/roles/roles.component.html","webpack:///./src/app/roles/roles.component.ts","webpack:///./src/app/shared/customer.service.ts","webpack:///./src/app/shared/item.service.ts","webpack:///./src/app/shared/order.service.ts","webpack:///./src/app/shared/payment-detail.service.ts","webpack:///./src/app/shared/role-ctl.service.ts","webpack:///./src/app/shared/role.service.ts","webpack:///./src/app/shared/user.service.ts","webpack:///./src/app/user/login/login.component.css","webpack:///./src/app/user/login/login.component.html","webpack:///./src/app/user/login/login.component.ts","webpack:///./src/app/user/registration/registration.component.css","webpack:///./src/app/user/registration/registration.component.html","webpack:///./src/app/user/registration/registration.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/app/userroles/userrole/userrole.component.css","webpack:///./src/app/userroles/userrole/userrole.component.html","webpack:///./src/app/userroles/userrole/userrole.component.ts","webpack:///./src/app/userroles/userrolelist/userrolelist.component.css","webpack:///./src/app/userroles/userrolelist/userrolelist.component.html","webpack:///./src/app/userroles/userrolelist/userrolelist.component.ts","webpack:///./src/app/userroles/userroles.component.css","webpack:///./src/app/userroles/userroles.component.html","webpack:///./src/app/userroles/userroles.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PaymentDetailsComponent } from './payment-details/payment-details.component';\nimport { OrdersComponent } from './orders/orders.component';\nimport { OrderComponent } from './orders/order/order.component';\nimport { UserComponent } from './user/user.component';\nimport { RegistrationComponent } from './user/registration/registration.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { RolesComponent } from './roles/roles.component';\nimport { RoleComponent } from './roles/role/role.component';\nimport { UserrolesComponent } from './userroles/userroles.component';\nimport { ForbiddenComponent } from './error/forbidden/forbidden.component';\n\nconst routes: Routes = [\n  {path:'user',component:UserComponent,children:[\n      {path:'registration',component:RegistrationComponent,canActivate:[AuthGuard]},\n      {path:'login',component:LoginComponent}\n  ]},\n  {path:'error/403',component:ForbiddenComponent},\n  {path:'paymentcard',component:PaymentDetailsComponent,canActivate:[AuthGuard]},\n  {path:'orders',component:OrdersComponent,canActivate:[AuthGuard]},\n  {path:'order',children:[\n    {path:'',component:OrderComponent},\n    {path:'edit/:id',component:OrderComponent,canActivate:[AuthGuard]}\n  ]},\n  {path:'home',component:HomeComponent,canActivate:[AuthGuard]},\n  {path:'roles',component:RolesComponent},\n  {path:'role',children:[\n    {path:'',component:RoleComponent},\n    {path:'edit/:id',component:RoleComponent}\n  ]},\n  {\n    path:'userroles',component:UserrolesComponent,canActivate:[AuthGuard]\n  },\n  { path : '', redirectTo:'/user/login', pathMatch : 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\n\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AngularJs';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule,ReactiveFormsModule } from \"@angular/forms\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { MenusComponent } from './menus/menus.component';\nimport { MaterialModule } from './material.module';\nimport { PaymentDetailsComponent } from \"./payment-details/payment-details.component\";\nimport { PaymentDetailComponent } from './payment-details/payment-detail/payment-detail.component';\nimport { PaymentDetailListComponent } from './payment-details/payment-detail-list/payment-detail-list.component';\nimport { PaymentDetailService } from './shared/payment-detail.service';\nimport { OrdersComponent } from './orders/orders.component';\nimport { OrderComponent } from './orders/order/order.component';\nimport { OrderItemsComponent } from './orders/order-items/order-items.component';\nimport { CustomerService } from './shared/customer.service';\nimport { ItemService } from './shared/item.service';\nimport { OrderService } from './shared/order.service';\nimport { UserComponent } from './user/user.component';\nimport { RegistrationComponent } from './user/registration/registration.component';\nimport { UserService } from './shared/user.service';\nimport { LoginComponent } from './user/login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { RolesComponent } from './roles/roles.component';\nimport { RoleComponent } from './roles/role/role.component';\nimport { RoleCtlComponent } from './roles/role-ctl/role-ctl.component';\nimport { RoleService } from './shared/role.service';\nimport { RoleCtlService } from './shared/role-ctl.service';\nimport { UserroleComponent } from './userroles/userrole/userrole.component';\nimport { UserrolelistComponent } from './userroles/userrolelist/userrolelist.component';\nimport { UserrolesComponent } from './userroles/userroles.component';\nimport { ForbiddenComponent } from './error/forbidden/forbidden.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PaymentDetailsComponent,\n    PaymentDetailComponent,\n    PaymentDetailListComponent,\n    OrdersComponent,\n    OrderComponent,\n    OrderItemsComponent,\n    MenusComponent,\n    UserComponent,\n    RegistrationComponent,\n    LoginComponent,\n    HomeComponent,\n    RolesComponent,\n    RoleComponent,\n    RoleCtlComponent,\n    UserroleComponent,\n    UserrolelistComponent,\n    UserrolesComponent,\n    ForbiddenComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n  ],\n  entryComponents:[OrderItemsComponent],\n  providers: [PaymentDetailService,CustomerService,ItemService,\n    OrderService,UserService,\n    RoleService,RoleCtlService,{\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptor,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot,Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router){\n\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n      if (localStorage.getItem('token') != null)\n      return true;\n    else {\n      this.router.navigate(['/user/login']);\n      return false;\n  }\n}\n\n}","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { tap } from \"rxjs/operators\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private router: Router) {\r\n\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (localStorage.getItem('token') != null) {\r\n            const clonedReq = req.clone({\r\n                headers: req.headers.set('Authorization', 'Bearer ' + localStorage.getItem('token'))\r\n            });\r\n            return next.handle(clonedReq).pipe(\r\n                tap(\r\n                    succ => { },\r\n                    err => {\r\n                        if (err.status == 401){\r\n                            localStorage.removeItem('token');\r\n                            this.router.navigateByUrl('/user/login');\r\n                        }\r\n                        else if(err.status == 403){\r\n                            this.router.navigateByUrl('/error/403');\r\n                        }\r\n                    }\r\n                )\r\n            )\r\n        }\r\n        else\r\n            return next.handle(req.clone());\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vycm9yL2ZvcmJpZGRlbi9mb3JiaWRkZW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-menus></app-menus>\\n<div class=\\\"col-md-8 offset-md-5\\\">\\n  <i class=\\\"fas fa-blind fa-10x\\\"></i>403 Forbidden\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forbidden',\n  templateUrl: './forbidden.component.html',\n  styleUrls: ['./forbidden.component.css']\n})\nexport class ForbiddenComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-menus></app-menus>\\n<div class=\\\"card m-5\\\" style=\\\"width:18rem\\\" *ngIf=\\\"userDetails\\\">\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\"><strong>Username : </strong>{{userDetails.UserName}}</li>\\n    <li class=\\\"list-group-item\\\"><strong>FullName : </strong>{{userDetails.FullName}}</li>\\n    <li class=\\\"list-group-item\\\"><strong>Email : </strong>{{userDetails.Email}}</li>\\n  </ul>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../shared/user.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  userDetails;\n  constructor(private router: Router, private service: UserService) { }\n\n  ngOnInit() {\n    this.service.getUserProfile().subscribe(\n      res => {\n        this.userDetails = res;\n      },\n      err => {\n        console.log(err);\n      },\n    );\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {A11yModule} from '@angular/cdk/a11y';\n\nimport { \n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule} from \"@angular/material\";\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatDialogModule,\n    MatTreeModule\n  ],\n  exports:[\n    A11yModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModule { }\n","module.exports = \"li .glyphicon {\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\n/* Highlighting rules for nav menu items */\\r\\n\\r\\nli.link-active a,\\r\\nli.link-active a:hover,\\r\\nli.link-active a:focus {\\r\\n    background-color: #4189C7;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n/* Keep the nav menu independent of scrolling and on top of other items */\\r\\n\\r\\n.main-nav {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    z-index: 1;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n    /* On small screens, convert the nav menu to a vertical sidebar */\\r\\n    .main-nav {\\r\\n        height: 100%;\\r\\n        width: calc(25% - 20px);\\r\\n    }\\r\\n    .navbar {\\r\\n        border-radius: 0px;\\r\\n        border-width: 0px;\\r\\n        height: 100%;\\r\\n    }\\r\\n    .navbar-header {\\r\\n        float: none;\\r\\n    }\\r\\n    .navbar-collapse {\\r\\n        border-top: 1px solid #444;\\r\\n        padding: 0px;\\r\\n    }\\r\\n    .navbar ul {\\r\\n        float: none;\\r\\n    }\\r\\n    .navbar li {\\r\\n        float: none;\\r\\n        font-size: 15px;\\r\\n        margin: 6px;\\r\\n    }\\r\\n    .navbar li a {\\r\\n        padding: 10px 16px;\\r\\n        border-radius: 4px;\\r\\n    }\\r\\n    .navbar a {\\r\\n        /* If a menu item's text is too long, truncate it */\\r\\n        width: 100%;\\r\\n        white-space: nowrap;\\r\\n        overflow: hidden;\\r\\n        text-overflow: ellipsis;\\r\\n    }\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVudXMvbWVudXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQSwwQ0FBMEM7O0FBQzFDOzs7SUFHSSx5QkFBeUI7SUFDekIsWUFBWTtBQUNoQjs7QUFFQSx5RUFBeUU7O0FBQ3pFO0lBQ0ksZUFBZTtJQUNmLE1BQU07SUFDTixPQUFPO0lBQ1AsUUFBUTtJQUNSLFVBQVU7QUFDZDs7QUFFQTtJQUNJLGlFQUFpRTtJQUNqRTtRQUNJLFlBQVk7UUFDWix1QkFBdUI7SUFDM0I7SUFDQTtRQUNJLGtCQUFrQjtRQUNsQixpQkFBaUI7UUFDakIsWUFBWTtJQUNoQjtJQUNBO1FBQ0ksV0FBVztJQUNmO0lBQ0E7UUFDSSwwQkFBMEI7UUFDMUIsWUFBWTtJQUNoQjtJQUNBO1FBQ0ksV0FBVztJQUNmO0lBQ0E7UUFDSSxXQUFXO1FBQ1gsZUFBZTtRQUNmLFdBQVc7SUFDZjtJQUNBO1FBQ0ksa0JBQWtCO1FBQ2xCLGtCQUFrQjtJQUN0QjtJQUNBO1FBQ0ksbURBQW1EO1FBQ25ELFdBQVc7UUFDWCxtQkFBbUI7UUFDbkIsZ0JBQWdCO1FBQ2hCLHVCQUF1QjtJQUMzQjtBQUNKIiwiZmlsZSI6InNyYy9hcHAvbWVudXMvbWVudXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImxpIC5nbHlwaGljb24ge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG59XHJcblxyXG4vKiBIaWdobGlnaHRpbmcgcnVsZXMgZm9yIG5hdiBtZW51IGl0ZW1zICovXHJcbmxpLmxpbmstYWN0aXZlIGEsXHJcbmxpLmxpbmstYWN0aXZlIGE6aG92ZXIsXHJcbmxpLmxpbmstYWN0aXZlIGE6Zm9jdXMge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzQxODlDNztcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLyogS2VlcCB0aGUgbmF2IG1lbnUgaW5kZXBlbmRlbnQgb2Ygc2Nyb2xsaW5nIGFuZCBvbiB0b3Agb2Ygb3RoZXIgaXRlbXMgKi9cclxuLm1haW4tbmF2IHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIHotaW5kZXg6IDE7XHJcbn1cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xyXG4gICAgLyogT24gc21hbGwgc2NyZWVucywgY29udmVydCB0aGUgbmF2IG1lbnUgdG8gYSB2ZXJ0aWNhbCBzaWRlYmFyICovXHJcbiAgICAubWFpbi1uYXYge1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICB3aWR0aDogY2FsYygyNSUgLSAyMHB4KTtcclxuICAgIH1cclxuICAgIC5uYXZiYXIge1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDBweDtcclxuICAgICAgICBib3JkZXItd2lkdGg6IDBweDtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB9XHJcbiAgICAubmF2YmFyLWhlYWRlciB7XHJcbiAgICAgICAgZmxvYXQ6IG5vbmU7XHJcbiAgICB9XHJcbiAgICAubmF2YmFyLWNvbGxhcHNlIHtcclxuICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgIzQ0NDtcclxuICAgICAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICB9XHJcbiAgICAubmF2YmFyIHVsIHtcclxuICAgICAgICBmbG9hdDogbm9uZTtcclxuICAgIH1cclxuICAgIC5uYXZiYXIgbGkge1xyXG4gICAgICAgIGZsb2F0OiBub25lO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgICAgICBtYXJnaW46IDZweDtcclxuICAgIH1cclxuICAgIC5uYXZiYXIgbGkgYSB7XHJcbiAgICAgICAgcGFkZGluZzogMTBweCAxNnB4O1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIH1cclxuICAgIC5uYXZiYXIgYSB7XHJcbiAgICAgICAgLyogSWYgYSBtZW51IGl0ZW0ncyB0ZXh0IGlzIHRvbyBsb25nLCB0cnVuY2F0ZSBpdCAqL1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICAgIH1cclxufVxyXG4iXX0= */\"","module.exports = \"<mat-toolbar>  \\n  <mat-toolbar-row>\\n    <span>MEDIVETGROUP</span>\\n    <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" >\\n      <mat-icon>more_vert</mat-icon>\\n    </button>\\n    <mat-menu #menu=\\\"matMenu\\\" >\\n      <button mat-menu-item routerLink=\\\"/user/login\\\">\\n        <mat-icon>voicemail</mat-icon>\\n        <span>Log In</span>\\n      </button>\\n      <button mat-menu-item (click)=\\\"onLogout()\\\">\\n        <mat-icon>home</mat-icon>\\n        <span>Logout</span>\\n      </button>\\n      <button mat-menu-item routerLink=\\\"/user/registration\\\">\\n        <mat-icon><i class=\\\"fas fa-user-plus\\\"></i></mat-icon>\\n        <span>Register</span>\\n      </button>\\n      <button mat-menu-item routerLink=\\\"/userroles\\\">\\n        <mat-icon><i class=\\\"fas fa-users-cog\\\"></i></mat-icon>\\n        <span>User Setting</span>\\n      </button>\\n      <button mat-menu-item routerLink=\\\"/roles\\\">\\n        <mat-icon><i class=\\\"fas fa-pencil-ruler\\\"></i></mat-icon>\\n        <span>Roles Setting</span>\\n      </button>\\n      <button mat-menu-item routerLink=\\\"/paymentcard\\\">\\n        <mat-icon>dialpad</mat-icon>\\n        <span>Payment Card</span> \\n      </button>\\n    </mat-menu>\\n    <button mat-icon-button [matMenuTriggerFor]=\\\"menupr\\\" >\\n      <mat-icon><i class=\\\"fab fa-accusoft\\\"></i></mat-icon>\\n    </button>\\n    <mat-menu #menupr=\\\"matMenu\\\" >\\n      <button mat-menu-item routerLink=\\\"/orders\\\">\\n        <mat-icon><i class=\\\"fas fa-sort-amount-up\\\"></i></mat-icon>\\n        <span>Orders</span> \\n      </button>\\n    </mat-menu>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-menus',\n  templateUrl: './menus.component.html',\n  styleUrls: ['./menus.component.css']\n})\nexport class MenusComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  \n  onLogout() {\n    localStorage.removeItem('token');\n    this.router.navigate(['/user/login']);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVycy9vcmRlci1pdGVtcy9vcmRlci1pdGVtcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h4 class=\\\"dispaly-4\\\">Order Food Item</h4>\\n<hr>\\n<form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\">\\n    \\n    <input type=\\\"hidden\\\" name=\\\"OrderItemId\\\" [value]=\\\"formData.OrderItemId\\\">\\n    <input type=\\\"hidden\\\"  name=\\\"OrderId\\\" #OrderId=\\\"ngModel\\\" [(ngModel)]=\\\"formData.OrderId\\\">\\n  <input type=\\\"hidden\\\"  name=\\\"ItemName\\\" #ItemName=\\\"ngModel\\\" [(ngModel)]=\\\"formData.ItemName\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Food Item</label>\\n    <select name=\\\"InventoryId\\\" #InventoryId=\\\"ngModel\\\" [(ngModel)]=\\\"formData.InventoryId\\\" class=\\\"form-control\\\" (change)=\\\"updatePrice($event.target)\\\"\\n    [class.is-invalid]=\\\"!isValid && formData.InventoryId==0\\\">\\n      <option value=\\\"0\\\">-Select-</option>\\n      <option *ngFor=\\\"let item of itemList\\\" value=\\\"{{item.InventoryId}}\\\">{{item.InventoryDesr}}</option>\\n    </select>\\n  </div>\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"form-group col-md-6\\\">\\n      <label>Price</label>\\n      <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <div class=\\\"input-group-text\\\">$</div>\\n        </div>\\n        <input name=\\\"Price\\\" #Price=\\\"ngModel\\\" [(ngModel)]=\\\"formData.Price\\\" class=\\\"form-control\\\" readonly>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group col-md-6\\\">\\n      <label>Quantity</label>\\n      <input name=\\\"Quantity\\\" #Quantity=\\\"ngModel\\\" [(ngModel)]=\\\"formData.Quantity\\\" class=\\\"form-control\\\"\\n      (keyup)=\\\"updateTotal()\\\" [class.is-invalid]=\\\"!isValid && formData.Quantity==0\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Total</label>\\n    <div class=\\\"input-group\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <div class=\\\"input-group-text\\\">$</div>\\n      </div>\\n      <input name=\\\"Total\\\" #Total=\\\"ngModel\\\" [(ngModel)]=\\\"formData.Total\\\" class=\\\"form-control\\\" readonly>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn btn-dark\\\"><i class=\\\"fa fa-database\\\"></i> Submit</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark ml-1\\\" [mat-dialog-close]><i class=\\\"fa fa-close\\\"></i> Close</button>\\n  </div>\\n</form>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material\";\nimport { OrderItem } from 'src/app/shared/order-item.model';\nimport { ItemService } from 'src/app/shared/item.service';\nimport { OrderService } from 'src/app/shared/order.service';\nimport { Item } from 'src/app/shared/item.model';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-order-items',\n  templateUrl: './order-items.component.html',\n  styleUrls: ['./order-items.component.css']\n})\nexport class OrderItemsComponent implements OnInit {\n  formData: OrderItem;\n  itemList: Item[];\n  isValid: boolean = true;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data,\n  public dialogRef: MatDialogRef<OrderItemsComponent>,\n  private itemService: ItemService,\n  private orderSevice: OrderService) { }\n\n  ngOnInit() {\n    this.itemService.getItemList().then(res => this.itemList = res as Item[]);\n    if (this.data.orderItemIndex == null)\n      this.formData = {\n        OrderItemId: 0,\n        OrderId: this.data.OrderId,\n        InventoryId: 0,\n        ItemName: '',\n        Price: 0,\n        Quantity: 0,\n        Total: 0\n      }\n      else\n      this.formData = Object.assign({}, this.orderSevice.orderItems[this.data.orderItemIndex]);\n      \n  }\n\n  updatePrice(ctrl) {\n    if (ctrl.selectedIndex == 0) {\n      this.formData.Price = 0;\n      this.formData.ItemName = '';\n    }\n    else {\n      this.formData.Price = this.itemList[ctrl.selectedIndex - 1].Price;\n      this.formData.ItemName = this.itemList[ctrl.selectedIndex - 1].InventoryDesr;\n    }\n    this.updateTotal();\n  }\n\n  updateTotal() {\n    this.formData.Total = parseFloat((this.formData.Quantity * this.formData.Price).toFixed(2));\n  }\n\n  onSubmit(form: NgForm) {\n    if (this.validateForm(form.value)) {\n      if (this.data.orderItemIndex == null)\n        this.orderSevice.orderItems.push(form.value);\n      else\n        this.orderSevice.orderItems[this.data.orderItemIndex] = form.value;\n      this.dialogRef.close();\n    }\n  }\n\n  validateForm(formData: OrderItem) {\n    this.isValid = true;\n    if (formData.InventoryId == 0)\n      this.isValid = false;\n    else if (formData.Quantity == 0)\n      this.isValid = false;\n    return this.isValid;\n  }\n\n  \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVycy9vcmRlci9vcmRlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-menus></app-menus>\\n<div class=\\\"jumbotron\\\">\\n  <h1 class=\\\"display-4 text-center\\\">Orders Register</h1>\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" *ngIf=\\\"service.formData\\\" (submit)=\\\"onSubmit(form)\\\">\\n        <input type=\\\"hidden\\\" name=\\\"OrderId\\\" [value]=\\\"service.formData.OrderId\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Order No.</label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\">#</div>\\n                </div>\\n                <input name=\\\"OrderNo\\\" #OrderNo=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.OrderNo\\\" class=\\\"form-control\\\" readonly>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>Customer</label>\\n              <select name=\\\"CustomerId\\\" #CustomerId=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.CustomerId\\\" class=\\\"form-control\\\"\\n              [class.is-invalid]=\\\"!isValid && service.formData.CustomerId==0\\\">\\n                <option value=\\\"0\\\">-Select-</option>\\n                <option *ngFor=\\\"let item of customerList\\\" value=\\\"{{item.CustomerId}}\\\">{{item.CustomerName}}</option>\\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Payment Method</label>\\n              <select name=\\\"PMethod\\\" #PMethod=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.PMethod\\\" class=\\\"form-control\\\">\\n                <option value=\\\"\\\">-Select-</option>\\n                <option value=\\\"Cash\\\">Cash</option>\\n                <option value=\\\"Card\\\">Card</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>Grand Total</label>\\n\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\">$</div>\\n                </div>\\n                <input name=\\\"GTotal\\\" #GTotal=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.GTotal\\\" class=\\\"form-control\\\" readonly>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <!-- order items table-->\\n        <table class=\\\"table table-borderless\\\">\\n          <thead class=\\\"thead-light\\\">\\n            <th>Food</th>\\n            <th>Price</th>\\n            <th>Quantity</th>\\n            <th>Total</th>\\n            <th>\\n              <a class=\\\"btn btn-sm btn-success text-white\\\" (click)=\\\"AddOrEditOrderItem(null,service.formData.OrderId)\\\"><i class=\\\"fa fa-plus\\\"></i> Add Item</a>\\n            </th>\\n          </thead>\\n          <tbody>\\n            <tr *ngIf=\\\"service.orderItems.length==0\\\" [class.text-danger]=\\\"!isValid && service.orderItems.length==0\\\">\\n              <td class=\\\"font-italic text-center\\\" colspan=\\\"5\\\">\\n                No food item selected for this order.\\n              </td>\\n            </tr>\\n\\n            <tr *ngFor=\\\"let item of service.orderItems;let i=index;\\\">\\n              <td>{{item.ItemName}}</td>\\n              <td>{{item.Price}}</td>\\n              <td>{{item.Quantity}}</td>\\n              <td>{{item.Total}}</td>\\n              <td>\\n                <a class=\\\"btn btn-sm btn-info text-white\\\" (click)=\\\"AddOrEditOrderItem(i,service.formData.OrderId)\\\"><i class=\\\"fas fa-pencil-alt\\\"></i></a>\\n                <a class=\\\"btn btn-sm btn-danger text-white ml-1\\\" (click)=\\\"onDeleteOrderItem(item.OrderItemId,i)\\\"><i class=\\\"fa fa-trash\\\"></i></a>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n        <div class=\\\"form-group\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-dark\\\"><i class=\\\"fa fa-database\\\"></i> Submit</button>\\n          <a class=\\\"btn btn-outline-dark ml-1\\\" routerLink=\\\"/orders\\\"><i class=\\\"fa fa-table\\\"></i> View Orders</a>\\n        </div>\\n      </form>\\n  \\n    </div>\\n  </div>\\n</div>\"","import { CustomerService } from './../../shared/customer.service';\nimport { OrderService } from './../../shared/order.service';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { OrderItemsComponent } from '../order-items/order-items.component';\nimport { Customer } from 'src/app/shared/customer.model';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css']\n})\n\nexport class OrderComponent implements OnInit {\n\n  customerList: Customer[];\n  isValid: boolean = true;\n\n  constructor(private service:OrderService,\n    private dialog: MatDialog,\n    private customerService: CustomerService,\n    private toastr: ToastrService,\n    private router: Router,\n    private currentRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    let orderId = this.currentRoute.snapshot.paramMap.get('id');\n    if(orderId==null)\n    this.resetForm();\n    else{\n      this.service.getOrderByID(parseInt(orderId)).then(res=>{\n        this.service.formData = res.orders;\n        this.service.orderItems = res.orderlines;\n      });\n    }\n\n    this.customerService.getCustomerList().then(res => this.customerList = res as Customer[]);\n  }\n\n  resetForm(form?:NgForm){\n    if(form = null)\n    form.resetForm();\n    this.service.formData = {\n      OrderId: 0,\n      OrderNo: Math.floor(100000+Math.random()*900000).toString(),\n      CustomerId: 0,\n      PMethod: '',\n      GTotal:0 ,\n      DeletedOrderItemIDs: ''\n    };\n    this.service.orderItems = [];\n  }\n\n  AddOrEditOrderItem(orderItemIndex, OrderId) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"50%\";\n    dialogConfig.data = { orderItemIndex, OrderId };\n    this.dialog.open(OrderItemsComponent, dialogConfig).afterClosed().subscribe(res => {\n      this.updateGrandTotal();\n    });\n  }\n\n  onDeleteOrderItem(orderItemID: number, i: number) {\n    if (orderItemID != null)\n      this.service.formData.DeletedOrderItemIDs += orderItemID + \",\";\n    this.service.orderItems.splice(i, 1);\n    this.updateGrandTotal();\n  }\n\n  updateGrandTotal() {\n    this.service.formData.GTotal = this.service.orderItems.reduce((prev, curr) => {\n      return prev + curr.Total;\n    }, 0);\n    this.service.formData.GTotal = parseFloat(this.service.formData.GTotal.toFixed(2));\n  }\n\n  validateForm() {\n    this.isValid = true;\n    if (this.service.formData.CustomerId == 0)\n      this.isValid = false;\n    else if (this.service.orderItems.length == 0)\n      this.isValid = false;\n    return this.isValid;\n  }\n\n  onSubmit(form: NgForm) {\n    if(this.service.formData.OrderId == 0){\n      this.insertRecord(form);\n    }\n    else{\n      this.updateRecord(form);\n    }\n  }\n\n  insertRecord(form:NgForm){\n    if (this.validateForm()) {\n      this.service.postOrders().subscribe(res => {\n        this.resetForm();\n        this.toastr.success('Submitted Successfully', 'Restaurent App.');\n        this.router.navigate(['/orders']);\n      })\n    }\n  }\n\n  updateRecord(form:NgForm){\n    if (this.validateForm()) {\n      this.service.putOrders().subscribe(res => {\n        this.resetForm();\n        this.toastr.success('Submitted Successfully', 'Restaurent App.');\n        this.router.navigate(['/orders']);\n      })\n    }\n  }\n\n}\n\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVycy9vcmRlcnMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-menus></app-menus>\\n<div class=\\\"jumbotron\\\">\\n  <h1 class=\\\"display-4 text-center\\\">Orders Register</h1>\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <table class=\\\"table table-hover\\\">\\n        <thead class=\\\"thead-light\\\">\\n          <th>#Order No.</th>\\n          <th>Customer</th>\\n          <th>P. Method</th>\\n          <th>G. Total</th>\\n          <th>\\n            <a class=\\\"btn btn-outline-success\\\" routerLink=\\\"/order\\\"><i class=\\\"fa fa-plus-square\\\"></i> Create New</a>\\n          </th>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let item of orderList\\\">\\n            <th (click)=\\\"openForEdit(item.OrderId)\\\">{{item.OrderNo}}</th>\\n            <td (click)=\\\"openForEdit(item.OrderId)\\\">{{item.Customer}}</td>\\n            <td (click)=\\\"openForEdit(item.OrderId)\\\">{{item.PMethod}}</td>\\n            <td (click)=\\\"openForEdit(item.OrderId)\\\">{{item.GTotal}}</td>\\n            <td>\\n                <a class=\\\"btn text-danger\\\" (click)=\\\"onOrderDelete(item.OrderId)\\\"><i class=\\\"fa fa-trash fa-lg\\\"></i></a>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { OrderService } from '../shared/order.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n\n  orderList;\n  constructor(private service: OrderService,\n    private router: Router,\n    private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.refreshList();\n  }\n\n  refreshList() {\n    this.service.getOrderList().then(res => this.orderList = res);\n  }\n\n  openForEdit(orderId: number) {\n    this.router.navigate(['/order/edit/' + orderId]);\n  }\n\n  onOrderDelete(id: number) {\n    if (confirm('Are you sure to delete this record?')) {\n      this.service.deleteOrder(id).then(res => {\n        this.refreshList();\n        this.toastr.warning(\"Deleted Successfully\", \"Restaurent App.\");\n      });\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BheW1lbnQtZGV0YWlscy9wYXltZW50LWRldGFpbC1saXN0L3BheW1lbnQtZGV0YWlsLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<table class=\\\"table table-hover\\\">\\n  <tr *ngFor=\\\"let pd of service.list\\\">\\n    <td (click)=\\\"populateForm(pd)\\\">{{pd.CardOwnerName}}</td>\\n    <td (click)=\\\"populateForm(pd)\\\">{{pd.CardNumber}}</td>\\n    <td (click)=\\\"populateForm(pd)\\\">{{pd.ExpirationDate}}</td>\\n    <td (click)=\\\"populateForm(pd)\\\">{{pd.CVV}}</td>\\n    <td>\\n      <i class=\\\"fa fa-trash-alt fa-lg text-danger\\\" (click)=\\\"onDelete(pd.PMId)\\\"></i>\\n    </td>\\n  </tr>\\n</table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { PaymentDetailService } from 'src/app/shared/payment-detail.service';\nimport { PaymentDetail } from 'src/app/shared/payment-detail.model';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-payment-detail-list',\n  templateUrl: './payment-detail-list.component.html',\n  styleUrls: ['./payment-detail-list.component.css']\n})\nexport class PaymentDetailListComponent implements OnInit {\n\n  constructor(private service:PaymentDetailService,\n    private toastr:ToastrService) { }\n\n  ngOnInit() {\n    this.service.refressList();\n  }\n  populateForm(pd:PaymentDetail){\n     this.service.formData = Object.assign({},pd);\n  }\n\n  onDelete(PMId){\n    if(confirm('Are you sure to delete this record?')){\n      this.service.DeletePaymentDetail(PMId).subscribe(\n        res => {\n          this.service.refressList();\n          this.toastr.warning(\"Deleted successfully\",\"Payment Detail Register\");\n        },\n        err => {\n          console.log(err);\n        }\n      )\n    }\n\n\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BheW1lbnQtZGV0YWlscy9wYXltZW50LWRldGFpbC9wYXltZW50LWRldGFpbC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\">\\n  <input type=\\\"hidden\\\" name=\\\"PMId\\\" [value]=\\\"service.formData.PMId\\\">\\n  <div class=\\\"form-group\\\">\\n    <div class=\\\"input-group\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <div class=\\\"input-group-text bg-white\\\">\\n            <i class=\\\"fas fa-user-circle\\\" [class.green-icon]=\\\"CardOwnerName.valid\\\" [class.red-icon]=\\\"CardOwnerName.invalid\\\"></i>\\n        </div>\\n      </div>\\n      <input name=\\\"CardOwnerName\\\" #CardOwnerName=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.CardOwnerName\\\" class=\\\"form-control\\\" placeholder=\\\"Card Owner Name\\\" required>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <div class=\\\"input-group-text bg-white\\\">\\n              <i class=\\\"fas fa-credit-card\\\" [class.green-icon]=\\\"CardNumber.valid\\\" [class.red-icon]=\\\"CardNumber.invalid\\\"></i>\\n          </div>\\n        </div>\\n        <input name=\\\"CardNumber\\\" #CardNumber=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.CardNumber\\\" class=\\\"form-control\\\" placeholder=\\\"Card Number\\\" required maxlength=\\\"16\\\" minlength=\\\"16\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n    <div class=\\\"form-group col-md-7\\\">\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <div class=\\\"input-group-text bg-white\\\">\\n                <i class=\\\"fas fa-calendar-alt\\\" [class.green-icon]=\\\"ExpirationDate.valid\\\" [class.red-icon]=\\\"ExpirationDate.invalid\\\"></i>\\n            </div>\\n          </div>\\n          <input name=\\\"ExpirationDate\\\" #ExpirationDate=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.ExpirationDate\\\" class=\\\"form-control\\\" placeholder=\\\"MM/YY\\\" required required maxlength=\\\"5\\\" minlength=\\\"5\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col-md-5\\\">\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <div class=\\\"input-group-text bg-white\\\">\\n                <i class=\\\"fas fa-key\\\" [class.green-icon]=\\\"CVV.valid\\\" [class.red-icon]=\\\"CVV.invalid\\\"></i>\\n            </div>\\n          </div>\\n          <input type=\\\"password\\\" name=\\\"CVV\\\" #CVV=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.CVV\\\" class=\\\"form-control\\\" placeholder=\\\"CVV\\\" required required maxlength=\\\"3\\\" minlength=\\\"3\\\">\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <button class=\\\"btn btn-success btn-lg btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\"><i class=\\\"fas fa-database\\\"></i>Submit</button>\\n    </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { PaymentDetailService } from 'src/app/shared/payment-detail.service';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-payment-detail',\n  templateUrl: './payment-detail.component.html',\n  styleUrls: ['./payment-detail.component.css']\n})\nexport class PaymentDetailComponent implements OnInit {\n\n  constructor(private service:PaymentDetailService,\n    private toastr:ToastrService) { }\n\n  ngOnInit() {\n    this.resetForm();\n  }\n\n  resetForm(form?:NgForm){\n    if(form!=null)\n      form.resetForm();\n    this.service.formData = {\n      PMId:0,\n      CardOwnerName:'',\n      CardNumber:'',\n      ExpirationDate:'',\n      CVV:''\n    }\n  }\n\n  onSubmit(form:NgForm){\n    if(this.service.formData.PMId == 0){\n      this.insertRecord(form);\n    }\n    else{\n      this.updateRecord(form);\n    }\n  }\n\n  \n  insertRecord(form:NgForm){\n    this.service.postPaymentDetail().subscribe(\n      res=>{\n        this.resetForm(form);\n        this.toastr.success(\"Submited successfully\",\"Payment Detail Register\");\n        this.service.refressList();\n      },\n      err=>{\n        console.log(err);\n      })\n  }\n\n  updateRecord(form:NgForm){\n    this.service.PutPaymentDetail().subscribe(\n      res=>{\n        this.resetForm(form);\n        this.toastr.info(\"Submited successfully\",\"Payment Detail Register\");\n        this.service.refressList();\n      },\n      err=>{\n        console.log(err);\n      })\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BheW1lbnQtZGV0YWlscy9wYXltZW50LWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-menus></app-menus>\\n<div class=\\\"jumbotron\\\">\\n  <h1 class=\\\"display-4 text-center\\\">Payment Detail Register</h1>\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n      <app-payment-detail></app-payment-detail>\\n    </div>\\n    <div class=\\\"col-md-8\\\">\\n      <app-payment-detail-list></app-payment-detail-list>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-payment-details',\n  templateUrl: './payment-details.component.html',\n  styleUrls: ['./payment-details.component.css']\n})\nexport class PaymentDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvbGVzL3JvbGUtY3RsL3JvbGUtY3RsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  role-ctl works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-role-ctl',\n  templateUrl: './role-ctl.component.html',\n  styleUrls: ['./role-ctl.component.css']\n})\nexport class RoleCtlComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvbGVzL3JvbGUvcm9sZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-menus></app-menus>\\n<div class=\\\"container\\\">\\n  <div class=\\\"col-md-12\\\">\\n      <div class=\\\"jumbotron\\\">\\n          <h1 class=\\\"display-4 text-center\\\"><i class=\\\"fas fa-toilet-paper\\\"></i>Roles Management</h1>\\n        <hr>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n              <form [formGroup]=\\\"service.formModel\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit()\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <input hidden class=\\\"form-control\\\" formControlName=\\\"Id\\\">\\n                  </div>\\n                  <div class=\\\"form-group required\\\">\\n                    <label>RoleName</label>\\n                    <input class=\\\"form-control\\\" formControlName=\\\"RoleName\\\">\\n                    <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('RoleName').touched && service.formModel.get('RoleName').errors?.required\\\">This field is mandatory.</label>\\n                  </div>\\n                  <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col-md-8 offset-md-2\\\">\\n                      <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block\\\" [disabled]=\\\"!service.formModel.valid\\\">Submit</button>\\n                    </div>\\n                  </div>\\n                </form>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>Access List</label>                     \\n                        <table class=\\\"table table-hover\\\">\\n                          <tr *ngFor=\\\"let item of ctlList\\\">\\n                            <td>{{item.Id}}</td>\\n                            <td width=\\\"5%\\\"><i class=\\\"fas fa-minus\\\" (click)=\\\"onDelete(item)\\\"></i></td>\\n                            <td width=\\\"5%\\\"><i class=\\\"fas fa-plus\\\" (click)=\\\"onAdd(item)\\\"></i></td>\\n                          </tr>\\n                        </table>\\n                      </div> \\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <table class=\\\"table table-hover\\\">\\n                      <tr *ngFor=\\\"let item of service.rolesAdded\\\">\\n                        <td>{{item}}</td>\\n                      </tr>\\n                    </table>\\n                  </div>\\n                </div>\\n \\n\\n          </div>\\n        </div>\\n      </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RoleService } from 'src/app/shared/role.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { RoleCtlService } from 'src/app/shared/role-ctl.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Role } from 'src/app/shared/role.model';\nimport { forEach } from '@angular/router/src/utils/collection';\nimport { element } from '@angular/core/src/render3';\n\n@Component({\n  selector: 'app-role',\n  templateUrl: './role.component.html',\n  styleUrls: ['./role.component.css']\n})\nexport class RoleComponent implements OnInit {\n\n  ctlList;\n  roleList:Role;\n  constructor(public service:RoleService,\n    private serviceCtl:RoleCtlService,\n    private toastr:ToastrService,private currentRoute: ActivatedRoute,private router: Router) {\n     \n  } \n\n  ngOnInit() {\n    this.getCtl();\n    let roleId = this.currentRoute.snapshot.paramMap.get('id');\n    if(roleId == null){\n      this.service.formModel.reset();\n    }\n    else{\n      this.service.getRoleByID(roleId).then(res => {\n        this.roleList = res;\n        this.service.formModel.patchValue({\n          Id:this.roleList.Id,\n          RoleName:this.roleList.Name,\n        });\n        if(this.roleList.Access != null){\n          var accesslist = JSON.parse(this.roleList.Access);\n          this.service.selectedCtl = accesslist;\n          for(let i = 0; i < accesslist.length; i++){\n            this.service.rolesAdded.push(accesslist[i].Id);\n        }\n      }\n       this.service.formModel.value.Id = roleId;\n      });\n    }\n  }\n\n  onSubmit()\n  {\n    if(this.service.formModel.value.Id == '' || this.service.formModel.value.Id == null){\n      this.postRole();\n      console.log('post');\n    }\n    else{\n      console.log('put');\n      this.putRole();\n    }\n    \n  }\n\n  postRole(){\n    this.service.postRoles().subscribe(\n      (res:any) => {\n        if(res.Succeeded){\n          \n          this.toastr.success(\"New role created\",\"Register Role\");\n        }\n      },\n      err =>{\n        console.log(err);\n      }\n\n    );\n  }\n\n  putRole(){\n    this.service.putRoles().subscribe(\n      (res:any) => {\n        if(res.Succeeded){\n          \n          this.toastr.success(\"New role updated\",\"Register Role\");\n        }\n      },\n      err =>{\n        console.log(err);\n      }\n\n    );\n  }\n\n  getCtl(){\n    this.serviceCtl.getTreeList().then(res => this.ctlList = res);\n  }\n\n  onDelete(item:any){\n    this.service.onDelete(item);\n  }\n\n  onAdd(item:any){\n    this.service.onAdd(item);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvbGVzL3JvbGVzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-menus></app-menus>\\n<div class=\\\"jumbotron\\\">\\n  <h1 class=\\\"display-4 text-center\\\">Roles Register</h1>\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <table class=\\\"table table-hover\\\">\\n        <thead class=\\\"thead-light\\\">\\n          <th>Name</th>\\n          <th>Access</th>\\n          <th>\\n            <a class=\\\"btn btn-outline-success\\\" routerLink=\\\"/role\\\"><i class=\\\"fa fa-plus-square\\\"></i> Create New</a>\\n          </th>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let item of roleList\\\">\\n            <td (click)=\\\"openForEdit(item.Id)\\\">{{item.Name}}</td>\\n            <td (click)=\\\"openForEdit(item.Id)\\\">{{item.Access}}</td>\\n            <td>\\n                <a class=\\\"btn text-danger\\\" (click)=\\\"onRoleDelete(item.Id)\\\"><i class=\\\"fa fa-trash fa-lg\\\"></i></a>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { RoleService } from '../shared/role.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-roles',\n  templateUrl: './roles.component.html',\n  styleUrls: ['./roles.component.css']\n})\nexport class RolesComponent implements OnInit {\n\n  roleList;\n  constructor(private service: RoleService,\n    private router: Router,\n    private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.refreshList();\n  }\n\n  refreshList() {\n    this.service.getRolesList().then(res => this.roleList = res);\n  }\n\n  openForEdit(id: number) {\n    this.router.navigate(['/role/edit/' + id]);\n  }\n\n  onRoleDelete(id: number) {\n    if (confirm('Are you sure to delete this record?')) {\n      this.service.deleteRole(id).then(res => {\n        this.refreshList();\n        this.toastr.warning(\"Deleted Successfully\", \"Restaurent App.\");\n      });\n    }\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n\n  constructor(private http: HttpClient) { }\n\n  getCustomerList(){\n    return this.http.get(environment.apiURL+'/Customers').toPromise();\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemService {\n\n  constructor(private http:HttpClient) { }\n\n  getItemList(){\n    return this.http.get(environment.apiURL+'/Inventorys').toPromise();\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { Order } from './order.model';\nimport { OrderItem } from './order-item.model';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n  formData:Order;\n  orderItems: OrderItem[];\n  constructor(private http: HttpClient) { }\n\n  saveOrUpdateOrder() {\n    var body = {\n      ...this.formData,\n      OrderLines: this.orderItems\n    };\n    return this.http.post(environment.apiURL + '/Orders', body);\n  }\n\n  postOrders(){\n    var body = {\n      ...this.formData,\n      OrderLines: this.orderItems\n    };\n    return this.http.post(environment.apiURL + '/Orders', body);\n  }\n\n  putOrders(){\n    var body = {\n      ...this.formData,\n      OrderLines: this.orderItems\n    };\n    return this.http.put(environment.apiURL + '/Orders/' + this.formData.OrderId, body);\n  }\n\n  getOrderList() {\n    return this.http.get(environment.apiURL + '/Orders').toPromise();\n  }\n\n  getOrderByID(id:number):any {\n    return this.http.get(environment.apiURL + '/Orders/'+id).toPromise();\n  }\n\n  deleteOrder(id:number) {\n    return this.http.delete(environment.apiURL + '/Orders/'+id).toPromise();\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { PaymentDetail } from './payment-detail.model';\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentDetailService {\n  formData:PaymentDetail\n  list: PaymentDetail[];\n\n  constructor(private http:HttpClient) { }\n\n  postPaymentDetail(){\n    return this.http.post(environment.apiURL + \"/PaymentDetail\", this.formData)\n  }\n\n  PutPaymentDetail(){\n    return this.http.put(environment.apiURL + \"/PaymentDetail/\" + this.formData.PMId , this.formData)\n  }\n  DeletePaymentDetail(id){\n    return this.http.delete(environment.apiURL + \"/PaymentDetail/\" + id)\n  }\n  refressList(){\n    this.http.get(environment.apiURL + \"/PaymentDetail\")\n        .toPromise()\n        .then(res => this.list = res as PaymentDetail[])\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { BehaviorSubject } from 'rxjs';\nimport { Todoitemnode } from './todoitemnode.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleCtlService {\n\n  constructor(private http: HttpClient) { \n\n  }\n\n  getTreeList(){\n    return this.http.get(environment.apiURL+'/CtlDiscovery').toPromise();\n   }\n}\n\n\n\n","import { Injectable } from '@angular/core';\nimport { FormBuilder, Validators,FormGroup } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n  rolesAdded = [];\n  selectedCtl = [];\n  constructor(private fb:FormBuilder,private http:HttpClient) { }\n\n  formModel = this.fb.group({\n    Id:[''],\n    RoleName:['',Validators.required],\n    SelectedControllers:[''],\n  });\n\n  postRoles(){\n    var body = {\n      RoleName: this.formModel.value.RoleName,\n      SelectedControllers: this.selectedCtl\n    }\n    console.log(this.selectedCtl);\n    return this.http.post(environment.apiURL + '/ApplicationRole', body);\n  }\n\n  putRoles(){\n    var body = {\n      Id:this.formModel.value.Id,\n      RoleName: this.formModel.value.RoleName,\n      SelectedControllers: this.selectedCtl\n    }\n    return this.http.put(environment.apiURL + '/ApplicationRole/' + this.formModel.value.Id ,body);\n  }\n\n  getRolesList() {\n    return this.http.get(environment.apiURL + '/ApplicationRole').toPromise();\n  }\n\n  getRoleByID(id:string):any{\n    return this.http.get(environment.apiURL + '/ApplicationRole/'+id).toPromise();\n  }\n\n  deleteRole(id:number) {\n    return this.http.delete(environment.apiURL + '/ApplicationRole/'+id).toPromise();\n  }\n\n  onDelete(item:any){\n    var index = this.rolesAdded.indexOf(item.Id);\n    if (index > -1) {\n      this.rolesAdded.splice(index, 1);\n      var indexctl = this.selectedCtl.indexOf(item);\n      this.selectedCtl.splice(indexctl,1);\n    }\n  }\n\n  onAdd(item:any):void{\n    var index = this.rolesAdded.indexOf(item.Id);\n    if(index <= -1){\n        this.rolesAdded.push(item.Id);\n        this.selectedCtl.push(item);\n    }\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormBuilder,Validators, FormGroup, FormArray, FormControl } from '@angular/forms';\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from 'src/environments/environment';\nimport { RoleService } from './role.service';\nimport { element } from '@angular/core/src/render3';\nimport { Role } from './role.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  rolesList: Role[];\n  rolesAdded = [];\n  constructor(private roleService:RoleService,private fb:FormBuilder,private http: HttpClient) {\n    this.getRoles();\n   }\n\n  formModel = this.fb.group({\n    UserName: ['', Validators.required],\n    Email: ['', Validators.email],\n    FullName: [''],\n    Passwords: this.fb.group({\n      Password: ['', [Validators.required, Validators.minLength(4)]],\n      ConfirmPassword: ['', Validators.required]\n    }, { validator: this.comparePasswords })\n\n  });\n\n   userroleModel = this.fb.group({\n    UserId: [''],\n    UserName: ['', Validators.required],\n    Roles: ['']\n  });\n\n\n  comparePasswords(fb: FormGroup) {\n    let confirmPswrdCtrl = fb.get('ConfirmPassword');\n    //passwordMismatch\n    //confirmPswrdCtrl.errors={passwordMismatch:true}\n    if (confirmPswrdCtrl.errors == null || 'passwordMismatch' in confirmPswrdCtrl.errors) {\n      if (fb.get('Password').value != confirmPswrdCtrl.value)\n        confirmPswrdCtrl.setErrors({ passwordMismatch: true });\n      else\n        confirmPswrdCtrl.setErrors(null);\n    }\n  }\n\n  \n  onDelete(item:any){\n    var index = this.rolesAdded.indexOf(item.Name);\n    if (index > -1) {\n      this.rolesAdded.splice(index, 1);\n    }\n  }\n\n  onAdd(item:any):void{\n    var index = this.rolesAdded.indexOf(item.Name);\n    if(index <= -1){\n      this.rolesAdded.push(item.Name);\n    }\n  }\n\n  register() {\n    var body = {\n      UserName: this.formModel.value.UserName,\n      Email: this.formModel.value.Email,\n      FullName: this.formModel.value.FullName,\n      Password: this.formModel.value.Passwords.Password\n    };\n    return this.http.post(environment.apiURL + '/ApplicationUser/Register', body);\n  }\n\n  putUser(){\n    var body = {\n      UserId: this.userroleModel.value.UserId,\n      UserName: this.userroleModel.value.UserName,\n      Roles: this.userroleModel.value.Roles\n    };\n    return this.http.put(environment.apiURL + '/Access/' + this.userroleModel.value.UserId,body);\n  }\n\n  login(formData) {\n    return this.http.post(environment.apiURL + '/ApplicationUser/Login', formData);\n  }\n\n  getUserProfile() {\n    return this.http.get(environment.apiURL + '/UserProfile');\n  }\n\n  getUserRoles(){\n    return this.http.get(environment.apiURL + '/Access').toPromise();\n  }\n\n  getRoles(){\n    this.roleService.getRolesList().then(res => this.rolesList  = res as Role[]);;\n  }\n\n  deleteUser(id:string){\n    return this.http.delete(environment.apiURL + '/Access/' + id).toPromise();\n  }\n\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"col-md-8 offset-md-2\\\">\\n      <div class=\\\"jumbotron\\\">\\n        <h1 class=\\\"display-4 text-center\\\"><i class=\\\"fas fa-chalkboard-teacher\\\"></i>Login</h1>\\n      <hr>\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n          <form #form='ngForm' autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Username</label>\\n                <input class=\\\"form-control\\\" #UserName=\\\"ngModel\\\" name=\\\"UserName\\\" [(ngModel)]=\\\"formModel.UserName\\\" required>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" #Password=\\\"ngModel\\\" name=\\\"Password\\\" [(ngModel)]=\\\"formModel.Password\\\" required>\\n              </div>\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-md-8 offset-md-2\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block\\\" [disabled]=\\\"form.invalid\\\">Login</button>\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/shared/user.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  formModel = {\n    UserName: '',\n    Password: ''\n  }\n  constructor(private service: UserService, private router: Router, private toastr: ToastrService) { }\n\n  ngOnInit() {\n    if (localStorage.getItem('token') != null)\n      this.router.navigateByUrl('/home');\n  }\n\n  onSubmit(form: NgForm) {\n    this.service.login(form.value).subscribe(\n      (res: any) => {\n        localStorage.setItem('token', res.token);\n        this.router.navigateByUrl('/home');\n      },\n      err => {\n        if (err.status == 400)\n          this.toastr.error('Incorrect username or password.', 'Authentication failed.');\n        else\n          console.log(err);\n      }\n    );\n  }\n  \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvcmVnaXN0cmF0aW9uL3JlZ2lzdHJhdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-menus></app-menus>\\n<div class=\\\"container\\\">\\n  <div class=\\\"col-md-8 offset-md-2\\\">\\n      <div class=\\\"jumbotron\\\">\\n          <h1 class=\\\"display-4 text-center\\\"><i class=\\\"fas fa-users\\\"></i>Registration</h1>\\n        <hr>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n              <form [formGroup]=\\\"service.formModel\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit()\\\">\\n                  <div class=\\\"form-group required\\\">\\n                    <label>Username</label>\\n                    <input class=\\\"form-control\\\" formControlName=\\\"UserName\\\">\\n                    <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('UserName').touched && service.formModel.get('UserName').errors?.required\\\">This field is mandatory.</label>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <label>Email</label>\\n                    <input class=\\\"form-control\\\" formControlName=\\\"Email\\\">\\n                    <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('Email').touched && service.formModel.get('Email').errors?.email\\\">Invalid email address.</label>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <label>Full Name</label>\\n                    <input class=\\\"form-control\\\" formControlName=\\\"FullName\\\">\\n                  </div>\\n                  <div formGroupName=\\\"Passwords\\\">\\n                    <div class=\\\"form-group required\\\">\\n                      <label>Password</label>\\n                      <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"Password\\\">\\n                      <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('Passwords.Password').touched && service.formModel.get('Passwords.Password').errors?.required\\\">This field is mandatory.</label>\\n                      <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('Passwords.Password').touched && service.formModel.get('Passwords.Password').errors?.minlength\\\">Minimum 4 characters required.</label>\\n                    </div>\\n                    <div class=\\\"form-group required\\\">\\n                      <label>Confirm Password</label>\\n                      <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"ConfirmPassword\\\">\\n                      <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('Passwords.ConfirmPassword').touched && service.formModel.get('Passwords.ConfirmPassword').errors?.required\\\">This field is mandatory.</label>\\n                      <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('Passwords.ConfirmPassword').touched && service.formModel.get('Passwords.ConfirmPassword').errors?.passwordMismatch\\\">Confirm Password does not match.</label>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col-md-8 offset-md-2\\\">\\n                      <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block\\\" [disabled]=\\\"!service.formModel.valid\\\">Sign Up</button>\\n                    </div>\\n                  </div>\\n                </form>\\n          </div>\\n        </div>\\n      </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/shared/user.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  constructor(public service: UserService, private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.service.formModel.reset();\n  }\n\n  onSubmit() {\n    this.service.register().subscribe(\n      (res: any) => {\n        if (res.Succeeded) {\n          this.service.formModel.reset();\n          this.toastr.success('New user created!', 'Registration successful.');\n        } else {\n          res.Errors.forEach(element => {\n            switch (element.Code) {\n              case 'DuplicateUserName':\n                this.toastr.error('Username is already taken','Registration failed.');\n                break;\n\n              default:\n              this.toastr.error(element.Description,'Registration failed.');\n                break;\n            }\n          });\n        }\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n  \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJyb2xlcy91c2Vycm9sZS91c2Vycm9sZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<form [formGroup]=\\\"service.userroleModel\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit()\\\">\\n  <input hidden class=\\\"form-control\\\" formControlName=\\\"UserId\\\">\\n  <div class=\\\"form-group required\\\">\\n    <label>UserName</label>\\n    <input class=\\\"form-control\\\" formControlName=\\\"UserName\\\">\\n    <label class=\\\"text-danger\\\" *ngIf=\\\"service.userroleModel.get('UserName').touched && service.userroleModel.get('UserName').errors?.required\\\">This field is mandatory.</label>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Roles</label>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-5\\\">\\n        <table class=\\\"table table-hover\\\">\\n          <tr *ngFor=\\\"let item of service.rolesList\\\">\\n            <td>{{item.Name}}</td>\\n            <td><i class=\\\"fas fa-minus\\\" (click)=\\\"onDelete(item)\\\"></i></td>\\n            <td><i class=\\\"fas fa-plus\\\" (click)=\\\"onAdd(item)\\\"></i></td>\\n          </tr>\\n        </table>     \\n      </div>\\n      <div class=\\\"col-md-5\\\">\\n        <table class=\\\"table table-hover\\\">\\n          <tr *ngFor=\\\"let item of service.rolesAdded\\\">\\n            <td>{{item}}</td>\\n          </tr>\\n        </table>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block\\\" [disabled]=\\\"!service.userroleModel.valid\\\">Submit</button>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/shared/user.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { RoleService } from 'src/app/shared/role.service';\nimport { Role } from 'src/app/shared/role.model';\n\n@Component({\n  selector: 'app-userrole',\n  templateUrl: './userrole.component.html',\n  styleUrls: ['./userrole.component.css']\n})\nexport class UserroleComponent implements OnInit {\n\n  rolesAdded = [];\n  constructor(private service:UserService,private router: Router,\n    private toastr:ToastrService) { }\n\n  ngOnInit() {\n\n  }\n\n  onSubmit(){\n    this.service.userroleModel.value.Roles = this.service.rolesAdded;\n    this.service.putUser().subscribe(res => {\n      this.service.userroleModel.reset();\n      this.toastr.success(\"Submitted Successfully\",\"User Roles\");\n    })\n  }\n\n  onDelete(item:any){\n    this.service.onDelete(item);\n  }\n\n  onAdd(item:any):void{\n    this.service.onAdd(item);\n  }\n  \n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJyb2xlcy91c2Vycm9sZWxpc3QvdXNlcnJvbGVsaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<table class=\\\"table table-hover\\\">\\n    <tr *ngFor=\\\"let item of userroleList\\\">\\n      <td (click)=\\\"populateForm(item)\\\">{{item.UserName}}</td>\\n      <td>\\n        <i class=\\\"fa fa-trash-alt fa-lg text-danger\\\" (click)=\\\"onUserDelete(item.UserId)\\\"></i>\\n      </td>\\n    </tr>\\n  </table>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/shared/user.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormBuilder } from '@angular/forms';\nimport { RoleService } from 'src/app/shared/role.service';\n\n@Component({\n  selector: 'app-userrolelist',\n  templateUrl: './userrolelist.component.html',\n  styleUrls: ['./userrolelist.component.css']\n})\nexport class UserrolelistComponent implements OnInit {\n\n  userroleList;\n  constructor(private service:UserService,private router: Router,\n    private toastr:ToastrService) { }\n\n  ngOnInit() {\n    this.refressList();\n  }\n\n  populateForm(item){\n    this.service.userroleModel.setValue({\n      UserId:item.UserId,\n      UserName:item.UserName,\n      Roles:item.Roles\n    });\n    this.service.rolesAdded = item.Roles;\n    console.log(this.service.rolesAdded);\n  }\n\n\n\n  refressList(){\n    this.service.getUserRoles().then(res => this.userroleList = res);\n  }\n\n  onUserDelete(id: string) {\n    if (confirm('Are you sure to delete this record?')) {\n      this.service.deleteUser(id).then(res => {\n        this.refressList();\n        this.toastr.warning(\"Deleted Successfully\", \"Restaurent App.\");\n      });\n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJyb2xlcy91c2Vycm9sZXMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-menus></app-menus>\\n<div class=\\\"jumbotron\\\">\\n  <h1 class=\\\"display-4 text-center\\\">User Roles Register</h1>\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-8\\\">\\n      <app-userrole></app-userrole>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n      <app-userrolelist></app-userrolelist>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-userroles',\n  templateUrl: './userroles.component.html',\n  styleUrls: ['./userroles.component.css']\n})\nexport class UserrolesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURL: 'http://localhost:2394/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}