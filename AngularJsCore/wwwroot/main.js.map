{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.interceptor.ts","webpack:///./src/app/category/category-detail/category-detail.component.css","webpack:///./src/app/category/category-detail/category-detail.component.html","webpack:///./src/app/category/category-detail/category-detail.component.ts","webpack:///./src/app/category/category-list/category-list.component.css","webpack:///./src/app/category/category-list/category-list.component.html","webpack:///./src/app/category/category-list/category-list.component.ts","webpack:///./src/app/category/category.component.css","webpack:///./src/app/category/category.component.html","webpack:///./src/app/category/category.component.ts","webpack:///./src/app/customers/customer-detail/customer-detail.component.css","webpack:///./src/app/customers/customer-detail/customer-detail.component.html","webpack:///./src/app/customers/customer-detail/customer-detail.component.ts","webpack:///./src/app/customers/customer-list/customer-list.component.css","webpack:///./src/app/customers/customer-list/customer-list.component.html","webpack:///./src/app/customers/customer-list/customer-list.component.ts","webpack:///./src/app/customers/customers.component.css","webpack:///./src/app/customers/customers.component.html","webpack:///./src/app/customers/customers.component.ts","webpack:///./src/app/dailyanimalgrow/dailyanimalgrow-detail/dailyanimalgrow-detail.component.css","webpack:///./src/app/dailyanimalgrow/dailyanimalgrow-detail/dailyanimalgrow-detail.component.html","webpack:///./src/app/dailyanimalgrow/dailyanimalgrow-detail/dailyanimalgrow-detail.component.ts","webpack:///./src/app/dailyanimalgrow/dailyanimalgrow-list/dailyanimalgrow-list.component.css","webpack:///./src/app/dailyanimalgrow/dailyanimalgrow-list/dailyanimalgrow-list.component.html","webpack:///./src/app/dailyanimalgrow/dailyanimalgrow-list/dailyanimalgrow-list.component.ts","webpack:///./src/app/dailyanimalgrow/dailyanimalgrow.component.css","webpack:///./src/app/dailyanimalgrow/dailyanimalgrow.component.html","webpack:///./src/app/dailyanimalgrow/dailyanimalgrow.component.ts","webpack:///./src/app/dailyanimalgrow/viewwithstandard/viewwithstandard.component.css","webpack:///./src/app/dailyanimalgrow/viewwithstandard/viewwithstandard.component.html","webpack:///./src/app/dailyanimalgrow/viewwithstandard/viewwithstandard.component.ts","webpack:///./src/app/error/forbidden/forbidden.component.css","webpack:///./src/app/error/forbidden/forbidden.component.html","webpack:///./src/app/error/forbidden/forbidden.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/inventory/inventory-detail/inventory-detail.component.css","webpack:///./src/app/inventory/inventory-detail/inventory-detail.component.html","webpack:///./src/app/inventory/inventory-detail/inventory-detail.component.ts","webpack:///./src/app/inventory/inventory-list/inventory-list.component.css","webpack:///./src/app/inventory/inventory-list/inventory-list.component.html","webpack:///./src/app/inventory/inventory-list/inventory-list.component.ts","webpack:///./src/app/inventory/inventory.component.css","webpack:///./src/app/inventory/inventory.component.html","webpack:///./src/app/inventory/inventory.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/menus/menus.component.css","webpack:///./src/app/menus/menus.component.html","webpack:///./src/app/menus/menus.component.ts","webpack:///./src/app/orders/order-items/order-items.component.css","webpack:///./src/app/orders/order-items/order-items.component.html","webpack:///./src/app/orders/order-items/order-items.component.ts","webpack:///./src/app/orders/order/order.component.css","webpack:///./src/app/orders/order/order.component.html","webpack:///./src/app/orders/order/order.component.ts","webpack:///./src/app/orders/orders.component.css","webpack:///./src/app/orders/orders.component.html","webpack:///./src/app/orders/orders.component.ts","webpack:///./src/app/payment-details/payment-detail-list/payment-detail-list.component.css","webpack:///./src/app/payment-details/payment-detail-list/payment-detail-list.component.html","webpack:///./src/app/payment-details/payment-detail-list/payment-detail-list.component.ts","webpack:///./src/app/payment-details/payment-detail/payment-detail.component.css","webpack:///./src/app/payment-details/payment-detail/payment-detail.component.html","webpack:///./src/app/payment-details/payment-detail/payment-detail.component.ts","webpack:///./src/app/payment-details/payment-details.component.css","webpack:///./src/app/payment-details/payment-details.component.html","webpack:///./src/app/payment-details/payment-details.component.ts","webpack:///./src/app/project/project-detail/project-detail.component.css","webpack:///./src/app/project/project-detail/project-detail.component.html","webpack:///./src/app/project/project-detail/project-detail.component.ts","webpack:///./src/app/project/project-list/project-list.component.css","webpack:///./src/app/project/project-list/project-list.component.html","webpack:///./src/app/project/project-list/project-list.component.ts","webpack:///./src/app/project/project.component.css","webpack:///./src/app/project/project.component.html","webpack:///./src/app/project/project.component.ts","webpack:///./src/app/projectaccess/projectaccess-detail/projectaccess-detail.component.css","webpack:///./src/app/projectaccess/projectaccess-detail/projectaccess-detail.component.html","webpack:///./src/app/projectaccess/projectaccess-detail/projectaccess-detail.component.ts","webpack:///./src/app/projectaccess/projectaccess-list/projectaccess-list.component.css","webpack:///./src/app/projectaccess/projectaccess-list/projectaccess-list.component.html","webpack:///./src/app/projectaccess/projectaccess-list/projectaccess-list.component.ts","webpack:///./src/app/projectaccess/projectaccess.component.css","webpack:///./src/app/projectaccess/projectaccess.component.html","webpack:///./src/app/projectaccess/projectaccess.component.ts","webpack:///./src/app/receipt/receipt-header/receipt-header.component.css","webpack:///./src/app/receipt/receipt-header/receipt-header.component.html","webpack:///./src/app/receipt/receipt-header/receipt-header.component.ts","webpack:///./src/app/receipt/receipt-line/receipt-line.component.css","webpack:///./src/app/receipt/receipt-line/receipt-line.component.html","webpack:///./src/app/receipt/receipt-line/receipt-line.component.ts","webpack:///./src/app/receipt/receipt.component.css","webpack:///./src/app/receipt/receipt.component.html","webpack:///./src/app/receipt/receipt.component.ts","webpack:///./src/app/roles/role-ctl/role-ctl.component.css","webpack:///./src/app/roles/role-ctl/role-ctl.component.html","webpack:///./src/app/roles/role-ctl/role-ctl.component.ts","webpack:///./src/app/roles/role/role.component.css","webpack:///./src/app/roles/role/role.component.html","webpack:///./src/app/roles/role/role.component.ts","webpack:///./src/app/roles/roles.component.css","webpack:///./src/app/roles/roles.component.html","webpack:///./src/app/roles/roles.component.ts","webpack:///./src/app/saleinvoice/saleinvoice-header/saleinvoice-header.component.css","webpack:///./src/app/saleinvoice/saleinvoice-header/saleinvoice-header.component.html","webpack:///./src/app/saleinvoice/saleinvoice-header/saleinvoice-header.component.ts","webpack:///./src/app/saleinvoice/saleinvoice-line/saleinvoice-line.component.css","webpack:///./src/app/saleinvoice/saleinvoice-line/saleinvoice-line.component.html","webpack:///./src/app/saleinvoice/saleinvoice-line/saleinvoice-line.component.ts","webpack:///./src/app/saleinvoice/saleinvoice.component.css","webpack:///./src/app/saleinvoice/saleinvoice.component.html","webpack:///./src/app/saleinvoice/saleinvoice.component.ts","webpack:///./src/app/shared/category.service.ts","webpack:///./src/app/shared/customer.service.ts","webpack:///./src/app/shared/dailyanimalgrow.service.ts","webpack:///./src/app/shared/insitestatus.service.ts","webpack:///./src/app/shared/inventory.service.ts","webpack:///./src/app/shared/item.service.ts","webpack:///./src/app/shared/order.service.ts","webpack:///./src/app/shared/payment-detail.service.ts","webpack:///./src/app/shared/project.service.ts","webpack:///./src/app/shared/projectaccess.service.ts","webpack:///./src/app/shared/receipt.service.ts","webpack:///./src/app/shared/role-ctl.service.ts","webpack:///./src/app/shared/role.service.ts","webpack:///./src/app/shared/saleinvoice.service.ts","webpack:///./src/app/shared/standard.service.ts","webpack:///./src/app/shared/standardname.service.ts","webpack:///./src/app/shared/uom.service.ts","webpack:///./src/app/shared/user.service.ts","webpack:///./src/app/shared/warehouse.service.ts","webpack:///./src/app/shared/warehouseaccess.service.ts","webpack:///./src/app/standard/standard-detail/standard-detail.component.css","webpack:///./src/app/standard/standard-detail/standard-detail.component.html","webpack:///./src/app/standard/standard-detail/standard-detail.component.ts","webpack:///./src/app/standard/standard-list/standard-list.component.css","webpack:///./src/app/standard/standard-list/standard-list.component.html","webpack:///./src/app/standard/standard-list/standard-list.component.ts","webpack:///./src/app/standard/standard.component.css","webpack:///./src/app/standard/standard.component.html","webpack:///./src/app/standard/standard.component.ts","webpack:///./src/app/standardname/standardname-detail/standardname-detail.component.css","webpack:///./src/app/standardname/standardname-detail/standardname-detail.component.html","webpack:///./src/app/standardname/standardname-detail/standardname-detail.component.ts","webpack:///./src/app/standardname/standardname-list/standardname-list.component.css","webpack:///./src/app/standardname/standardname-list/standardname-list.component.html","webpack:///./src/app/standardname/standardname-list/standardname-list.component.ts","webpack:///./src/app/standardname/standardname.component.css","webpack:///./src/app/standardname/standardname.component.html","webpack:///./src/app/standardname/standardname.component.ts","webpack:///./src/app/uom/uom-detail/uom-detail.component.css","webpack:///./src/app/uom/uom-detail/uom-detail.component.html","webpack:///./src/app/uom/uom-detail/uom-detail.component.ts","webpack:///./src/app/uom/uom-list/uom-list.component.css","webpack:///./src/app/uom/uom-list/uom-list.component.html","webpack:///./src/app/uom/uom-list/uom-list.component.ts","webpack:///./src/app/uom/uom.component.css","webpack:///./src/app/uom/uom.component.html","webpack:///./src/app/uom/uom.component.ts","webpack:///./src/app/user/login/login.component.css","webpack:///./src/app/user/login/login.component.html","webpack:///./src/app/user/login/login.component.ts","webpack:///./src/app/user/registration/registration.component.css","webpack:///./src/app/user/registration/registration.component.html","webpack:///./src/app/user/registration/registration.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/app/userroles/userrole/userrole.component.css","webpack:///./src/app/userroles/userrole/userrole.component.html","webpack:///./src/app/userroles/userrole/userrole.component.ts","webpack:///./src/app/userroles/userrolelist/userrolelist.component.css","webpack:///./src/app/userroles/userrolelist/userrolelist.component.html","webpack:///./src/app/userroles/userrolelist/userrolelist.component.ts","webpack:///./src/app/userroles/userroles.component.css","webpack:///./src/app/userroles/userroles.component.html","webpack:///./src/app/userroles/userroles.component.ts","webpack:///./src/app/visual-data/projectdaily/projectdaily.component.css","webpack:///./src/app/visual-data/projectdaily/projectdaily.component.html","webpack:///./src/app/visual-data/projectdaily/projectdaily.component.ts","webpack:///./src/app/visual-data/projectstatus/projectstatus.component.css","webpack:///./src/app/visual-data/projectstatus/projectstatus.component.html","webpack:///./src/app/visual-data/projectstatus/projectstatus.component.ts","webpack:///./src/app/visual-data/visual-data.component.css","webpack:///./src/app/visual-data/visual-data.component.html","webpack:///./src/app/visual-data/visual-data.component.ts","webpack:///./src/app/warehouse/warehouse-details/warehouse-details.component.css","webpack:///./src/app/warehouse/warehouse-details/warehouse-details.component.html","webpack:///./src/app/warehouse/warehouse-details/warehouse-details.component.ts","webpack:///./src/app/warehouse/warehouse-list/warehouse-list.component.css","webpack:///./src/app/warehouse/warehouse-list/warehouse-list.component.html","webpack:///./src/app/warehouse/warehouse-list/warehouse-list.component.ts","webpack:///./src/app/warehouse/warehouse.component.css","webpack:///./src/app/warehouse/warehouse.component.html","webpack:///./src/app/warehouse/warehouse.component.ts","webpack:///./src/app/warehouseaccess/warehouseaccess.component.css","webpack:///./src/app/warehouseaccess/warehouseaccess.component.html","webpack:///./src/app/warehouseaccess/warehouseaccess.component.ts","webpack:///./src/app/warehouseaccess/warehouseacess-detail/warehouseacess-detail.component.css","webpack:///./src/app/warehouseaccess/warehouseacess-detail/warehouseacess-detail.component.html","webpack:///./src/app/warehouseaccess/warehouseacess-detail/warehouseacess-detail.component.ts","webpack:///./src/app/warehouseaccess/warehouseacess-list/warehouseacess-list.component.css","webpack:///./src/app/warehouseaccess/warehouseacess-list/warehouseacess-list.component.html","webpack:///./src/app/warehouseaccess/warehouseacess-list/warehouseacess-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PaymentDetailsComponent } from './payment-details/payment-details.component';\r\nimport { OrdersComponent } from './orders/orders.component';\r\nimport { OrderComponent } from './orders/order/order.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { RegistrationComponent } from './user/registration/registration.component';\r\nimport { LoginComponent } from './user/login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { RolesComponent } from './roles/roles.component';\r\nimport { RoleComponent } from './roles/role/role.component';\r\nimport { UserrolesComponent } from './userroles/userroles.component';\r\nimport { ForbiddenComponent } from './error/forbidden/forbidden.component';\r\nimport { WarehouseComponent } from './warehouse/warehouse.component';\r\nimport { ProjectComponent } from './project/project.component';\r\nimport { CategoryComponent } from './category/category.component';\r\nimport { InventoryComponent } from './inventory/inventory.component';\r\nimport { WarehouseaccessComponent } from './warehouseaccess/warehouseaccess.component';\r\nimport { UomComponent } from './uom/uom.component';\r\nimport { ReceiptComponent } from './receipt/receipt.component';\r\nimport { ReceiptHeaderComponent } from './receipt/receipt-header/receipt-header.component';\r\nimport { StandardComponent } from './standard/standard.component';\r\nimport { DailyanimalgrowComponent } from './dailyanimalgrow/dailyanimalgrow.component';\r\nimport { ViewwithstandardComponent } from './dailyanimalgrow/viewwithstandard/viewwithstandard.component';\r\nimport { SaleinvoiceComponent } from './saleinvoice/saleinvoice.component';\r\nimport { SaleinvoiceHeaderComponent } from './saleinvoice/saleinvoice-header/saleinvoice-header.component';\r\nimport { CustomersComponent } from './customers/customers.component';\r\nimport { ProjectaccessComponent } from './projectaccess/projectaccess.component';\r\nimport { StandardnameComponent } from './standardname/standardname.component';\r\nimport { ProjectdailyComponent } from './visual-data/projectdaily/projectdaily.component';\r\nimport { ProjectstatusComponent } from './visual-data/projectstatus/projectstatus.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'user',component:UserComponent,children:[\r\n      {path:'registration',component:RegistrationComponent,canActivate:[AuthGuard]},\r\n      {path:'login',component:LoginComponent}\r\n  ]},\r\n  {path:'warehouse',component:WarehouseComponent,canActivate:[AuthGuard]},\r\n  {path:'warehouseaccess',component:WarehouseaccessComponent,canActivate:[AuthGuard]},\r\n  {path:'project',component:ProjectComponent,canActivate:[AuthGuard]},\r\n  {path:'projectaccess',component:ProjectaccessComponent,canActivate:[AuthGuard]},\r\n  {path:'customer',component:CustomersComponent,canActivate:[AuthGuard]},\r\n  {path:'category',component:CategoryComponent,canActivate:[AuthGuard]},\r\n  {path:'inventory',component:InventoryComponent,canActivate:[AuthGuard]},\r\n  {path:'uom',component:UomComponent,canActivate:[AuthGuard]},\r\n  {path:'standard',component:StandardComponent,canActivate:[AuthGuard]},\r\n  {path:'standardname',component:StandardnameComponent,canActivate:[AuthGuard]},\r\n  {path:'dailygrow',component:DailyanimalgrowComponent,canActivate:[AuthGuard]},\r\n  {path:'viewwithstandard',component:ViewwithstandardComponent,canActivate:[AuthGuard]},\r\n  {path:'error/403',component:ForbiddenComponent},\r\n  {path:'paymentcard',component:PaymentDetailsComponent,canActivate:[AuthGuard]},\r\n  {path:'projectdaily',component:ProjectdailyComponent,canActivate:[AuthGuard]},\r\n  {path:'projectstatus',component:ProjectstatusComponent,canActivate:[AuthGuard]},\r\n  {path:'orders',component:OrdersComponent,canActivate:[AuthGuard]},\r\n  {path:'order',children:[\r\n    {path:'',component:OrderComponent},\r\n    {path:'edit/:id',component:OrderComponent,canActivate:[AuthGuard]}\r\n  ]},\r\n  {path:'invoice',component:SaleinvoiceComponent,canActivate:[AuthGuard]},\r\n  {path:'invoiceheader',children:[\r\n    {path:'',component:SaleinvoiceHeaderComponent},\r\n    {path:'edit/:id',component:SaleinvoiceHeaderComponent,canActivate:[AuthGuard]}\r\n  ]},\r\n  {path:'receipt',component:ReceiptComponent,canActivate:[AuthGuard]},\r\n  {path:'receiptheader',children:[\r\n    {path:'',component:ReceiptHeaderComponent},\r\n    {path:'edit/:id',component:ReceiptHeaderComponent,canActivate:[AuthGuard]}\r\n  ]},\r\n  {path:'home',component:HomeComponent,canActivate:[AuthGuard]},\r\n  {path:'roles',component:RolesComponent},\r\n  {path:'role',children:[\r\n    {path:'',component:RoleComponent},\r\n    {path:'edit/:id',component:RoleComponent}\r\n  ]},\r\n  {\r\n    path:'userroles',component:UserrolesComponent,canActivate:[AuthGuard]\r\n  },\r\n  { path : '', redirectTo:'/user/login', pathMatch : 'full'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'AngularJs';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule,ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppComponent } from './app.component';\r\nimport { MenusComponent } from './menus/menus.component';\r\nimport { MaterialModule } from './material.module';\r\nimport { PaymentDetailsComponent } from \"./payment-details/payment-details.component\";\r\nimport { PaymentDetailComponent } from './payment-details/payment-detail/payment-detail.component';\r\nimport { PaymentDetailListComponent } from './payment-details/payment-detail-list/payment-detail-list.component';\r\nimport { PaymentDetailService } from './shared/payment-detail.service';\r\nimport { OrdersComponent } from './orders/orders.component';\r\nimport { OrderComponent } from './orders/order/order.component';\r\nimport { OrderItemsComponent } from './orders/order-items/order-items.component';\r\nimport { CustomerService } from './shared/customer.service';\r\nimport { ItemService } from './shared/item.service';\r\nimport { OrderService } from './shared/order.service';\r\nimport { UserComponent } from './user/user.component';\r\nimport { RegistrationComponent } from './user/registration/registration.component';\r\nimport { UserService } from './shared/user.service';\r\nimport { LoginComponent } from './user/login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AuthInterceptor } from './auth/auth.interceptor';\r\nimport { RolesComponent } from './roles/roles.component';\r\nimport { RoleComponent } from './roles/role/role.component';\r\nimport { RoleCtlComponent } from './roles/role-ctl/role-ctl.component';\r\nimport { RoleService } from './shared/role.service';\r\nimport { RoleCtlService } from './shared/role-ctl.service';\r\nimport { UserroleComponent } from './userroles/userrole/userrole.component';\r\nimport { UserrolelistComponent } from './userroles/userrolelist/userrolelist.component';\r\nimport { UserrolesComponent } from './userroles/userroles.component';\r\nimport { ForbiddenComponent } from './error/forbidden/forbidden.component';\r\nimport { WarehouseComponent } from './warehouse/warehouse.component';\r\nimport { WarehouseDetailsComponent } from './warehouse/warehouse-details/warehouse-details.component';\r\nimport { WarehouseListComponent } from './warehouse/warehouse-list/warehouse-list.component';\r\nimport { WarehouseService } from './shared/warehouse.service';\r\nimport { ProjectComponent } from './project/project.component';\r\nimport { ProjectDetailComponent } from './project/project-detail/project-detail.component';\r\nimport { ProjectListComponent } from './project/project-list/project-list.component';\r\nimport { MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\r\nimport { CategoryComponent } from './category/category.component';\r\nimport { CategoryDetailComponent } from './category/category-detail/category-detail.component';\r\nimport { CategoryListComponent } from './category/category-list/category-list.component';\r\nimport { CategoryService } from './shared/category.service';\r\nimport { InventoryComponent } from './inventory/inventory.component';\r\nimport { InventoryDetailComponent } from './inventory/inventory-detail/inventory-detail.component';\r\nimport { InventoryListComponent } from './inventory/inventory-list/inventory-list.component';\r\nimport { InventoryService } from './shared/inventory.service';\r\nimport { WarehouseaccessComponent } from './warehouseaccess/warehouseaccess.component';\r\nimport { WarehouseacessDetailComponent } from './warehouseaccess/warehouseacess-detail/warehouseacess-detail.component';\r\nimport { WarehouseacessListComponent } from './warehouseaccess/warehouseacess-list/warehouseacess-list.component';\r\nimport { WarehouseaccessService } from './shared/warehouseaccess.service';\r\nimport { UomComponent } from './uom/uom.component';\r\nimport { UomDetailComponent } from './uom/uom-detail/uom-detail.component';\r\nimport { UomListComponent } from './uom/uom-list/uom-list.component';\r\nimport { UomService } from './shared/uom.service';\r\nimport { ReceiptService } from './shared/receipt.service';\r\nimport { ReceiptComponent } from './receipt/receipt.component';\r\nimport { ReceiptHeaderComponent } from './receipt/receipt-header/receipt-header.component';\r\nimport { ReceiptLineComponent } from './receipt/receipt-line/receipt-line.component';\r\nimport { InsitestatusService } from './shared/insitestatus.service';\r\nimport { StandardComponent } from './standard/standard.component';\r\nimport { StandardDetailComponent } from './standard/standard-detail/standard-detail.component';\r\nimport { StandardListComponent } from './standard/standard-list/standard-list.component';\r\nimport { StandardService } from './shared/standard.service';\r\nimport { DailyanimalgrowComponent } from './dailyanimalgrow/dailyanimalgrow.component';\r\nimport { DailyanimalgrowDetailComponent } from './dailyanimalgrow/dailyanimalgrow-detail/dailyanimalgrow-detail.component';\r\nimport { DailyanimalgrowListComponent } from './dailyanimalgrow/dailyanimalgrow-list/dailyanimalgrow-list.component';\r\nimport { DailyanimalgrowService } from './shared/dailyanimalgrow.service';\r\nimport { ViewwithstandardComponent } from './dailyanimalgrow/viewwithstandard/viewwithstandard.component';\r\nimport { SaleinvoiceComponent } from './saleinvoice/saleinvoice.component';\r\nimport { SaleinvoiceService } from './shared/saleinvoice.service';\r\nimport { SaleinvoiceHeaderComponent } from './saleinvoice/saleinvoice-header/saleinvoice-header.component';\r\nimport { SaleinvoiceLineComponent } from './saleinvoice/saleinvoice-line/saleinvoice-line.component';\r\nimport { CustomersComponent } from './customers/customers.component';\r\nimport { CustomerDetailComponent } from './customers/customer-detail/customer-detail.component';\r\nimport { CustomerListComponent } from './customers/customer-list/customer-list.component';\r\nimport { ProjectService } from './shared/project.service';\r\nimport { ProjectaccessComponent } from './projectaccess/projectaccess.component';\r\nimport { ProjectaccessDetailComponent } from './projectaccess/projectaccess-detail/projectaccess-detail.component';\r\nimport { ProjectaccessListComponent } from './projectaccess/projectaccess-list/projectaccess-list.component';\r\nimport { StandardnameComponent } from './standardname/standardname.component';\r\nimport { StandardnameService } from './shared/standardname.service';\r\nimport { StandardnameDetailComponent } from './standardname/standardname-detail/standardname-detail.component';\r\nimport { StandardnameListComponent } from './standardname/standardname-list/standardname-list.component';\r\nimport { VisualDataComponent } from './visual-data/visual-data.component';\r\nimport { ProjectdailyComponent } from './visual-data/projectdaily/projectdaily.component';\r\nimport { ProjectstatusComponent } from './visual-data/projectstatus/projectstatus.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PaymentDetailsComponent,\r\n    PaymentDetailComponent,\r\n    PaymentDetailListComponent,\r\n    OrdersComponent,\r\n    OrderComponent,\r\n    OrderItemsComponent,\r\n    MenusComponent,\r\n    UserComponent,\r\n    RegistrationComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    RolesComponent,\r\n    RoleComponent,\r\n    RoleCtlComponent,\r\n    UserroleComponent,\r\n    UserrolelistComponent,\r\n    UserrolesComponent,\r\n    ForbiddenComponent,\r\n    WarehouseComponent,\r\n    WarehouseDetailsComponent,\r\n    WarehouseListComponent,\r\n    ProjectComponent,\r\n    ProjectDetailComponent,\r\n    ProjectListComponent,\r\n    CategoryComponent,\r\n    CategoryDetailComponent,\r\n    CategoryListComponent,\r\n    InventoryComponent,\r\n    InventoryDetailComponent,\r\n    InventoryListComponent,\r\n    WarehouseaccessComponent,\r\n    WarehouseacessDetailComponent,\r\n    WarehouseacessListComponent,\r\n    UomComponent,\r\n    UomDetailComponent,\r\n    UomListComponent,\r\n    ReceiptComponent,\r\n    ReceiptHeaderComponent,\r\n    ReceiptLineComponent,\r\n    StandardComponent,\r\n    StandardDetailComponent,\r\n    StandardListComponent,\r\n    DailyanimalgrowComponent,\r\n    DailyanimalgrowDetailComponent,\r\n    DailyanimalgrowListComponent,\r\n    ViewwithstandardComponent,\r\n    SaleinvoiceComponent,\r\n    SaleinvoiceHeaderComponent,\r\n    SaleinvoiceLineComponent,\r\n    CustomersComponent,\r\n    CustomerDetailComponent,\r\n    CustomerListComponent,\r\n    ProjectaccessComponent,\r\n    ProjectaccessDetailComponent,\r\n    ProjectaccessListComponent,\r\n    StandardnameComponent,\r\n    StandardnameDetailComponent,\r\n    StandardnameListComponent,\r\n    VisualDataComponent,\r\n    ProjectdailyComponent,\r\n    ProjectstatusComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    ToastrModule.forRoot(),\r\n  ],\r\n  entryComponents:[OrderItemsComponent,ReceiptLineComponent,SaleinvoiceLineComponent],\r\n  providers: [PaymentDetailService,CustomerService,ItemService,\r\n    OrderService,UserService,WarehouseService,CategoryService,InventoryService,WarehouseaccessService,\r\n    UomService,RoleService,RoleCtlService,ReceiptService,InsitestatusService,StandardService,\r\n    StandardnameService ,DailyanimalgrowService,SaleinvoiceService,CustomerService,ProjectService,{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: AuthInterceptor,\r\n    multi: true\r\n  },\r\n  { provide: MAT_MOMENT_DATE_ADAPTER_OPTIONS, useValue: { useUtc: true } }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot,Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router){\r\n\r\n  }\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): boolean {\r\n      if (localStorage.getItem('token') != null)\r\n      return true;\r\n    else {\r\n      this.router.navigate(['/user/login']);\r\n      return false;\r\n  }\r\n}\r\n\r\n}","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { tap } from \"rxjs/operators\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private router: Router) {\r\n\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (localStorage.getItem('token') != null) {\r\n            const clonedReq = req.clone({\r\n                headers: req.headers.set('Authorization', 'Bearer ' + localStorage.getItem('token'))\r\n            });\r\n            return next.handle(clonedReq).pipe(\r\n                tap(\r\n                    succ => { },\r\n                    err => {\r\n                        if (err.status == 401){\r\n                            localStorage.removeItem('token');\r\n                            this.router.navigateByUrl('/user/login');\r\n                        }\r\n                        else if(err.status == 403){\r\n                            this.router.navigateByUrl('/error/403');\r\n                        }\r\n                    }\r\n                )\r\n            )\r\n        }\r\n        else\r\n            return next.handle(req.clone());\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3J5L2NhdGVnb3J5LWRldGFpbC9jYXRlZ29yeS1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\">\\r\\n  <input type=\\\"hidden\\\" name=\\\"CategoryId\\\" [value]=\\\"service.formData.CategoryId\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <div class=\\\"input-group\\\">\\r\\n      <div class=\\\"input-group-prepend\\\">\\r\\n        <div class=\\\"input-group-text bg-white\\\">\\r\\n            <i class=\\\"fas fa-align-right\\\" [class.green-icon]=\\\"CategoryName.valid\\\" [class.red-icon]=\\\"CategoryName.invalid\\\"></i>\\r\\n        </div>\\r\\n      </div>\\r\\n      <input name=\\\"CategoryName\\\" #CategoryName=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.CategoryName\\\" class=\\\"form-control\\\" placeholder=\\\"CategoryName\\\" required>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <button class=\\\"btn btn-success btn-lg btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\"><i class=\\\"fas fa-database\\\"></i>Submit</button>\\r\\n  </div>\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { CategoryService } from 'src/app/shared/category.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Category } from 'src/app/shared/category.model';\r\n\r\n@Component({\r\n  selector: 'app-category-detail',\r\n  templateUrl: './category-detail.component.html',\r\n  styleUrls: ['./category-detail.component.css']\r\n})\r\nexport class CategoryDetailComponent implements OnInit {\r\n\r\n  constructor(public service:CategoryService,\r\n    private toastr:ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.resetForm();\r\n  }\r\n\r\n  resetForm(form?:NgForm){\r\n    if(form!=null)\r\n      form.resetForm();\r\n    this.service.formData = {\r\n      CategoryId:0,\r\n      CategoryName:''\r\n    }\r\n  }\r\n\r\n  onSubmit(form:NgForm){\r\n    if(this.service.formData.CategoryId == 0){\r\n      this.insertRecord(form);\r\n    }\r\n    else{\r\n      this.updateRecord(form);\r\n    }\r\n  }\r\n\r\n  \r\n  insertRecord(form:NgForm){\r\n    this.service.postCategoryDetail().subscribe(\r\n      res=>{\r\n        this.service.list.data.push(res as Category);\r\n        this.service.list._updateChangeSubscription();\r\n        this.resetForm(form);\r\n        this.toastr.success(\"Submited successfully\",\"Category Detail Register\");\r\n      },\r\n      err=>{\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  updateRecord(form:NgForm){\r\n    this.service.PutCategoryDetail().subscribe(\r\n      res=>{\r\n        let index = this.service.list.data.findIndex(x=>x.CategoryId == this.service.formData.CategoryId);\r\n        this.service.list.data[index].CategoryId = this.service.formData.CategoryId;\r\n        this.service.list.data[index].CategoryName = this.service.formData.CategoryName;\r\n        this.service.list._updateChangeSubscription();\r\n        this.resetForm(form);\r\n        this.toastr.info(\"Submited successfully\",\"Category Detail Register\");\r\n      },\r\n      err=>{\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3J5L2NhdGVnb3J5LWxpc3QvY2F0ZWdvcnktbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12 mat-elevation-z8\\\">  \\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <mat-form-field>\\r\\n              <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n            </mat-form-field>\\r\\n        </div>         \\r\\n      </div>  \\r\\n      <table class=\\\"table table-hover\\\" mat-table [dataSource]=\\\"service.list\\\" matSort>\\r\\n        <ng-container matColumnDef=\\\"CategoryName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Category Name </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"populateForm(element)\\\"> {{element.CategoryName}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"Delete\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> \\r\\n            \\r\\n          </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n              <i class=\\\"fa fa-trash-alt fa-lg text-danger\\\" (click)=\\\"onDelete(element.CategoryId)\\\"></i>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n      </table>\\r\\n      <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n    </div>\\r\\n  </div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { CategoryService } from 'src/app/shared/category.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Category } from 'src/app/shared/category.model';\r\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-category-list',\r\n  templateUrl: './category-list.component.html',\r\n  styleUrls: ['./category-list.component.css']\r\n})\r\nexport class CategoryListComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['CategoryName','Delete'];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(public service:CategoryService,private toastr:ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.service.getCategory().then(res=> {\r\n      this.service.list = new MatTableDataSource(res as Array<Category>);\r\n      this.service.list.paginator = this.paginator;\r\n      this.service.list.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  populateForm(pd:Category){\r\n    this.service.formData = Object.assign({},pd);\r\n }\r\n\r\n applyFilter(filterValue: string) {\r\n  this.service.list.filter = filterValue.trim().toLowerCase();\r\n\r\n  if (this.service.list.paginator) {\r\n    this.service.list.paginator.firstPage();\r\n  }\r\n}\r\n\r\n onDelete(PMId){\r\n   if(confirm('Are you sure to delete this record?')){\r\n     this.service.DeleteCategoryDetail(PMId).subscribe(\r\n       res => {\r\n        let index = this.service.list.data.findIndex(x=>x.CategoryId == PMId);\r\n        this.service.list.data.splice(index,1);\r\n        this.service.list._updateChangeSubscription();\r\n         this.toastr.warning(\"Deleted successfully\",\"Category Detail Register\");\r\n       },\r\n       err => {\r\n         console.log(err);\r\n       }\r\n     )\r\n   }\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3J5L2NhdGVnb3J5LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-menus></app-menus>\\r\\n<div class=\\\"jumbotron\\\">\\r\\n  <h1 class=\\\"display-4 text-center\\\">Category Register</h1>\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <app-category-detail></app-category-detail>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      <app-category-list></app-category-list>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-category',\r\n  templateUrl: './category.component.html',\r\n  styleUrls: ['./category.component.css']\r\n})\r\nexport class CategoryComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVycy9jdXN0b21lci1kZXRhaWwvY3VzdG9tZXItZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\">\\r\\n  <input type=\\\"hidden\\\" name=\\\"CustomerId\\\" [value]=\\\"service.formData.CustomerId\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <div class=\\\"input-group\\\">\\r\\n      <div class=\\\"input-group-prepend\\\">\\r\\n        <div class=\\\"input-group-text bg-white\\\">\\r\\n            <i class=\\\"fas fa-fingerprint\\\" [class.green-icon]=\\\"CustomerCD.valid\\\" [class.red-icon]=\\\"CustomerCD.invalid\\\"></i>\\r\\n        </div>\\r\\n      </div>\\r\\n      <input name=\\\"CustomerCD\\\" #CustomerCD=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.CustomerCD\\\" class=\\\"form-control\\\" placeholder=\\\"Customer Id\\\" required>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <div class=\\\"input-group\\\">\\r\\n      <div class=\\\"input-group-prepend\\\">\\r\\n        <div class=\\\"input-group-text bg-white\\\">\\r\\n            <i class=\\\"fas fa-address-book\\\" [class.green-icon]=\\\"CustomerName.valid\\\" [class.red-icon]=\\\"CustomerName.invalid\\\"></i>\\r\\n        </div>\\r\\n      </div>\\r\\n      <input name=\\\"CustomerName\\\" #CustomerName=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.CustomerName\\\" class=\\\"form-control\\\" placeholder=\\\"Customer Name\\\" required>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <button class=\\\"btn btn-success btn-lg btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\"><i class=\\\"fas fa-database\\\"></i>Submit</button>\\r\\n  </div>\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CustomerService } from 'src/app/shared/customer.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Customer } from 'src/app/shared/customer.model';\r\n\r\n@Component({\r\n  selector: 'app-customer-detail',\r\n  templateUrl: './customer-detail.component.html',\r\n  styleUrls: ['./customer-detail.component.css']\r\n})\r\nexport class CustomerDetailComponent implements OnInit {\r\n\r\n  constructor(public service:CustomerService,private toastr:ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.resetForm();\r\n  }\r\n\r\n  resetForm(form?:NgForm){\r\n    if(form!=null)\r\n      form.resetForm();\r\n    this.service.formData = {\r\n      CustomerId:0,\r\n      CustomerCD:'',\r\n      CustomerName:''\r\n    }\r\n  }\r\n\r\n  onSubmit(form:NgForm){\r\n    if(this.service.formData.CustomerId == 0){\r\n      this.insertRecord(form);\r\n    }\r\n    else{\r\n      this.updateRecord(form);\r\n    }\r\n  }\r\n\r\n  \r\n  insertRecord(form:NgForm){\r\n    this.service.postCustomersDetail().subscribe(\r\n      (res:any)=>{\r\n\r\n        if(res.ErrorCode == 0){\r\n          this.service.list.data.push(res as Customer);\r\n          this.service.list._updateChangeSubscription();\r\n          this.resetForm(form);\r\n          this.toastr.success(\"Submited successfully\",\"Customer Register\");\r\n        }\r\n        else if(res.ErrorCode == '2601'){\r\n          this.toastr.error('Customer is already taken','Customer failed.');\r\n        }\r\n        else{\r\n          this.toastr.error('Customer is failed','Customer failed.');\r\n        }\r\n      },\r\n      err=>{\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  updateRecord(form:NgForm){\r\n    this.service.PutCustomersDetail().subscribe(\r\n      res=>{\r\n        let index = this.service.list.data.findIndex(x=>x.CustomerId == this.service.formData.CustomerId);\r\n        this.service.list.data[index].CustomerId = this.service.formData.CustomerId;\r\n        this.service.list.data[index].CustomerCD = this.service.formData.CustomerCD;\r\n        this.service.list.data[index].CustomerName = this.service.formData.CustomerName;\r\n        this.service.list._updateChangeSubscription();\r\n        this.resetForm(form);\r\n        this.toastr.info(\"Submited successfully\",\"Customer Register\");\r\n      },\r\n      err=>{\r\n        console.log(\"error here\")\r\n        console.log(err);\r\n      })\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVycy9jdXN0b21lci1saXN0L2N1c3RvbWVyLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12 mat-elevation-z8\\\">  \\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n          <mat-form-field>\\r\\n            <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n          </mat-form-field>\\r\\n      </div>         \\r\\n    </div>  \\r\\n    <table class=\\\"table table-hover\\\" mat-table [dataSource]=\\\"service.list\\\" matSort>\\r\\n      <ng-container matColumnDef=\\\"CustomerCD\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Customer Id </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"populateForm(element)\\\"> {{element.CustomerCD}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"CustomerName\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Customer Name </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"populateForm(element)\\\"> {{element.CustomerName}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"Delete\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> \\r\\n          \\r\\n        </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n            <i class=\\\"fa fa-trash-alt fa-lg text-danger\\\" (click)=\\\"onDelete(element.CustomerId)\\\"></i>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { CustomerService } from 'src/app/shared/customer.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\r\nimport { Customer } from 'src/app/shared/customer.model';\r\n\r\n@Component({\r\n  selector: 'app-customer-list',\r\n  templateUrl: './customer-list.component.html',\r\n  styleUrls: ['./customer-list.component.css']\r\n})\r\nexport class CustomerListComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['CustomerCD','CustomerName','Delete'];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(public service:CustomerService,private toastr:ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.refressList();\r\n  }\r\n\r\n  populateForm(pd:Customer){\r\n    this.service.formData = Object.assign({},pd);\r\n }\r\n\r\n refressList(){\r\n  this.service.getCustomerList().then(res=> {\r\n    this.service.list = new MatTableDataSource(res as Array<Customer>);\r\n    this.service.list.paginator = this.paginator;\r\n    this.service.list.sort = this.sort;\r\n  });\r\n}\r\n\r\napplyFilter(filterValue: string) {\r\n  this.service.list.filter = filterValue.trim().toLowerCase();\r\n\r\n  if (this.service.list.paginator) {\r\n    this.service.list.paginator.firstPage();\r\n  }\r\n}\r\n\r\n onDelete(PMId){\r\n   if(confirm('Are you sure to delete this record?')){\r\n     this.service.DeleteCustomersDetail(PMId).subscribe(\r\n       res => {\r\n        let index = this.service.list.data.findIndex(x=>x.CustomerId == PMId);\r\n        this.service.list.data.splice(index,1);\r\n        this.service.list._updateChangeSubscription();\r\n         this.toastr.warning(\"Deleted successfully\",\"Customer Register\");\r\n       },\r\n       err => {\r\n         console.log(err);\r\n       }\r\n     )\r\n   }\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVycy9jdXN0b21lcnMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-menus></app-menus>\\r\\n<div class=\\\"jumbotron\\\">\\r\\n  <h1 class=\\\"display-4 text-center\\\">Customers Register</h1>\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <app-customer-detail></app-customer-detail>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      <app-customer-list></app-customer-list>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-customers',\r\n  templateUrl: './customers.component.html',\r\n  styleUrls: ['./customers.component.css']\r\n})\r\nexport class CustomersComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RhaWx5YW5pbWFsZ3Jvdy9kYWlseWFuaW1hbGdyb3ctZGV0YWlsL2RhaWx5YW5pbWFsZ3Jvdy1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"jumbotron\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n              <form [formGroup]=\\\"service.formModel\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit()\\\">\\r\\n                <input hidden class=\\\"form-control\\\" formControlName=\\\"DailyGrowId\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Project</label>\\r\\n                    <select class=\\\"form-control\\\" formControlName=\\\"ProjectId\\\"   (change)=\\\"service.onChangeProject($event)\\\">\\r\\n                      <option value=\\\"0\\\" >-Select Project-</option>\\r\\n                      <option *ngFor=\\\"let item of projectList\\\" value=\\\"{{item.ProjectId}}\\\">{{item.ProjectName}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Warehouse</label>\\r\\n                    <select class=\\\"form-control\\\" formControlName=\\\"WarehouseId\\\" (change)=\\\"onChangeWarehouse($event)\\\">\\r\\n                      <option value=\\\"0\\\">-Select Warehouse-</option>\\r\\n                      <option *ngFor=\\\"let item of service.warehouseList\\\" value=\\\"{{item.WarehouseId}}\\\">{{item.WarehouseName}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Inventory</label>\\r\\n                    <select class=\\\"form-control\\\" formControlName=\\\"InventoryId\\\" (change)=\\\"onChangeInventory($event)\\\">\\r\\n                      <option value=\\\"0\\\">-Select Inventory-</option>\\r\\n                      <option *ngFor=\\\"let item of inventoryList\\\" value=\\\"{{item.InventoryId}}\\\">{{item.InventoryDesr}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <mat-form-field>\\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"DateGrow\\\" matInput [matDatepicker]=\\\"myDatepicker1\\\" placeholder=\\\"Choose date\\\">\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"myDatepicker1\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #myDatepicker1></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"form-group required\\\">\\r\\n                  <label>Weight</label>\\r\\n                  <input class=\\\"form-control\\\" formControlName=\\\"Weight\\\">\\r\\n                  <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('Weight').touched && service.formModel.get('Weight').errors?.required\\\">This field is mandatory.</label>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-dark\\\"><i class=\\\"fa fa-database\\\"></i> Submit</button>\\r\\n                  <a class=\\\"btn btn-outline-dark ml-1\\\" routerLink=\\\"/viewwithstandard\\\"><i class=\\\"fa fa-table\\\"></i> View With Standard</a>\\r\\n                </div>\\r\\n              </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { DailyanimalgrowService } from 'src/app/shared/dailyanimalgrow.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ProjectService } from 'src/app/shared/project.service';\r\nimport { WarehouseService } from 'src/app/shared/warehouse.service';\r\nimport { InventoryService } from 'src/app/shared/inventory.service';\r\nimport { Dailyanimalgrow } from 'src/app/shared/dailyanimalgrow.model';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-dailyanimalgrow-detail',\r\n  templateUrl: './dailyanimalgrow-detail.component.html',\r\n  styleUrls: ['./dailyanimalgrow-detail.component.css']\r\n})\r\nexport class DailyanimalgrowDetailComponent implements OnInit {\r\n\r\n  projectList;\r\n  warehouseList;\r\n  inventoryList;\r\n  constructor(private service:DailyanimalgrowService,private toastr: ToastrService,private projectService:ProjectService,\r\n    private warehouseService:WarehouseService,private inventoryService:InventoryService) { }\r\n\r\n  ngOnInit() {\r\n    this.getActiveProject();\r\n    this.getInventory();\r\n    this.service.formModel.reset();\r\n    this.service.formModel.patchValue({\r\n      DailyGrowId:0\r\n    });\r\n  }\r\n\r\n  onSubmit(){\r\n    if(this.service.formModel.value.DailyGrowId == 0){\r\n      this.postDailyGrow();\r\n    }\r\n    else{\r\n      this.putDailyGrow();\r\n    }\r\n  }\r\n\r\n  postDailyGrow(){\r\n    this.service.formModel.value.DateGrow = this.getLocalDate(this.service.formModel.value.DateGrow.toLocaleDateString());\r\n    this.service.postDailyGrow().subscribe( (res:any) => {\r\n      this.service.list.data.push(res);\r\n      this.service.list._updateChangeSubscription();\r\n      this.service.formModel.reset();\r\n      this.service.formModel.patchValue({\r\n        DailyGrowId:0\r\n      });\r\n      console.log('update list');\r\n      this.toastr.success('Animal grow created!', 'Animal grow successful.');\r\n    });\r\n  }\r\n\r\n  putDailyGrow(){\r\n    console.log(\"do\");\r\n    if(this.service.formModel.value.DateGrow.toLocaleString().indexOf('/') !== -1){\r\n      this.service.formModel.value.DateGrow = this.getLocalDate(this.service.formModel.value.DateGrow.toLocaleDateString());\r\n    }\r\n    this.service.putDailyGrow().subscribe( (res:any) => {\r\n      let index = this.service.list.data.findIndex(x=>x.DailyGrowId == this.service.formModel.value.DailyGrowId);\r\n      this.service.list.data[index] = this.service.formModel.value;\r\n      this.service.list._updateChangeSubscription();\r\n      this.service.formModel.reset();\r\n      this.service.formModel.patchValue({\r\n        DailyGrowId:0\r\n      });\r\n      this.service.getDailyGrow();\r\n      this.toastr.success('Animal grow updated!', 'Animal grow successful.');\r\n    });\r\n  }\r\n\r\n  getActiveProject(){\r\n    this.projectService.getActiveProject().then(res => this.projectList = res);\r\n  }\r\n\r\n  getInventory(){\r\n    this.inventoryService.getInventoryAnimal().then(res=>this.inventoryList = res);\r\n  }\r\n\r\n  onChangeWarehouse(item){\r\n    let text = item.target.options[item.target.options.selectedIndex].text;\r\n    this.service.formModel.patchValue({\r\n      WarehouseName:text\r\n    });\r\n  }\r\n\r\n  onChangeInventory(item){\r\n    let text = item.target.options[item.target.options.selectedIndex].text;\r\n    this.service.formModel.patchValue({\r\n      InventoryDesc:text\r\n    });\r\n  }\r\n\r\n  getLocalDate(item:string){\r\n    var ldate = item.split('/');\r\n    var date = ldate[2] + '-' + ldate[0] + '-' + ldate[1];\r\n    return new Date(date);\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RhaWx5YW5pbWFsZ3Jvdy9kYWlseWFuaW1hbGdyb3ctbGlzdC9kYWlseWFuaW1hbGdyb3ctbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12 mat-elevation-z8\\\">  \\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n          <mat-form-field>\\r\\n            <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n          </mat-form-field>\\r\\n      </div>         \\r\\n    </div>  \\r\\n    <table class=\\\"table table-hover\\\" mat-table [dataSource]=\\\"service.list\\\" matSort>\\r\\n      <ng-container matColumnDef=\\\"ProjectName\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Project Name </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"service.populateForm(element)\\\"> {{element.ProjectName}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"WarehouseName\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Warehouse Name </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"service.populateForm(element)\\\"> {{element.WarehouseName}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"InventoryDesc\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Inventory Desc </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"service.populateForm(element)\\\"> {{element.InventoryDesc}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"DateGrow\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Date Grow </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"service.populateForm(element)\\\"> {{element.DateGrow | date}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"Weight\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Weight </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"service.populateForm(element)\\\"> {{element.Weight}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"Delete\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> \\r\\n          \\r\\n        </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n            <i class=\\\"fa fa-trash-alt fa-lg text-danger\\\" (click)=\\\"onDelete(element.DailyGrowId)\\\"></i>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { DailyanimalgrowService } from 'src/app/shared/dailyanimalgrow.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Dailyanimalgrow } from 'src/app/shared/dailyanimalgrow.model';\r\nimport { WarehouseService } from 'src/app/shared/warehouse.service';\r\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-dailyanimalgrow-list',\r\n  templateUrl: './dailyanimalgrow-list.component.html',\r\n  styleUrls: ['./dailyanimalgrow-list.component.css']\r\n})\r\nexport class DailyanimalgrowListComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['ProjectName','WarehouseName', 'InventoryDesc','DateGrow','Weight','Delete'];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(private service:DailyanimalgrowService,private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.getDailyGrow();\r\n  }\r\n\r\n  getDailyGrow(){\r\n    return this.service.getDailyGrow().then(res => {\r\n      this.service.list = new MatTableDataSource(res as Array<Dailyanimalgrow>);\r\n      this.service.list.paginator = this.paginator;\r\n      this.service.list.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  \r\n  applyFilter(filterValue: string) {\r\n    this.service.list.filter = filterValue.trim().toLowerCase();\r\n  \r\n    if (this.service.list.paginator) {\r\n      this.service.list.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n onDelete(PMId){\r\n  if(confirm('Are you sure to delete this record?')){\r\n    this.service.deleteDailyGrow(PMId).subscribe(\r\n      res => {\r\n        let index = this.service.list.data.findIndex(x=>x.DailyGrowId == PMId);\r\n        this.service.list.data.splice(index,1);\r\n        this.service.list._updateChangeSubscription();\r\n        this.toastr.warning(\"Deleted successfully\",\"Daily Grow Register\");\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    )\r\n  }\r\n }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RhaWx5YW5pbWFsZ3Jvdy9kYWlseWFuaW1hbGdyb3cuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-menus></app-menus>\\r\\n<div class=\\\"jumbotron\\\">\\r\\n  <h1 class=\\\"display-4 text-center\\\">Daily Animal Grow Register</h1>\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <app-dailyanimalgrow-detail></app-dailyanimalgrow-detail>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      <app-dailyanimalgrow-list></app-dailyanimalgrow-list>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dailyanimalgrow',\r\n  templateUrl: './dailyanimalgrow.component.html',\r\n  styleUrls: ['./dailyanimalgrow.component.css']\r\n})\r\nexport class DailyanimalgrowComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RhaWx5YW5pbWFsZ3Jvdy92aWV3d2l0aHN0YW5kYXJkL3ZpZXd3aXRoc3RhbmRhcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-menus></app-menus>\\r\\n<div class=\\\"jumbotron\\\">\\r\\n  <h1 class=\\\"display-4 text-center\\\">Animal Grow With Standard</h1>\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12 mat-elevation-z8\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-8\\\">\\r\\n            <form #form=\\\"ngForm\\\" (submit)=\\\"onSubmit()\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <select class=\\\"form-control\\\" name=\\\"projectId\\\" [(ngModel)]=\\\"projectId\\\">\\r\\n                    <option value=\\\"0\\\" >-Select Project-</option>\\r\\n                    <option *ngFor=\\\"let item of projectList\\\" value=\\\"{{item.ProjectId}}\\\">{{item.ProjectName}}</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <select class=\\\"form-control\\\" name=\\\"standardId\\\" [(ngModel)]=\\\"standardId\\\">\\r\\n                    <option value=\\\"0\\\" >-Select Standard-</option>\\r\\n                    <option *ngFor=\\\"let item of standardList\\\" value=\\\"{{item.StandardNameId}}\\\">{{item.Standard}}</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n                <button mat-button type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\">Load...</button>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-4\\\">\\r\\n              <mat-form-field>\\r\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n              </mat-form-field>\\r\\n          </div>\\r\\n      </div>\\r\\n      <table class=\\\"table table-hover\\\" mat-table [dataSource]=\\\"animalgrowList\\\" matSort>\\r\\n          <ng-container matColumnDef=\\\"ProjectName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Project Name </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.ProjectName}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"WarehouseName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Warehouse Name </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.WarehouseName}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"InventoryDesc\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Inventory Desc </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.InventoryDesc}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"Weight\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Acual Weight </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Weight}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"DateGrow\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Date Grow </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.DateGrow | date}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"ResultOfDay\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Standard </th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.ResultOfDay}} </td>\\r\\n            </ng-container>\\r\\n          <ng-container matColumnDef=\\\"NumberOfDay\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Number Of Day </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.NumberOfDay}} </td>\\r\\n          </ng-container>\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n        <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n    </div>\\r\\n \\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { DailyanimalgrowService } from 'src/app/shared/dailyanimalgrow.service';\r\nimport { ProjectService } from 'src/app/shared/project.service';\r\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\r\nimport { Animalgrowstandard } from 'src/app/shared/animalgrowstandard';\r\nimport { StandardnameService } from 'src/app/shared/standardname.service';\r\n\r\n@Component({\r\n  selector: 'app-viewwithstandard',\r\n  templateUrl: './viewwithstandard.component.html',\r\n  styleUrls: ['./viewwithstandard.component.css']\r\n})\r\nexport class ViewwithstandardComponent implements OnInit {\r\n\r\n  projectList;\r\n  standardList;\r\n  projectId:number;\r\n  standardId:number;\r\n  displayedColumns: string[] = ['ProjectName','WarehouseName', 'InventoryDesc','DateGrow','ResultOfDay','Weight','NumberOfDay'];\r\n  animalgrowList: MatTableDataSource<Animalgrowstandard>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(private service:DailyanimalgrowService,private projectService:ProjectService,private standardnameService:StandardnameService) { }\r\n\r\n  ngOnInit() {\r\n     this.getProject();\r\n     this.getStandard();\r\n  }\r\n\r\n  onSubmit(){\r\n    this.service.getDailyGrowWithStandard(this.projectId,this.standardId).then(res => {\r\n      this.animalgrowList = new MatTableDataSource(res as Array<Animalgrowstandard>);\r\n      this.animalgrowList.paginator = this.paginator;\r\n      this.animalgrowList.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  getStandard(){\r\n    this.standardnameService.getStandard().then(res => this.standardList = res);\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.animalgrowList.filter = filterValue.trim().toLowerCase();\r\n  \r\n    if (this.animalgrowList.paginator) {\r\n      this.animalgrowList.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getProject(){\r\n    this.projectService.getActiveProject().then(res=>this.projectList = res);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vycm9yL2ZvcmJpZGRlbi9mb3JiaWRkZW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-menus></app-menus>\\r\\n<div class=\\\"col-md-8 offset-md-5\\\">\\r\\n  <i class=\\\"fas fa-blind fa-10x\\\"></i>403 Forbidden\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-forbidden',\r\n  templateUrl: './forbidden.component.html',\r\n  styleUrls: ['./forbidden.component.css']\r\n})\r\nexport class ForbiddenComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-menus></app-menus>\\r\\n<div class=\\\"card m-5\\\" style=\\\"width:18rem\\\" *ngIf=\\\"userDetails\\\">\\r\\n  <ul class=\\\"list-group\\\">\\r\\n    <li class=\\\"list-group-item\\\"><strong>Username : </strong>{{userDetails.UserName}}</li>\\r\\n    <li class=\\\"list-group-item\\\"><strong>FullName : </strong>{{userDetails.FullName}}</li>\\r\\n    <li class=\\\"list-group-item\\\"><strong>Email : </strong>{{userDetails.Email}}</li>\\r\\n  </ul>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../shared/user.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  userDetails;\r\n  constructor(private router: Router, private service: UserService) { }\r\n\r\n  ngOnInit() {\r\n    this.service.getUserProfile().subscribe(\r\n      res => {\r\n        this.userDetails = res;\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      },\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ludmVudG9yeS9pbnZlbnRvcnktZGV0YWlsL2ludmVudG9yeS1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\">\\r\\n    <input type=\\\"hidden\\\" name=\\\"InventoryId\\\" [value]=\\\"service.formData.InventoryId\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"input-group\\\">\\r\\n        <div class=\\\"input-group-prepend\\\">\\r\\n          <div class=\\\"input-group-text bg-white\\\">\\r\\n              <i class=\\\"fas fas fa-tasks\\\" [class.green-icon]=\\\"InventoryDesr.valid\\\" [class.red-icon]=\\\"InventoryDesr.invalid\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n        <input name=\\\"InventoryDesr\\\" #InventoryDesr=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.InventoryDesr\\\" class=\\\"form-control\\\" placeholder=\\\"InventoryDesr\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"input-group\\\">\\r\\n        <div class=\\\"input-group-prepend\\\">\\r\\n          <div class=\\\"input-group-text bg-white\\\">\\r\\n              <i class=\\\"fas fa-dollar-sign\\\" [class.green-icon]=\\\"Price.valid\\\" [class.red-icon]=\\\"Price.invalid\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n        <input name=\\\"Price\\\" #Price=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Price\\\" class=\\\"form-control\\\" placeholder=\\\"Price\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <div class=\\\"input-group-text bg-white\\\">\\r\\n                <i class=\\\"fas fa-align-right\\\" [class.green-icon]=\\\"CategoryId.valid\\\" [class.red-icon]=\\\"CategoryId.invalid\\\"></i>\\r\\n            </div>\\r\\n          </div>\\r\\n          <select name=\\\"CategoryId\\\" #CategoryId=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.CategoryId\\\" class=\\\"form-control\\\"\\r\\n          [class.is-invalid]=\\\"service.formData.CategoryId==0\\\">\\r\\n            <option value=\\\"0\\\">-Select Category-</option>\\r\\n            <option *ngFor=\\\"let item of categoryList\\\" value=\\\"{{item.CategoryId}}\\\">{{item.CategoryName}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <div class=\\\"input-group-text bg-white\\\">\\r\\n                <i class=\\\"fas fa-align-right\\\" [class.green-icon]=\\\"UomId.valid\\\" [class.red-icon]=\\\"UomId.invalid\\\"></i>\\r\\n            </div>\\r\\n          </div>\\r\\n          <select name=\\\"UomId\\\" #UomId=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.UomId\\\" class=\\\"form-control\\\"\\r\\n          [class.is-invalid]=\\\"service.formData.UomId==0\\\">\\r\\n            <option value=\\\"0\\\">-Select Uom-</option>\\r\\n            <option *ngFor=\\\"let item of uomList\\\" value=\\\"{{item.UomId}}\\\">{{item.UOM}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n    </div>\\r\\n        \\r\\n    <div class=\\\"form-group\\\">\\r\\n      <button class=\\\"btn btn-success btn-lg btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\"><i class=\\\"fas fa-database\\\"></i>Submit</button>\\r\\n    </div>\\r\\n  </form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { InventoryService } from 'src/app/shared/inventory.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NgForm } from '@angular/forms';\r\nimport { CategoryService } from 'src/app/shared/category.service';\r\nimport { UomService } from 'src/app/shared/uom.service';\r\nimport { Uom } from 'src/app/shared/uom';\r\nimport { Inventory } from 'src/app/shared/inventory.model';\r\n\r\n@Component({\r\n  selector: 'app-inventory-detail',\r\n  templateUrl: './inventory-detail.component.html',\r\n  styleUrls: ['./inventory-detail.component.css']\r\n})\r\nexport class InventoryDetailComponent implements OnInit {\r\n\r\n  categoryList;\r\n  uomList:Uom[];\r\n  constructor(public service:InventoryService,private categoryService:CategoryService,\r\n    private toastr:ToastrService,private uomService:UomService) { }\r\n\r\n  ngOnInit() {\r\n    this.resetForm();\r\n    this.getCategory();\r\n    this.getUom();\r\n  }\r\n\r\n  resetForm(form?:NgForm){\r\n    if(form!=null)\r\n      form.resetForm();\r\n    this.service.formData = {\r\n      InventoryId:0,\r\n      InventoryDesr:'',\r\n      Price:0,\r\n      CategoryId:0,\r\n      UomId:0\r\n    }\r\n  }\r\n  getCategory(){\r\n    this.categoryService.getCategory().then(res => this.categoryList = res);\r\n  }\r\n\r\n  getUom(){\r\n    this.uomService.getUom().then(res => this.uomList = res as Uom[]);\r\n  }\r\n\r\n  onSubmit(form:NgForm){\r\n    if(this.service.formData.InventoryId == 0){\r\n      this.insertRecord(form);\r\n    }\r\n    else{\r\n      this.updateRecord(form);\r\n    }\r\n  }\r\n\r\n  \r\n  insertRecord(form:NgForm){\r\n    this.service.postInventoryDetail().subscribe(\r\n      res=>{\r\n        this.service.list.data.push(res as Inventory);\r\n        this.service.list._updateChangeSubscription();\r\n        this.resetForm(form);\r\n        this.toastr.success(\"Submited successfully\",\"Inventory Detail Register\");\r\n      },\r\n      err=>{\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  updateRecord(form:NgForm){\r\n    this.service.PutInventoryDetail().subscribe(\r\n      res=>{\r\n        let index = this.service.list.data.findIndex(x=>x.InventoryId == this.service.formData.InventoryId);\r\n        this.service.list.data[index].InventoryId = this.service.formData.InventoryId;\r\n        this.service.list.data[index].InventoryDesr = this.service.formData.InventoryDesr;\r\n        this.service.list.data[index].Price = this.service.formData.Price;\r\n        this.service.list.data[index].UomId = this.service.formData.UomId;\r\n        this.service.list.data[index].CategoryId = this.service.formData.CategoryId;\r\n        this.resetForm(form);\r\n        this.toastr.info(\"Submited successfully\",\"Warehouse Detail Register\");\r\n      },\r\n      err=>{\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ludmVudG9yeS9pbnZlbnRvcnktbGlzdC9pbnZlbnRvcnktbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"  <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 mat-elevation-z8\\\">  \\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-4\\\">\\r\\n              <mat-form-field>\\r\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n              </mat-form-field>\\r\\n          </div>         \\r\\n        </div>  \\r\\n        <table class=\\\"table table-hover\\\" mat-table [dataSource]=\\\"service.list\\\" matSort>\\r\\n          <ng-container matColumnDef=\\\"InventoryDesr\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Inventory </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"populateForm(element)\\\"> {{element.InventoryDesr}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"Price\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Price </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"populateForm(element)\\\"> {{element.Price}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"Delete\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> \\r\\n              \\r\\n            </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n                <i class=\\\"fa fa-trash-alt fa-lg text-danger\\\" (click)=\\\"onDelete(element.InventoryId)\\\"></i>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n        <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n      </div>\\r\\n    </div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Inventory } from 'src/app/shared/inventory.model';\r\nimport { InventoryService } from 'src/app/shared/inventory.service';\r\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-inventory-list',\r\n  templateUrl: './inventory-list.component.html',\r\n  styleUrls: ['./inventory-list.component.css']\r\n})\r\nexport class InventoryListComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['InventoryDesr','Price','Delete'];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(public service:InventoryService,\r\n    private toastr:ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.service.getInventory().then(res => {\r\n      this.service.list = new MatTableDataSource(res as Array<Inventory>);\r\n      this.service.list.paginator = this.paginator;\r\n      this.service.list.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  populateForm(pd:Inventory){\r\n    this.service.formData = Object.assign({},pd);\r\n }\r\n\r\n applyFilter(filterValue: string) {\r\n  this.service.list.filter = filterValue.trim().toLowerCase();\r\n\r\n  if (this.service.list.paginator) {\r\n    this.service.list.paginator.firstPage();\r\n  }\r\n}\r\n\r\n onDelete(PMId){\r\n   if(confirm('Are you sure to delete this record?')){\r\n     this.service.DeleteInventoryDetail(PMId).subscribe(\r\n       res => {\r\n        let index = this.service.list.data.findIndex(x=>x.InventoryId == PMId);\r\n        this.service.list.data.splice(index,1);\r\n        this.service.list._updateChangeSubscription();\r\n         this.toastr.warning(\"Deleted successfully\",\"Inventory Detail Register\");\r\n       },\r\n       err => {\r\n         console.log(err);\r\n       }\r\n     )\r\n   }\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ludmVudG9yeS9pbnZlbnRvcnkuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-menus></app-menus>\\r\\n<div class=\\\"jumbotron\\\">\\r\\n  <h1 class=\\\"display-4 text-center\\\">Inventory Register</h1>\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <app-inventory-detail></app-inventory-detail>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      <app-inventory-list></app-inventory-list>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-inventory',\r\n  templateUrl: './inventory.component.html',\r\n  styleUrls: ['./inventory.component.css']\r\n})\r\nexport class InventoryComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {MatMomentDateModule} from '@angular/material-moment-adapter';\r\n\r\nimport { \r\n  MatAutocompleteModule,\r\n  MatBadgeModule,\r\n  MatBottomSheetModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatStepperModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTreeModule} from \"@angular/material\";\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatDialogModule,\r\n    MatTreeModule,\r\n    MatDatepickerModule,\r\n    MatMomentDateModule\r\n  ],\r\n  exports:[\r\n    A11yModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class MaterialModule { }\r\n","module.exports = \"li .glyphicon {\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\n/* Highlighting rules for nav menu items */\\r\\n\\r\\nli.link-active a,\\r\\nli.link-active a:hover,\\r\\nli.link-active a:focus {\\r\\n    background-color: #4189C7;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n/* Keep the nav menu independent of scrolling and on top of other items */\\r\\n\\r\\n.main-nav {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    z-index: 1;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n    /* On small screens, convert the nav menu to a vertical sidebar */\\r\\n    .main-nav {\\r\\n        height: 100%;\\r\\n        width: calc(25% - 20px);\\r\\n    }\\r\\n    .navbar {\\r\\n        border-radius: 0px;\\r\\n        border-width: 0px;\\r\\n        height: 100%;\\r\\n    }\\r\\n    .navbar-header {\\r\\n        float: none;\\r\\n    }\\r\\n    .navbar-collapse {\\r\\n        border-top: 1px solid #444;\\r\\n        padding: 0px;\\r\\n    }\\r\\n    .navbar ul {\\r\\n        float: none;\\r\\n    }\\r\\n    .navbar li {\\r\\n        float: none;\\r\\n        font-size: 15px;\\r\\n        margin: 6px;\\r\\n    }\\r\\n    .navbar li a {\\r\\n        padding: 10px 16px;\\r\\n        border-radius: 4px;\\r\\n    }\\r\\n    .navbar a {\\r\\n        /* If a menu item's text is too long, truncate it */\\r\\n        width: 100%;\\r\\n        white-space: nowrap;\\r\\n        overflow: hidden;\\r\\n        text-overflow: ellipsis;\\r\\n    }\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVudXMvbWVudXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQSwwQ0FBMEM7O0FBQzFDOzs7SUFHSSx5QkFBeUI7SUFDekIsWUFBWTtBQUNoQjs7QUFFQSx5RUFBeUU7O0FBQ3pFO0lBQ0ksZUFBZTtJQUNmLE1BQU07SUFDTixPQUFPO0lBQ1AsUUFBUTtJQUNSLFVBQVU7QUFDZDs7QUFFQTtJQUNJLGlFQUFpRTtJQUNqRTtRQUNJLFlBQVk7UUFDWix1QkFBdUI7SUFDM0I7SUFDQTtRQUNJLGtCQUFrQjtRQUNsQixpQkFBaUI7UUFDakIsWUFBWTtJQUNoQjtJQUNBO1FBQ0ksV0FBVztJQUNmO0lBQ0E7UUFDSSwwQkFBMEI7UUFDMUIsWUFBWTtJQUNoQjtJQUNBO1FBQ0ksV0FBVztJQUNmO0lBQ0E7UUFDSSxXQUFXO1FBQ1gsZUFBZTtRQUNmLFdBQVc7SUFDZjtJQUNBO1FBQ0ksa0JBQWtCO1FBQ2xCLGtCQUFrQjtJQUN0QjtJQUNBO1FBQ0ksbURBQW1EO1FBQ25ELFdBQVc7UUFDWCxtQkFBbUI7UUFDbkIsZ0JBQWdCO1FBQ2hCLHVCQUF1QjtJQUMzQjtBQUNKIiwiZmlsZSI6InNyYy9hcHAvbWVudXMvbWVudXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImxpIC5nbHlwaGljb24ge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG59XHJcblxyXG4vKiBIaWdobGlnaHRpbmcgcnVsZXMgZm9yIG5hdiBtZW51IGl0ZW1zICovXHJcbmxpLmxpbmstYWN0aXZlIGEsXHJcbmxpLmxpbmstYWN0aXZlIGE6aG92ZXIsXHJcbmxpLmxpbmstYWN0aXZlIGE6Zm9jdXMge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzQxODlDNztcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLyogS2VlcCB0aGUgbmF2IG1lbnUgaW5kZXBlbmRlbnQgb2Ygc2Nyb2xsaW5nIGFuZCBvbiB0b3Agb2Ygb3RoZXIgaXRlbXMgKi9cclxuLm1haW4tbmF2IHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIHotaW5kZXg6IDE7XHJcbn1cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xyXG4gICAgLyogT24gc21hbGwgc2NyZWVucywgY29udmVydCB0aGUgbmF2IG1lbnUgdG8gYSB2ZXJ0aWNhbCBzaWRlYmFyICovXHJcbiAgICAubWFpbi1uYXYge1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICB3aWR0aDogY2FsYygyNSUgLSAyMHB4KTtcclxuICAgIH1cclxuICAgIC5uYXZiYXIge1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDBweDtcclxuICAgICAgICBib3JkZXItd2lkdGg6IDBweDtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB9XHJcbiAgICAubmF2YmFyLWhlYWRlciB7XHJcbiAgICAgICAgZmxvYXQ6IG5vbmU7XHJcbiAgICB9XHJcbiAgICAubmF2YmFyLWNvbGxhcHNlIHtcclxuICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgIzQ0NDtcclxuICAgICAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICB9XHJcbiAgICAubmF2YmFyIHVsIHtcclxuICAgICAgICBmbG9hdDogbm9uZTtcclxuICAgIH1cclxuICAgIC5uYXZiYXIgbGkge1xyXG4gICAgICAgIGZsb2F0OiBub25lO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgICAgICBtYXJnaW46IDZweDtcclxuICAgIH1cclxuICAgIC5uYXZiYXIgbGkgYSB7XHJcbiAgICAgICAgcGFkZGluZzogMTBweCAxNnB4O1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIH1cclxuICAgIC5uYXZiYXIgYSB7XHJcbiAgICAgICAgLyogSWYgYSBtZW51IGl0ZW0ncyB0ZXh0IGlzIHRvbyBsb25nLCB0cnVuY2F0ZSBpdCAqL1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICAgIH1cclxufVxyXG4iXX0= */\"","module.exports = \"<mat-toolbar>  \\r\\n  <mat-toolbar-row>\\r\\n    <span>MEDIVETGROUP</span>\\r\\n    <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" >\\r\\n      <mat-icon>more_vert</mat-icon>\\r\\n    </button>\\r\\n    <mat-menu #menu=\\\"matMenu\\\" >\\r\\n      <button mat-menu-item routerLink=\\\"/home\\\">\\r\\n        <mat-icon>voicemail</mat-icon>\\r\\n        <span>Profile</span>\\r\\n      </button>\\r\\n      <button mat-menu-item (click)=\\\"onLogout()\\\">\\r\\n        <mat-icon>home</mat-icon>\\r\\n        <span>Logout</span>\\r\\n      </button>\\r\\n      <button mat-menu-item routerLink=\\\"/user/registration\\\">\\r\\n        <mat-icon><i class=\\\"fas fa-user-plus\\\"></i></mat-icon>\\r\\n        <span>Register</span>\\r\\n      </button>\\r\\n      <button mat-menu-item routerLink=\\\"/userroles\\\">\\r\\n        <mat-icon><i class=\\\"fas fa-users-cog\\\"></i></mat-icon>\\r\\n        <span>User Setting</span>\\r\\n      </button>\\r\\n      <button mat-menu-item routerLink=\\\"/roles\\\">\\r\\n        <mat-icon><i class=\\\"fas fa-pencil-ruler\\\"></i></mat-icon>\\r\\n        <span>Roles Setting</span>\\r\\n      </button>\\r\\n      <button mat-menu-item routerLink=\\\"/warehouse\\\">\\r\\n        <mat-icon><i class=\\\"fas fa-warehouse\\\"></i></mat-icon>\\r\\n        <span>Warehouse</span>\\r\\n      </button>\\r\\n      <button mat-menu-item routerLink=\\\"/warehouseaccess\\\">\\r\\n        <mat-icon><i class=\\\"fas fa-warehouse\\\"></i></mat-icon>\\r\\n        <span>Warehouse Access</span>\\r\\n      </button>\\r\\n      <button mat-menu-item routerLink=\\\"/project\\\">\\r\\n        <mat-icon><i class=\\\"fas fa-project-diagram\\\"></i></mat-icon>\\r\\n        <span>Project</span>\\r\\n      </button>\\r\\n      <button mat-menu-item routerLink=\\\"/projectaccess\\\">\\r\\n        <mat-icon><i class=\\\"fas fa-project-diagram\\\"></i></mat-icon>\\r\\n        <span>Project Access</span>\\r\\n      </button>\\r\\n      <button mat-menu-item routerLink=\\\"/category\\\">\\r\\n        <mat-icon><i class=\\\"fas fas fa-align-right\\\"></i></mat-icon>\\r\\n        <span>Category</span>\\r\\n      </button>\\r\\n      <button mat-menu-item routerLink=\\\"/inventory\\\">\\r\\n        <mat-icon><i class=\\\"fas fa-boxes\\\"></i></mat-icon>\\r\\n        <span>Inventory</span>\\r\\n      </button>\\r\\n      <button mat-menu-item routerLink=\\\"/customer\\\">\\r\\n        <mat-icon><i class=\\\"fas fa-users\\\"></i></mat-icon>\\r\\n        <span>Customers</span>\\r\\n      </button>\\r\\n      <button mat-menu-item routerLink=\\\"/standardname\\\">\\r\\n        <mat-icon><i class=\\\"fab fa-amazon\\\"></i></mat-icon>\\r\\n        <span>Standard Name</span>\\r\\n      </button>\\r\\n      <button mat-menu-item routerLink=\\\"/standard\\\">\\r\\n        <mat-icon><i class=\\\"fab fa-amazon\\\"></i></mat-icon>\\r\\n        <span>Standard</span>\\r\\n      </button>\\r\\n      <button mat-menu-item routerLink=\\\"/uom\\\">\\r\\n        <mat-icon><i class=\\\"fas fa-boxes\\\"></i></mat-icon>\\r\\n        <span>Unit of Measure</span>\\r\\n      </button>\\r\\n      <button mat-menu-item routerLink=\\\"/paymentcard\\\">\\r\\n        <mat-icon>dialpad</mat-icon>\\r\\n        <span>Payment Card</span> \\r\\n      </button>\\r\\n    </mat-menu>\\r\\n    <button mat-icon-button [matMenuTriggerFor]=\\\"menupr\\\" >\\r\\n      <mat-icon><i class=\\\"fab fa-accusoft\\\"></i></mat-icon>\\r\\n    </button>\\r\\n    <mat-menu #menupr=\\\"matMenu\\\" >\\r\\n      <button mat-menu-item routerLink=\\\"/invoice\\\">\\r\\n        <mat-icon><i class=\\\"fas fa-sort-amount-up\\\"></i></mat-icon>\\r\\n        <span>Sale Invoice</span> \\r\\n      </button>\\r\\n      <button mat-menu-item routerLink=\\\"/receipt\\\">\\r\\n        <mat-icon><i class=\\\"fas fa-receipt\\\"></i></mat-icon>\\r\\n        <span>Receipt/Issue/Adjust</span> \\r\\n      </button>\\r\\n      <button mat-menu-item routerLink=\\\"/dailygrow\\\">\\r\\n        <mat-icon><i class=\\\"fas fa-calendar-day\\\"></i></mat-icon>\\r\\n        <span>Daily Animal Grow</span> \\r\\n      </button>\\r\\n    </mat-menu>\\r\\n    <button mat-icon-button [matMenuTriggerFor]=\\\"menureport\\\" >       \\r\\n        <mat-icon><i class=\\\"fas fa-american-sign-language-interpreting\\\"></i></mat-icon>\\r\\n    </button>\\r\\n    <mat-menu #menureport=\\\"matMenu\\\" >\\r\\n      <button mat-menu-item routerLink=\\\"/projectdaily\\\">\\r\\n        <mat-icon><i class=\\\"fas fa-sort-amount-up\\\"></i></mat-icon>\\r\\n        <span>Project Daily Performance</span> \\r\\n      </button>\\r\\n      <button mat-menu-item routerLink=\\\"/projectstatus\\\">\\r\\n        <mat-icon><i class=\\\"fas fa-receipt\\\"></i></mat-icon>\\r\\n        <span>Project Status</span> \\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-menus',\r\n  templateUrl: './menus.component.html',\r\n  styleUrls: ['./menus.component.css']\r\n})\r\nexport class MenusComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  \r\n  onLogout() {\r\n    localStorage.removeItem('token');\r\n    this.router.navigate(['/user/login']);\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVycy9vcmRlci1pdGVtcy9vcmRlci1pdGVtcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h4 class=\\\"dispaly-4\\\">Order Food Item</h4>\\r\\n<hr>\\r\\n<form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\">\\r\\n    \\r\\n    <input type=\\\"hidden\\\" name=\\\"OrderItemId\\\" [value]=\\\"formData.OrderItemId\\\">\\r\\n    <input type=\\\"hidden\\\"  name=\\\"OrderId\\\" #OrderId=\\\"ngModel\\\" [(ngModel)]=\\\"formData.OrderId\\\">\\r\\n  <input type=\\\"hidden\\\"  name=\\\"ItemName\\\" #ItemName=\\\"ngModel\\\" [(ngModel)]=\\\"formData.ItemName\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Food Item</label>\\r\\n    <select name=\\\"InventoryId\\\" #InventoryId=\\\"ngModel\\\" [(ngModel)]=\\\"formData.InventoryId\\\" class=\\\"form-control\\\" (change)=\\\"updatePrice($event.target)\\\"\\r\\n    [class.is-invalid]=\\\"!isValid && formData.InventoryId==0\\\">\\r\\n      <option value=\\\"0\\\">-Select-</option>\\r\\n      <option *ngFor=\\\"let item of itemList\\\" value=\\\"{{item.InventoryId}}\\\">{{item.InventoryDesr}}</option>\\r\\n    </select>\\r\\n  </div>\\r\\n  <div class=\\\"form-row\\\">\\r\\n    <div class=\\\"form-group col-md-6\\\">\\r\\n      <label>Price</label>\\r\\n      <div class=\\\"input-group\\\">\\r\\n        <div class=\\\"input-group-prepend\\\">\\r\\n          <div class=\\\"input-group-text\\\">$</div>\\r\\n        </div>\\r\\n        <input name=\\\"Price\\\" #Price=\\\"ngModel\\\" [(ngModel)]=\\\"formData.Price\\\" class=\\\"form-control\\\" readonly>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group col-md-6\\\">\\r\\n      <label>Quantity</label>\\r\\n      <input name=\\\"Quantity\\\" #Quantity=\\\"ngModel\\\" [(ngModel)]=\\\"formData.Quantity\\\" class=\\\"form-control\\\"\\r\\n      (keyup)=\\\"updateTotal()\\\" [class.is-invalid]=\\\"!isValid && formData.Quantity==0\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Total</label>\\r\\n    <div class=\\\"input-group\\\">\\r\\n      <div class=\\\"input-group-prepend\\\">\\r\\n        <div class=\\\"input-group-text\\\">$</div>\\r\\n      </div>\\r\\n      <input name=\\\"Total\\\" #Total=\\\"ngModel\\\" [(ngModel)]=\\\"formData.Total\\\" class=\\\"form-control\\\" readonly>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-dark\\\"><i class=\\\"fa fa-database\\\"></i> Submit</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark ml-1\\\" [mat-dialog-close]><i class=\\\"fa fa-close\\\"></i> Close</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material\";\r\nimport { OrderItem } from 'src/app/shared/order-item.model';\r\nimport { ItemService } from 'src/app/shared/item.service';\r\nimport { OrderService } from 'src/app/shared/order.service';\r\nimport { Item } from 'src/app/shared/item.model';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-order-items',\r\n  templateUrl: './order-items.component.html',\r\n  styleUrls: ['./order-items.component.css']\r\n})\r\nexport class OrderItemsComponent implements OnInit {\r\n  formData: OrderItem;\r\n  itemList: Item[];\r\n  isValid: boolean = true;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data,\r\n  public dialogRef: MatDialogRef<OrderItemsComponent>,\r\n  private itemService: ItemService,\r\n  private orderSevice: OrderService) { }\r\n\r\n  ngOnInit() {\r\n    this.itemService.getItemList().then(res => this.itemList = res as Item[]);\r\n    if (this.data.orderItemIndex == null)\r\n      this.formData = {\r\n        OrderItemId: 0,\r\n        OrderId: this.data.OrderId,\r\n        InventoryId: 0,\r\n        ItemName: '',\r\n        Price: 0,\r\n        Quantity: 0,\r\n        Total: 0\r\n      }\r\n      else\r\n      this.formData = Object.assign({}, this.orderSevice.orderItems[this.data.orderItemIndex]);\r\n      \r\n  }\r\n\r\n  updatePrice(ctrl) {\r\n    if (ctrl.selectedIndex == 0) {\r\n      this.formData.Price = 0;\r\n      this.formData.ItemName = '';\r\n    }\r\n    else {\r\n      this.formData.Price = this.itemList[ctrl.selectedIndex - 1].Price;\r\n      this.formData.ItemName = this.itemList[ctrl.selectedIndex - 1].InventoryDesr;\r\n    }\r\n    this.updateTotal();\r\n  }\r\n\r\n  updateTotal() {\r\n    this.formData.Total = parseFloat((this.formData.Quantity * this.formData.Price).toFixed(2));\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    if (this.validateForm(form.value)) {\r\n      if (this.data.orderItemIndex == null)\r\n        this.orderSevice.orderItems.push(form.value);\r\n      else\r\n        this.orderSevice.orderItems[this.data.orderItemIndex] = form.value;\r\n      this.dialogRef.close();\r\n    }\r\n  }\r\n\r\n  validateForm(formData: OrderItem) {\r\n    this.isValid = true;\r\n    if (formData.InventoryId == 0)\r\n      this.isValid = false;\r\n    else if (formData.Quantity == 0)\r\n      this.isValid = false;\r\n    return this.isValid;\r\n  }\r\n\r\n  \r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVycy9vcmRlci9vcmRlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-menus></app-menus>\\r\\n<div class=\\\"jumbotron\\\">\\r\\n  <h1 class=\\\"display-4 text-center\\\">Orders Register</h1>\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" *ngIf=\\\"service.formData\\\" (submit)=\\\"onSubmit(form)\\\">\\r\\n        <input type=\\\"hidden\\\" name=\\\"OrderId\\\" [value]=\\\"service.formData.OrderId\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Order No.</label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\">#</div>\\r\\n                </div>\\r\\n                <input name=\\\"OrderNo\\\" #OrderNo=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.OrderNo\\\" class=\\\"form-control\\\" readonly>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Customer</label>\\r\\n              <select name=\\\"CustomerId\\\" #CustomerId=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.CustomerId\\\" class=\\\"form-control\\\"\\r\\n              [class.is-invalid]=\\\"!isValid && service.formData.CustomerId==0\\\">\\r\\n                <option value=\\\"0\\\">-Select-</option>\\r\\n                <option *ngFor=\\\"let item of customerList\\\" value=\\\"{{item.CustomerId}}\\\">{{item.CustomerName}}</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Payment Method</label>\\r\\n              <select name=\\\"PMethod\\\" #PMethod=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.PMethod\\\" class=\\\"form-control\\\">\\r\\n                <option value=\\\"\\\">-Select-</option>\\r\\n                <option value=\\\"Cash\\\">Cash</option>\\r\\n                <option value=\\\"Card\\\">Card</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Grand Total</label>\\r\\n\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\">$</div>\\r\\n                </div>\\r\\n                <input name=\\\"GTotal\\\" #GTotal=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.GTotal\\\" class=\\\"form-control\\\" readonly>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- order items table-->\\r\\n        <table class=\\\"table table-borderless\\\">\\r\\n          <thead class=\\\"thead-light\\\">\\r\\n            <th>Food</th>\\r\\n            <th>Price</th>\\r\\n            <th>Quantity</th>\\r\\n            <th>Total</th>\\r\\n            <th>\\r\\n              <a class=\\\"btn btn-sm btn-success text-white\\\" (click)=\\\"AddOrEditOrderItem(null,service.formData.OrderId)\\\"><i class=\\\"fa fa-plus\\\"></i> Add Item</a>\\r\\n            </th>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngIf=\\\"service.orderItems.length==0\\\" [class.text-danger]=\\\"!isValid && service.orderItems.length==0\\\">\\r\\n              <td class=\\\"font-italic text-center\\\" colspan=\\\"5\\\">\\r\\n                No food item selected for this order.\\r\\n              </td>\\r\\n            </tr>\\r\\n\\r\\n            <tr *ngFor=\\\"let item of service.orderItems;let i=index;\\\">\\r\\n              <td>{{item.ItemName}}</td>\\r\\n              <td>{{item.Price}}</td>\\r\\n              <td>{{item.Quantity}}</td>\\r\\n              <td>{{item.Total}}</td>\\r\\n              <td>\\r\\n                <a class=\\\"btn btn-sm btn-info text-white\\\" (click)=\\\"AddOrEditOrderItem(i,service.formData.OrderId)\\\"><i class=\\\"fas fa-pencil-alt\\\"></i></a>\\r\\n                <a class=\\\"btn btn-sm btn-danger text-white ml-1\\\" (click)=\\\"onDeleteOrderItem(item.OrderItemId,i)\\\"><i class=\\\"fa fa-trash\\\"></i></a>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-dark\\\"><i class=\\\"fa fa-database\\\"></i> Submit</button>\\r\\n          <a class=\\\"btn btn-outline-dark ml-1\\\" routerLink=\\\"/orders\\\"><i class=\\\"fa fa-table\\\"></i> View Orders</a>\\r\\n        </div>\\r\\n      </form>\\r\\n  \\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { CustomerService } from './../../shared/customer.service';\r\nimport { OrderService } from './../../shared/order.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { OrderItemsComponent } from '../order-items/order-items.component';\r\nimport { Customer } from 'src/app/shared/customer.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-order',\r\n  templateUrl: './order.component.html',\r\n  styleUrls: ['./order.component.css']\r\n})\r\n\r\nexport class OrderComponent implements OnInit {\r\n\r\n  customerList: Customer[];\r\n  isValid: boolean = true;\r\n\r\n  constructor(public service:OrderService,\r\n    private dialog: MatDialog,\r\n    private customerService: CustomerService,\r\n    private toastr: ToastrService,\r\n    private router: Router,\r\n    private currentRoute: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    let orderId = this.currentRoute.snapshot.paramMap.get('id');\r\n    if(orderId==null)\r\n    this.resetForm();\r\n    else{\r\n      this.service.getOrderByID(parseInt(orderId)).then(res=>{\r\n        this.service.formData = res.orders;\r\n        this.service.orderItems = res.orderlines;\r\n      });\r\n    }\r\n\r\n    this.customerService.getCustomerList().then(res => this.customerList = res as Customer[]);\r\n  }\r\n\r\n  resetForm(form?:NgForm){\r\n    if(form = null)\r\n    form.resetForm();\r\n    this.service.formData = {\r\n      OrderId: 0,\r\n      OrderNo: Math.floor(100000+Math.random()*900000).toString(),\r\n      CustomerId: 0,\r\n      PMethod: '',\r\n      GTotal:0 ,\r\n      DeletedOrderItemIDs: ''\r\n    };\r\n    this.service.orderItems = [];\r\n  }\r\n\r\n  AddOrEditOrderItem(orderItemIndex, OrderId) {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.disableClose = true;\r\n    dialogConfig.width = \"50%\";\r\n    dialogConfig.data = { orderItemIndex, OrderId };\r\n    this.dialog.open(OrderItemsComponent, dialogConfig).afterClosed().subscribe(res => {\r\n      this.updateGrandTotal();\r\n    });\r\n  }\r\n\r\n  onDeleteOrderItem(orderItemID: number, i: number) {\r\n    if (orderItemID != null)\r\n      this.service.formData.DeletedOrderItemIDs += orderItemID + \",\";\r\n    this.service.orderItems.splice(i, 1);\r\n    this.updateGrandTotal();\r\n  }\r\n\r\n  updateGrandTotal() {\r\n    this.service.formData.GTotal = this.service.orderItems.reduce((prev, curr) => {\r\n      return prev + curr.Total;\r\n    }, 0);\r\n    this.service.formData.GTotal = parseFloat(this.service.formData.GTotal.toFixed(2));\r\n  }\r\n\r\n  validateForm() {\r\n    this.isValid = true;\r\n    if (this.service.formData.CustomerId == 0)\r\n      this.isValid = false;\r\n    else if (this.service.orderItems.length == 0)\r\n      this.isValid = false;\r\n    return this.isValid;\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    if(this.service.formData.OrderId == 0){\r\n      this.insertRecord(form);\r\n    }\r\n    else{\r\n      this.updateRecord(form);\r\n    }\r\n  }\r\n\r\n  insertRecord(form:NgForm){\r\n    if (this.validateForm()) {\r\n      this.service.postOrders().subscribe(res => {\r\n        this.resetForm();\r\n        this.toastr.success('Submitted Successfully', 'Order Register.');\r\n        this.router.navigate(['/orders']);\r\n      })\r\n    }\r\n  }\r\n\r\n  updateRecord(form:NgForm){\r\n    if (this.validateForm()) {\r\n      this.service.putOrders().subscribe(res => {\r\n        this.resetForm();\r\n        this.toastr.success('Submitted Successfully', 'Order Register.');\r\n        this.router.navigate(['/orders']);\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVycy9vcmRlcnMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-menus></app-menus>\\r\\n<div class=\\\"jumbotron\\\">\\r\\n  <h1 class=\\\"display-4 text-center\\\">Orders Register</h1>\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <table class=\\\"table table-hover\\\">\\r\\n        <thead class=\\\"thead-light\\\">\\r\\n          <th>#Order No.</th>\\r\\n          <th>Customer</th>\\r\\n          <th>P. Method</th>\\r\\n          <th>G. Total</th>\\r\\n          <th>\\r\\n            <a class=\\\"btn btn-outline-success\\\" routerLink=\\\"/order\\\"><i class=\\\"fa fa-plus-square\\\"></i> Create New</a>\\r\\n          </th>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of orderList\\\">\\r\\n            <th (click)=\\\"openForEdit(item.OrderId)\\\">{{item.OrderNo}}</th>\\r\\n            <td (click)=\\\"openForEdit(item.OrderId)\\\">{{item.Customer}}</td>\\r\\n            <td (click)=\\\"openForEdit(item.OrderId)\\\">{{item.PMethod}}</td>\\r\\n            <td (click)=\\\"openForEdit(item.OrderId)\\\">{{item.GTotal}}</td>\\r\\n            <td>\\r\\n                <a class=\\\"btn text-danger\\\" (click)=\\\"onOrderDelete(item.OrderId)\\\"><i class=\\\"fa fa-trash fa-lg\\\"></i></a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { OrderService } from '../shared/order.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.component.html',\r\n  styleUrls: ['./orders.component.css']\r\n})\r\nexport class OrdersComponent implements OnInit {\r\n\r\n  orderList;\r\n  constructor(private service: OrderService,\r\n    private router: Router,\r\n    private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.refreshList();\r\n  }\r\n\r\n  refreshList() {\r\n    this.service.getOrderList().then(res => this.orderList = res);\r\n  }\r\n\r\n  openForEdit(orderId: number) {\r\n    this.router.navigate(['/order/edit/' + orderId]);\r\n  }\r\n\r\n  onOrderDelete(id: number) {\r\n    if (confirm('Are you sure to delete this record?')) {\r\n      this.service.deleteOrder(id).then(res => {\r\n        this.refreshList();\r\n        this.toastr.warning(\"Deleted Successfully\", \"Order Register.\");\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BheW1lbnQtZGV0YWlscy9wYXltZW50LWRldGFpbC1saXN0L3BheW1lbnQtZGV0YWlsLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<table class=\\\"table table-hover\\\">\\r\\n  <tr *ngFor=\\\"let pd of service.list\\\">\\r\\n    <td (click)=\\\"populateForm(pd)\\\">{{pd.CardOwnerName}}</td>\\r\\n    <td (click)=\\\"populateForm(pd)\\\">{{pd.CardNumber}}</td>\\r\\n    <td (click)=\\\"populateForm(pd)\\\">{{pd.ExpirationDate}}</td>\\r\\n    <td (click)=\\\"populateForm(pd)\\\">{{pd.CVV}}</td>\\r\\n    <td>\\r\\n      <i class=\\\"fa fa-trash-alt fa-lg text-danger\\\" (click)=\\\"onDelete(pd.PMId)\\\"></i>\\r\\n    </td>\\r\\n  </tr>\\r\\n</table>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { PaymentDetailService } from 'src/app/shared/payment-detail.service';\r\nimport { PaymentDetail } from 'src/app/shared/payment-detail.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-payment-detail-list',\r\n  templateUrl: './payment-detail-list.component.html',\r\n  styleUrls: ['./payment-detail-list.component.css']\r\n})\r\nexport class PaymentDetailListComponent implements OnInit {\r\n\r\n  constructor(public service:PaymentDetailService,\r\n    private toastr:ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.service.refressList();\r\n  }\r\n  populateForm(pd:PaymentDetail){\r\n     this.service.formData = Object.assign({},pd);\r\n  }\r\n\r\n  onDelete(PMId){\r\n    if(confirm('Are you sure to delete this record?')){\r\n      this.service.DeletePaymentDetail(PMId).subscribe(\r\n        res => {\r\n          this.service.refressList();\r\n          this.toastr.warning(\"Deleted successfully\",\"Payment Detail Register\");\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        }\r\n      )\r\n    }\r\n\r\n\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BheW1lbnQtZGV0YWlscy9wYXltZW50LWRldGFpbC9wYXltZW50LWRldGFpbC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\">\\r\\n  <input type=\\\"hidden\\\" name=\\\"PMId\\\" [value]=\\\"service.formData.PMId\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <div class=\\\"input-group\\\">\\r\\n      <div class=\\\"input-group-prepend\\\">\\r\\n        <div class=\\\"input-group-text bg-white\\\">\\r\\n            <i class=\\\"fas fa-user-circle\\\" [class.green-icon]=\\\"CardOwnerName.valid\\\" [class.red-icon]=\\\"CardOwnerName.invalid\\\"></i>\\r\\n        </div>\\r\\n      </div>\\r\\n      <input name=\\\"CardOwnerName\\\" #CardOwnerName=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.CardOwnerName\\\" class=\\\"form-control\\\" placeholder=\\\"Card Owner Name\\\" required>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"input-group\\\">\\r\\n        <div class=\\\"input-group-prepend\\\">\\r\\n          <div class=\\\"input-group-text bg-white\\\">\\r\\n              <i class=\\\"fas fa-credit-card\\\" [class.green-icon]=\\\"CardNumber.valid\\\" [class.red-icon]=\\\"CardNumber.invalid\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n        <input name=\\\"CardNumber\\\" #CardNumber=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.CardNumber\\\" class=\\\"form-control\\\" placeholder=\\\"Card Number\\\" required maxlength=\\\"16\\\" minlength=\\\"16\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-row\\\">\\r\\n    <div class=\\\"form-group col-md-7\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <div class=\\\"input-group-text bg-white\\\">\\r\\n                <i class=\\\"fas fa-calendar-alt\\\" [class.green-icon]=\\\"ExpirationDate.valid\\\" [class.red-icon]=\\\"ExpirationDate.invalid\\\"></i>\\r\\n            </div>\\r\\n          </div>\\r\\n          <input name=\\\"ExpirationDate\\\" #ExpirationDate=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.ExpirationDate\\\" class=\\\"form-control\\\" placeholder=\\\"MM/YY\\\" required required maxlength=\\\"5\\\" minlength=\\\"5\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-md-5\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <div class=\\\"input-group-text bg-white\\\">\\r\\n                <i class=\\\"fas fa-key\\\" [class.green-icon]=\\\"CVV.valid\\\" [class.red-icon]=\\\"CVV.invalid\\\"></i>\\r\\n            </div>\\r\\n          </div>\\r\\n          <input type=\\\"password\\\" name=\\\"CVV\\\" #CVV=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.CVV\\\" class=\\\"form-control\\\" placeholder=\\\"CVV\\\" required required maxlength=\\\"3\\\" minlength=\\\"3\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <button class=\\\"btn btn-success btn-lg btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\"><i class=\\\"fas fa-database\\\"></i>Submit</button>\\r\\n    </div>\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { PaymentDetailService } from 'src/app/shared/payment-detail.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-payment-detail',\r\n  templateUrl: './payment-detail.component.html',\r\n  styleUrls: ['./payment-detail.component.css']\r\n})\r\nexport class PaymentDetailComponent implements OnInit {\r\n\r\n  constructor(public service:PaymentDetailService,\r\n    private toastr:ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.resetForm();\r\n  }\r\n\r\n  resetForm(form?:NgForm){\r\n    if(form!=null)\r\n      form.resetForm();\r\n    this.service.formData = {\r\n      PMId:0,\r\n      CardOwnerName:'',\r\n      CardNumber:'',\r\n      ExpirationDate:'',\r\n      CVV:''\r\n    }\r\n  }\r\n\r\n  onSubmit(form:NgForm){\r\n    if(this.service.formData.PMId == 0){\r\n      this.insertRecord(form);\r\n    }\r\n    else{\r\n      this.updateRecord(form);\r\n    }\r\n  }\r\n\r\n  \r\n  insertRecord(form:NgForm){\r\n    this.service.postPaymentDetail().subscribe(\r\n      res=>{\r\n        this.resetForm(form);\r\n        this.toastr.success(\"Submited successfully\",\"Payment Detail Register\");\r\n        this.service.refressList();\r\n      },\r\n      err=>{\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  updateRecord(form:NgForm){\r\n    this.service.PutPaymentDetail().subscribe(\r\n      res=>{\r\n        this.resetForm(form);\r\n        this.toastr.info(\"Submited successfully\",\"Payment Detail Register\");\r\n        this.service.refressList();\r\n      },\r\n      err=>{\r\n        console.log(err);\r\n      })\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BheW1lbnQtZGV0YWlscy9wYXltZW50LWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-menus></app-menus>\\r\\n<div class=\\\"jumbotron\\\">\\r\\n  <h1 class=\\\"display-4 text-center\\\">Payment Detail Register</h1>\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <app-payment-detail></app-payment-detail>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      <app-payment-detail-list></app-payment-detail-list>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-payment-details',\r\n  templateUrl: './payment-details.component.html',\r\n  styleUrls: ['./payment-details.component.css']\r\n})\r\nexport class PaymentDetailsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2plY3QvcHJvamVjdC1kZXRhaWwvcHJvamVjdC1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\">\\r\\n    <input type=\\\"hidden\\\" name=\\\"ProjectId\\\" [value]=\\\"service.formData.ProjectId\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"input-group\\\">\\r\\n        <div class=\\\"input-group-prepend\\\">\\r\\n          <div class=\\\"input-group-text bg-white\\\">\\r\\n              <i class=\\\"fas fas fa-tasks\\\" [class.green-icon]=\\\"ProjectName.valid\\\" [class.red-icon]=\\\"ProjectName.invalid\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n        <input name=\\\"ProjectName\\\" #ProjectName=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.ProjectName\\\" class=\\\"form-control\\\" placeholder=\\\"ProjectName\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <div class=\\\"input-group-text bg-white\\\">\\r\\n                <i class=\\\"fas fa-warehouse\\\" [class.green-icon]=\\\"WarehouseId.valid\\\" [class.red-icon]=\\\"WarehouseId.invalid\\\"></i>\\r\\n            </div>\\r\\n          </div>\\r\\n          <select name=\\\"WarehouseId\\\" #WarehouseId=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.WarehouseId\\\" class=\\\"form-control\\\"\\r\\n          [class.is-invalid]=\\\"service.formData.WarehouseId==0\\\" (change)=\\\"onChangeWarehouse($event)\\\">\\r\\n            <option value=\\\"0\\\">-Select Warehouse-</option>\\r\\n            <option *ngFor=\\\"let item of warehouseList\\\" value=\\\"{{item.WarehouseId}}\\\">{{item.WarehouseName}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <mat-form-field>\\r\\n          <input name=\\\"StartDate\\\" #Status=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.StartDate\\\" matInput [matDatepicker]=\\\"myDatepicker1\\\" placeholder=\\\"Choose a start\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"myDatepicker1\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #myDatepicker1></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <mat-form-field>\\r\\n          <input name=\\\"EndDate\\\" #Status=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.EndDate\\\" matInput [matDatepicker]=\\\"myDatepicker2\\\" placeholder=\\\"Choose a end\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"myDatepicker2\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #myDatepicker2></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <div class=\\\"input-group-text bg-white\\\">\\r\\n                <i class=\\\"fas fa-thermometer-three-quarters\\\" [class.green-icon]=\\\"Status.valid\\\" [class.red-icon]=\\\"Status.invalid\\\"></i>\\r\\n            </div>\\r\\n          </div>\\r\\n          <select name=\\\"Status\\\" #Status=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Status\\\" class=\\\"form-control\\\">\\r\\n            <option value=\\\"\\\">-Select-</option>\\r\\n            <option value=\\\"Active\\\">Active</option>\\r\\n            <option value=\\\"Complete\\\">Complete</option>\\r\\n          </select>\\r\\n        </div>\\r\\n    </div>\\r\\n        \\r\\n    <div class=\\\"form-group\\\">\\r\\n      <button class=\\\"btn btn-success btn-lg btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\"><i class=\\\"fas fa-database\\\"></i>Submit</button>\\r\\n    </div>\\r\\n  </form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ProjectService } from 'src/app/shared/project.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NgForm } from '@angular/forms';\r\nimport { WarehouseService } from 'src/app/shared/warehouse.service';\r\nimport * as _moment from 'moment';\r\nimport * as _momentzone from 'moment-timezone';\r\nimport {default as _rollupMoment} from 'moment';\r\nimport { MAT_DATEPICKER_VALUE_ACCESSOR, MatDatepickerInputEvent } from '@angular/material';\r\nimport { Project } from 'src/app/shared/project.model';\r\nconst moment = _rollupMoment || _moment;\r\n\r\n@Component({\r\n  selector: 'app-project-detail',\r\n  templateUrl: './project-detail.component.html',\r\n  styleUrls: ['./project-detail.component.css'],\r\n})\r\nexport class ProjectDetailComponent implements OnInit {\r\n  warehouseList;\r\n  constructor(public service:ProjectService,private warehouseService:WarehouseService,\r\n    private toastr:ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.resetForm();\r\n    this.getWarehouse();\r\n  }\r\n\r\n  resetForm(form?:NgForm){\r\n    if(form!=null)\r\n      form.resetForm();\r\n    this.service.formData = {\r\n      ProjectId:0,\r\n      ProjectName:'',\r\n      StartDate:new Date(),\r\n      EndDate:new Date(),\r\n      WarehouseId:0,\r\n      WarehouseName:'',\r\n      Status:''\r\n    }\r\n  }\r\n\r\n  onChangeWarehouse(item){\r\n    let text = item.target.options[item.target.options.selectedIndex].text;\r\n    this.service.formData.WarehouseName = text;\r\n  }\r\n\r\n  getWarehouse(){\r\n    this.warehouseService.getWarehouse().then(res => this.warehouseList = res);\r\n  }\r\n\r\n  onSubmit(form:NgForm){\r\n    if(this.service.formData.ProjectId == 0){\r\n      this.insertRecord(form);\r\n    }\r\n    else{\r\n      this.updateRecord(form);\r\n    }\r\n  }\r\n\r\n  \r\n  insertRecord(form:NgForm){\r\n    this.service.formData.StartDate = this.getLocalDate(this.service.formData.StartDate.toLocaleDateString());\r\n    this.service.formData.EndDate = this.getLocalDate(this.service.formData.EndDate.toLocaleDateString());\r\n    // console.log(this.service.formData.EndDate.toLocaleString());\r\n    this.service.postProjectsDetail().subscribe(\r\n      res=>{\r\n        this.service.list.data.push(res as Project);\r\n        this.service.list._updateChangeSubscription();\r\n        this.resetForm(form);\r\n        this.toastr.success(\"Submited successfully\",\"Project Detail Register\");\r\n      },\r\n      err=>{\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  updateRecord(form:NgForm){\r\n    if(this.service.formData.StartDate.toLocaleString().indexOf('/') !== -1){\r\n      this.service.formData.StartDate = this.getLocalDate(this.service.formData.StartDate.toLocaleDateString());\r\n    }\r\n    if(this.service.formData.EndDate.toLocaleString().indexOf('/') !== -1){\r\n      this.service.formData.EndDate = this.getLocalDate(this.service.formData.EndDate.toLocaleDateString());\r\n    }\r\n    this.service.PutProjectsDetail().subscribe(\r\n      res=>{\r\n        let index = this.service.list.data.findIndex(x=>x.ProjectId == this.service.formData.ProjectId);\r\n        this.service.list.data[index].ProjectId = this.service.formData.ProjectId;\r\n        this.service.list.data[index].ProjectName = this.service.formData.ProjectName;\r\n        this.service.list.data[index].StartDate = this.service.formData.StartDate;\r\n        this.service.list.data[index].EndDate = this.service.formData.EndDate;\r\n        this.service.list.data[index].Status = this.service.formData.Status;\r\n        this.service.list.data[index].WarehouseId = this.service.formData.WarehouseId;\r\n        this.service.list.data[index].WarehouseName = this.service.formData.WarehouseName;\r\n        this.service.list._updateChangeSubscription();\r\n        this.resetForm(form);\r\n        this.toastr.info(\"Submited successfully\",\"Project Detail Register\");\r\n      },\r\n      err=>{\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  getLocalDate(item:string){\r\n    var ldate = item.split('/');\r\n    var date = ldate[2] + '-' + ldate[0] + '-' + ldate[1];\r\n    return new Date(date);\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2plY3QvcHJvamVjdC1saXN0L3Byb2plY3QtbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"  <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 mat-elevation-z8\\\">  \\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-4\\\">\\r\\n              <mat-form-field>\\r\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n              </mat-form-field>\\r\\n          </div>         \\r\\n        </div>  \\r\\n        <table class=\\\"table table-hover\\\" mat-table [dataSource]=\\\"service.list\\\" matSort>\\r\\n          <ng-container matColumnDef=\\\"ProjectName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> ProjectName </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"populateForm(element)\\\"> {{element.ProjectName}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"StartDate\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> StartDate </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"populateForm(element)\\\"> {{element.StartDate | date}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"EndDate\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> EndDate </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"populateForm(element)\\\"> {{element.EndDate | date}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"WarehouseName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> WarehouseName </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"populateForm(element)\\\"> {{element.WarehouseName}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"Status\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"populateForm(element)\\\"> {{element.Status}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"Delete\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> \\r\\n              \\r\\n            </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n                <i class=\\\"fa fa-trash-alt fa-lg text-danger\\\" (click)=\\\"onDelete(element.ProjectId)\\\"></i>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n        <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n      </div>\\r\\n    </div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Project } from 'src/app/shared/project.model';\r\nimport { ProjectService } from 'src/app/shared/project.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-project-list',\r\n  templateUrl: './project-list.component.html',\r\n  styleUrls: ['./project-list.component.css']\r\n})\r\nexport class ProjectListComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['ProjectName','StartDate','EndDate','WarehouseName','Status','Delete'];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(public service:ProjectService,\r\n    private toastr:ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.service.getAllProject().then(res=> {\r\n      this.service.list = new MatTableDataSource(res as Array<Project>);\r\n      this.service.list.paginator = this.paginator;\r\n      this.service.list.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  populateForm(pd:Project){\r\n    this.service.formData = Object.assign({},pd);\r\n }\r\n\r\n applyFilter(filterValue: string) {\r\n  this.service.list.filter = filterValue.trim().toLowerCase();\r\n\r\n  if (this.service.list.paginator) {\r\n    this.service.list.paginator.firstPage();\r\n  }\r\n}\r\n\r\n onDelete(PMId){\r\n   if(confirm('Are you sure to delete this record?')){\r\n     this.service.DeleteProjectsDetail(PMId).subscribe(\r\n       res => {\r\n        let index = this.service.list.data.findIndex(x=>x.ProjectId == PMId);\r\n        this.service.list.data.splice(index,1);\r\n        this.service.list._updateChangeSubscription();\r\n         this.toastr.warning(\"Deleted successfully\",\"Project Detail Register\");\r\n       },\r\n       err => {\r\n         console.log(err);\r\n       }\r\n     )\r\n   }\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2plY3QvcHJvamVjdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-menus></app-menus>\\r\\n<div class=\\\"jumbotron\\\">\\r\\n  <h1 class=\\\"display-4 text-center\\\">Project Register</h1>\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <app-project-detail></app-project-detail>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      <app-project-list></app-project-list>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-project',\r\n  templateUrl: './project.component.html',\r\n  styleUrls: ['./project.component.css']\r\n})\r\nexport class ProjectComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2plY3RhY2Nlc3MvcHJvamVjdGFjY2Vzcy1kZXRhaWwvcHJvamVjdGFjY2Vzcy1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<form [formGroup]=\\\"service.formModel\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <input hidden class=\\\"form-control\\\" formControlName=\\\"ProjectAccessId\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <label>Project</label>\\r\\n      <select class=\\\"form-control\\\" formControlName=\\\"ProjectId\\\" (change)=\\\"onChange($event.target.value)\\\" >\\r\\n        <option value=\\\"0\\\">-Select Project-</option>\\r\\n        <option *ngFor=\\\"let item of projectList\\\" value=\\\"{{item.ProjectId}}\\\">{{item.ProjectName}}</option>\\r\\n      </select>\\r\\n      <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('ProjectId').touched && service.formModel.get('ProjectId').errors?.required\\\">This field is mandatory.</label>\\r\\n    </div>\\r\\n  </form>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Users List</label>                     \\r\\n          <table class=\\\"table table-hover\\\">\\r\\n            <tr *ngFor=\\\"let item of userList\\\">\\r\\n              <td>{{item.UserName}}</td>\\r\\n              <td width=\\\"5%\\\"><i class=\\\"fas fa-minus\\\" (click)=\\\"onDelete(item)\\\"></i></td>\\r\\n              <td width=\\\"5%\\\"><i class=\\\"fas fa-plus\\\" (click)=\\\"onAdd(item)\\\"></i></td>\\r\\n            </tr>\\r\\n          </table>\\r\\n        </div> \\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <table class=\\\"table table-hover\\\">\\r\\n        <tr *ngFor=\\\"let item of userprojectChange\\\">\\r\\n          <td>{{item.UserName}}</td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n    \\r\\n  \"","import { Component, OnInit } from '@angular/core';\r\nimport { ProjectaccessService } from 'src/app/shared/projectaccess.service';\r\nimport { UserService } from 'src/app/shared/user.service';\r\nimport { ProjectService } from 'src/app/shared/project.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-projectaccess-detail',\r\n  templateUrl: './projectaccess-detail.component.html',\r\n  styleUrls: ['./projectaccess-detail.component.css']\r\n})\r\nexport class ProjectaccessDetailComponent implements OnInit {\r\n\r\n  userList;\r\n  projectList;\r\n  userprojectChange=[];\r\n  projectId;\r\n  constructor(private service:ProjectaccessService,private userService:UserService,\r\n    private toastr:ToastrService,private projectService:ProjectService) { }\r\n\r\n  ngOnInit() {\r\n    this.getUsers();\r\n    this.getProject();\r\n  }\r\n\r\n  getUsers(){\r\n    this.userService.getUsers().then(res => this.userList = res);\r\n  }\r\n\r\n  getProject(){\r\n    this.projectService.getAllProject().then(res=> this.projectList = res);\r\n  }\r\n\r\n  onAdd(item){\r\n    let index = this.userprojectChange.findIndex( record => record.UserName === item.UserName );\r\n    if(index <= -1){\r\n      this.userprojectChange.push({UserName:item.UserName});\r\n      this.service.onAdd(item).subscribe(   \r\n        res=>{\r\n          this.toastr.success(\"Project Access created\",\"Project Access\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  onDelete(item){\r\n    if (confirm('Are you sure to delete this record?')) {\r\n      this.service.onDelete(item.Id,this.projectId).then(res => {\r\n        let index = this.userprojectChange.findIndex( record => record.UserName === item.UserName );\r\n        if(index > -1){\r\n          this.userprojectChange.splice(index, 1);\r\n        }\r\n        this.toastr.warning(\"Deleted Successfully\", \"Project Access\");\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange(deviceValue){\r\n    if(this.service.userAdded != null){\r\n      this.service.userAdded=[];\r\n    }\r\n    this.projectId = deviceValue;\r\n    this.service.getProjectaccessByID(deviceValue).then(res=> this.userprojectChange=res as []); \r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2plY3RhY2Nlc3MvcHJvamVjdGFjY2Vzcy1saXN0L3Byb2plY3RhY2Nlc3MtbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-projectaccess-list',\r\n  templateUrl: './projectaccess-list.component.html',\r\n  styleUrls: ['./projectaccess-list.component.css']\r\n})\r\nexport class ProjectaccessListComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2plY3RhY2Nlc3MvcHJvamVjdGFjY2Vzcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-menus></app-menus>\\r\\n<div class=\\\"jumbotron\\\">\\r\\n  <h1 class=\\\"display-4 text-center\\\">Project Access Register</h1>\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      <app-projectaccess-detail></app-projectaccess-detail>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <app-projectaccess-list></app-projectaccess-list>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-projectaccess',\r\n  templateUrl: './projectaccess.component.html',\r\n  styleUrls: ['./projectaccess.component.css']\r\n})\r\nexport class ProjectaccessComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlY2VpcHQvcmVjZWlwdC1oZWFkZXIvcmVjZWlwdC1oZWFkZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-menus></app-menus>\\r\\n<div class=\\\"jumbotron\\\">\\r\\n  <h1 class=\\\"display-4 text-center\\\">Inventory Register</h1>\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <form [formGroup]=\\\"service.formReceipt\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit()\\\">\\r\\n        <input type=\\\"hidden\\\" name=\\\"ReceiptId\\\" [value]=\\\"service.formReceipt.ReceiptId\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Tran.Type</label>\\r\\n                <select class=\\\"form-control\\\" formControlName=\\\"TranType\\\" required>\\r\\n                  <option value=\\\"Receipt\\\" >Receipt</option>\\r\\n                  <option value=\\\"Issue\\\" >Issue</option>\\r\\n                  <option value=\\\"Adjust\\\" >Adjust</option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group required\\\">\\r\\n                <label>ReceiptNbr</label>\\r\\n                <input class=\\\"form-control\\\" formControlName=\\\"ReceiptNbr\\\" placeholder=\\\"NEW\\\" readonly> \\r\\n                <label class=\\\"text-danger\\\" *ngIf=\\\"service.formReceipt.get('ReceiptNbr').touched && service.formReceipt.get('ReceiptNbr').errors?.required\\\">This field is mandatory.</label>\\r\\n              </div>\\r\\n              <div class=\\\"form-group required\\\">\\r\\n                <label>Description</label>\\r\\n                <input class=\\\"form-control\\\" formControlName=\\\"Description\\\">\\r\\n                <label class=\\\"text-danger\\\" *ngIf=\\\"service.formReceipt.get('Description').touched && service.formReceipt.get('Description').errors?.required\\\">This field is mandatory.</label>\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group required\\\">\\r\\n              <label>TotalQty</label>\\r\\n              <input class=\\\"form-control\\\" formControlName=\\\"TotalQty\\\" readonly>\\r\\n              <label class=\\\"text-danger\\\" *ngIf=\\\"service.formReceipt.get('TotalQty').touched && service.formReceipt.get('TotalQty').errors?.required\\\">This field is mandatory.</label>\\r\\n            </div>\\r\\n            <div class=\\\"form-group required\\\">\\r\\n              <label>TotalCost</label>\\r\\n              <input class=\\\"form-control\\\" formControlName=\\\"TotalCost\\\" readonly>\\r\\n              <label class=\\\"text-danger\\\" *ngIf=\\\"service.formReceipt.get('TotalCost').touched && service.formReceipt.get('TotalCost').errors?.required\\\">This field is mandatory.</label>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <mat-form-field>\\r\\n                  <input class=\\\"form-control\\\" formControlName=\\\"ReceiptDate\\\" matInput [matDatepicker]=\\\"myDatepicker1\\\" placeholder=\\\"Choose date\\\">\\r\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"myDatepicker1\\\"></mat-datepicker-toggle>\\r\\n                  <mat-datepicker #myDatepicker1></mat-datepicker>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div> \\r\\n        \\r\\n        <!--Receipt line table-->\\r\\n        <table class=\\\"table table-borderless\\\">\\r\\n            <thead class=\\\"thead-light\\\">\\r\\n              <th>ProjectId</th>\\r\\n              <th>WarehouseId</th>\\r\\n              <th>InventoryId</th>\\r\\n              <th>Qty</th>\\r\\n              <th>UnitCost</th>\\r\\n              <th>ExtCost</th>\\r\\n              <th>\\r\\n                <a class=\\\"btn btn-sm btn-success text-white\\\" (click)=\\\"AddOrEditReceiptLine(null,service.formReceipt.ReceiptId)\\\"><i class=\\\"fa fa-plus\\\"></i> Add Item</a>\\r\\n              </th>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngIf=\\\"service.receiptLine.length==0\\\" [class.text-danger]=\\\"!isValid && service.receiptLine.length==0\\\">\\r\\n                <td class=\\\"font-italic text-center\\\" colspan=\\\"5\\\">\\r\\n                  No receipt line selected for this receipt.\\r\\n                </td>\\r\\n              </tr>\\r\\n  \\r\\n              <tr *ngFor=\\\"let item of service.receiptLine;let i=index;\\\">\\r\\n                <td>{{item.ProjectName}}</td>\\r\\n                <td>{{item.WarehouseName}}</td>\\r\\n                <td>{{item.InventoryDesr}}</td>\\r\\n                <td>{{item.Qty}}</td>\\r\\n                <td>{{item.UnitCost}}</td>\\r\\n                <td>{{item.ExtCost}}</td>\\r\\n                <td>\\r\\n                  <a class=\\\"btn btn-sm btn-info text-white\\\" (click)=\\\"AddOrEditReceiptLine(i,service.formReceipt.ReceiptId)\\\"><i class=\\\"fas fa-pencil-alt\\\"></i></a>\\r\\n                  <a class=\\\"btn btn-sm btn-danger text-white ml-1\\\" (click)=\\\"onDeleteReceiptLine(item.ReceiptLineId,i)\\\"><i class=\\\"fa fa-trash\\\"></i></a>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        \\r\\n        <div class=\\\"form-group\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-dark\\\" [disabled]=\\\"!service.formReceipt.valid\\\"><i class=\\\"fa fa-database\\\"></i> Submit</button>\\r\\n          <a class=\\\"btn btn-outline-dark ml-1\\\" routerLink=\\\"/receipt\\\"><i class=\\\"fa fa-table\\\"></i> View Inventory Register</a>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ReceiptService } from 'src/app/shared/receipt.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material';\r\nimport { InventoryService } from 'src/app/shared/inventory.service';\r\nimport { ProjectService } from 'src/app/shared/project.service';\r\nimport { ReceiptLineComponent } from '../receipt-line/receipt-line.component';\r\nimport { Receipt } from 'src/app/shared/receipt.model';\r\n\r\n@Component({\r\n  selector: 'app-receipt-header',\r\n  templateUrl: './receipt-header.component.html',\r\n  styleUrls: ['./receipt-header.component.css']\r\n})\r\nexport class ReceiptHeaderComponent implements OnInit {\r\n\r\n  deleteReceiptLine:string;\r\n  constructor(private service:ReceiptService,private router: Router,private currentRoute: ActivatedRoute,\r\n    private toastr: ToastrService,private dialog: MatDialog,private inventoryService:InventoryService,\r\n    private projectService:ProjectService) { }\r\n\r\n  ngOnInit() {\r\n    let receiptId = this.currentRoute.snapshot.paramMap.get('id');\r\n    if(receiptId == null){\r\n      this.service.formReceipt.reset();\r\n      this.service.formReceipt.patchValue({\r\n        ReceiptId:0,\r\n        Release:0,\r\n        ReceiptNbr:'NEW'\r\n      });\r\n      this.service.receiptLine = [];\r\n      this.service.formReceipt.enable();\r\n    }\r\n    else{\r\n      //edit\r\n      this.service.receiptLine = [];\r\n      this.deleteReceiptLine='';\r\n      this.service.getReceiptByID(parseInt(receiptId)).then(res => {\r\n        this.service.formReceipt.setValue({\r\n          TranType:res.receipt['TranType'],\r\n          ReceiptId:res.receipt['ReceiptId'],\r\n          ReceiptNbr:res.receipt['ReceiptNbr'],\r\n          ReceiptDate:res.receipt['ReceiptDate'],\r\n          Description:res.receipt['Description'],\r\n          TotalQty:res.receipt['TotalQty'],\r\n          TotalCost:res.receipt['TotalCost'],\r\n          Release:res.receipt['Release'],\r\n          DeletedReceiptLineIDs:''\r\n        });\r\n        if(this.service.formReceipt.value.Release == 1){\r\n          this.service.formReceipt.disable();\r\n        }\r\n        else{\r\n          this.service.formReceipt.enable();\r\n        }\r\n        this.service.receiptLine = res.receiptLine;\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  AddOrEditReceiptLine(receiptLineIndex,ReceiptId){\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.disableClose = true;\r\n    dialogConfig.width = \"50%\";\r\n    dialogConfig.data = { receiptLineIndex, ReceiptId };\r\n    this.dialog.open(ReceiptLineComponent, dialogConfig).afterClosed().subscribe(res => {\r\n      this.updateGrandTotal();\r\n    });\r\n  }\r\n\r\n  onDeleteReceiptLine(receiptLineId:number,i:number){\r\n    if(receiptLineId != null){\r\n      this.deleteReceiptLine += receiptLineId + \",\";\r\n      this.service.receiptLine.splice(i,1);\r\n      this.updateGrandTotal();\r\n      console.log(receiptLineId);\r\n      console.log(this.deleteReceiptLine);\r\n    }\r\n      \r\n  }\r\n\r\n  updateGrandTotal(){\r\n    this.service.formReceipt.patchValue({\r\n      TotalQty:this.service.receiptLine.reduce((prev, curr) => {\r\n        return prev + parseFloat(curr.Qty.toString());\r\n      }, 0),\r\n      TotalCost:this.service.receiptLine.reduce((prev,curr) => { \r\n        return prev + curr.ExtCost;\r\n      },0)\r\n    });\r\n  }\r\n\r\n  onSubmit(){\r\n    if(this.service.formReceipt.value.ReceiptId == 0 ){\r\n      if (confirm('Do you want to complete this record?')) {\r\n        this.service.formReceipt.patchValue({\r\n          Release:1\r\n        });\r\n        this.insertRecord();\r\n      }\r\n      else{\r\n        this.insertRecord();\r\n      }\r\n    }\r\n    else{\r\n      if (confirm('Do you want to complete this record?')) {\r\n        this.service.formReceipt.patchValue({\r\n          Release:1\r\n        });\r\n        this.updateRecord();\r\n      }\r\n      else{\r\n        this.updateRecord();\r\n      }\r\n      \r\n    }\r\n  }\r\n\r\n  insertRecord(){\r\n    this.service.formReceipt.patchValue({\r\n      ReceiptDate: this.getLocalDate(this.service.formReceipt.value.ReceiptDate.toLocaleDateString())\r\n    });\r\n    this.service.postReceipt().subscribe(res => {\r\n      this.service.formReceipt.reset();\r\n      this.service.receiptLine=[];\r\n      this.toastr.success('Submitted Successfully','Receipt Register');\r\n      this.router.navigate(['/receipt']);\r\n    })\r\n  }\r\n\r\n  updateRecord(){\r\n    if(this.service.formReceipt.value.ReceiptDate.toLocaleString().indexOf('/') !== -1){\r\n      this.service.formReceipt.patchValue({\r\n        ReceiptDate: this.getLocalDate(this.service.formReceipt.value.ReceiptDate.toLocaleDateString())\r\n      });\r\n    }\r\n    this.service.formReceipt.patchValue({\r\n      DeletedReceiptLineIDs:this.deleteReceiptLine\r\n    });\r\n    this.service.putReceipt().subscribe(res => {\r\n      this.service.formReceipt.reset();\r\n      this.deleteReceiptLine='';\r\n      this.service.receiptLine = [];\r\n      this.toastr.success('Submitted Successfully','Receipt Register');\r\n      this.router.navigate(['/receipt']);\r\n    })\r\n  }\r\n\r\n  getLocalDate(item:string){\r\n    var ldate = item.split('/');\r\n    var date = ldate[2] + '-' + ldate[0] + '-' + ldate[1];\r\n    return new Date(date);\r\n  }\r\n \r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlY2VpcHQvcmVjZWlwdC1saW5lL3JlY2VpcHQtbGluZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h4 class=\\\"dispaly-4\\\">Receipt Line Details</h4>\\r\\n<hr>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"jumbotron\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n              <form [formGroup]=\\\"service.formReceiptLine\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit()\\\">\\r\\n                <input hidden class=\\\"form-control\\\" formControlName=\\\"ReceiptLineId\\\">\\r\\n                <input hidden class=\\\"form-control\\\" formControlName=\\\"ReceiptId\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Project</label>\\r\\n                    <select class=\\\"form-control\\\" formControlName=\\\"ProjectId\\\"   (change)=\\\"onChangeProject($event)\\\">\\r\\n                      <option value=\\\"0\\\" >-Select Project-</option>\\r\\n                      <option *ngFor=\\\"let item of projectList\\\" value=\\\"{{item.ProjectId}}\\\">{{item.ProjectName}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Warehouse</label>\\r\\n                    <select class=\\\"form-control\\\" formControlName=\\\"WarehouseId\\\" (change)=\\\"onChangeWarehouse($event)\\\">\\r\\n                      <option value=\\\"0\\\">-Select Warehouse-</option>\\r\\n                      <option *ngFor=\\\"let item of warehouseList\\\" value=\\\"{{item.WarehouseId}}\\\">{{item.WarehouseName}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Reason</label>\\r\\n                    <select class=\\\"form-control\\\" formControlName=\\\"Reason\\\">\\r\\n                      <option value=\\\"FEED\\\">FEED</option>\\r\\n                      <option value=\\\"ANIMAL\\\">ANIMAL</option>\\r\\n                      <option value=\\\"MEDICINE\\\">MEDICINE</option>\\r\\n                      <option value=\\\"OTHER\\\">OTHER</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Inventory</label>\\r\\n                    <select class=\\\"form-control\\\" formControlName=\\\"InventoryId\\\" (change)=\\\"onChangeInventory($event)\\\">\\r\\n                      <option value=\\\"0\\\">\\r\\n                        -Select Inventory-\\r\\n                      </option>\\r\\n                      <option *ngFor=\\\"let item of inventoryList\\\" value=\\\"{{item.InventoryId}}\\\">{{item.InventoryDesr}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group required\\\">\\r\\n                  <label>Qty</label>\\r\\n                  <input class=\\\"form-control\\\" formControlName=\\\"Qty\\\" (change)=\\\"updatePrice($event.target.value,1)\\\">\\r\\n                  <label class=\\\"text-danger\\\" *ngIf=\\\"service.formReceiptLine.get('Qty').touched && service.formReceiptLine.get('Qty').errors?.required\\\">This field is mandatory.</label>\\r\\n                </div>\\r\\n                <div class=\\\"form-group required\\\">\\r\\n                  <label>Unit Cost</label>\\r\\n                  <input class=\\\"form-control\\\" formControlName=\\\"UnitCost\\\" (change)=\\\"updatePrice($event.target.value,2)\\\">\\r\\n                  <label class=\\\"text-danger\\\" *ngIf=\\\"service.formReceiptLine.get('UnitCost').touched && service.formReceiptLine.get('UnitCost').errors?.required\\\">This field is mandatory.</label>\\r\\n                </div>\\r\\n                <div class=\\\"form-group required\\\">\\r\\n                    <label>Ext.Cost</label>\\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"ExtCost\\\" readonly>\\r\\n                    <label class=\\\"text-danger\\\" *ngIf=\\\"service.formReceiptLine.get('ExtCost').touched && service.formReceiptLine.get('ExtCost').errors?.required\\\">This field is mandatory.</label>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-dark\\\" [disabled]=\\\"!service.formReceiptLine.valid\\\"><i class=\\\"fa fa-database\\\"></i> Submit</button>\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-outline-dark ml-1\\\" [mat-dialog-close]><i class=\\\"fa fa-close\\\"></i> Close</button>\\r\\n                </div>\\r\\n              </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\nimport { ReceiptService } from 'src/app/shared/receipt.service';\r\nimport { ProjectService } from 'src/app/shared/project.service';\r\nimport { WarehouseService } from 'src/app/shared/warehouse.service';\r\nimport { InventoryService } from 'src/app/shared/inventory.service';\r\nimport { resetFakeAsyncZone } from '@angular/core/testing';\r\nimport { InsitestatusService } from 'src/app/shared/insitestatus.service';\r\nimport { CategoryService } from 'src/app/shared/category.service';\r\n\r\n@Component({\r\n  selector: 'app-receipt-line',\r\n  templateUrl: './receipt-line.component.html',\r\n  styleUrls: ['./receipt-line.component.css']\r\n})\r\nexport class ReceiptLineComponent implements OnInit {\r\n\r\n  projectList;\r\n  warehouseList;\r\n  inventoryList;\r\n  categoryList;\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data,\r\n  public dialogRef: MatDialogRef<ReceiptLineComponent>,private service:ReceiptService,\r\n  private projectService:ProjectService,private warehouseService:WarehouseService,private categoryService:CategoryService,\r\n  private inventoryService:InventoryService,private insiteStatusService:InsitestatusService) { }\r\n\r\n  ngOnInit() {\r\n    this.getActiveProject();\r\n    this.getInventory();\r\n    if(this.data.receiptLineIndex == null){\r\n      this.service.formReceiptLine.reset();\r\n      this.service.formReceiptLine.patchValue({\r\n        ReceiptLineId:0,\r\n        ReceiptId:0\r\n      });\r\n    }\r\n    else{\r\n      console.log(this.service.receiptLine[this.data.receiptLineIndex].WarehouseId);\r\n      //edit\r\n      this.service.formReceiptLine.setValue(this.service.receiptLine[this.data.receiptLineIndex]);\r\n    }\r\n  }\r\n\r\n  getActiveProject(){\r\n    this.projectService.getActiveProject().then(res => this.projectList = res);\r\n  }\r\n\r\n  getInventory(){\r\n    this.inventoryService.getInventory().then(res=>this.inventoryList = res);\r\n  }\r\n\r\n  onChangeProject(item){\r\n    this.warehouseService.getWarehouseByProjectId(item.target.value).then(res => this.warehouseList = res);\r\n    let text = item.target.options[item.target.options.selectedIndex].text;\r\n    this.service.formReceiptLine.patchValue({\r\n      ProjectName:text\r\n    });\r\n  }\r\n\r\n  onChangeWarehouse(item){\r\n    let text = item.target.options[item.target.options.selectedIndex].text;\r\n    this.service.formReceiptLine.patchValue({\r\n      WarehouseName:text\r\n    });\r\n  }\r\n\r\n  onChangeInventory(item){\r\n    let text = item.target.options[item.target.options.selectedIndex].text;\r\n    this.service.formReceiptLine.patchValue({\r\n      InventoryDesr:text\r\n    });\r\n    this.insiteStatusService.getInsiteStatusByPWI(this.service.formReceiptLine.value.ProjectId,this.service.formReceiptLine.value.WarehouseId,this.service.formReceiptLine.value.InventoryId)\r\n        .then(res =>{\r\n          if(res != null){\r\n            this.service.formReceiptLine.patchValue({\r\n              UnitCost: res[\"LastCost\"]\r\n            });\r\n          }\r\n          else{\r\n            this.service.formReceiptLine.patchValue({\r\n              UnitCost: 0\r\n            });\r\n          }\r\n        });\r\n\r\n  }\r\n\r\n  updatePrice(valuechange,type){\r\n    if(type == '1'){\r\n      let extcost = parseFloat((this.service.formReceiptLine.value.UnitCost * valuechange).toFixed(2));\r\n      this.service.formReceiptLine.patchValue({\r\n        ExtCost:extcost\r\n      });\r\n    }\r\n    else{\r\n      let extcost = parseFloat((this.service.formReceiptLine.value.Qty * valuechange).toFixed(2));\r\n      this.service.formReceiptLine.patchValue({\r\n        ExtCost:extcost\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit(){\r\n    if(this.data.receiptLineIndex == null){\r\n      //add\r\n      this.service.receiptLine.push(this.service.formReceiptLine.value);\r\n    }\r\n    else{\r\n      //edit\r\n      this.service.receiptLine[this.data.receiptLineIndex] = this.service.formReceiptLine.value;\r\n    }\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlY2VpcHQvcmVjZWlwdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-menus></app-menus>\\r\\n<div class=\\\"jumbotron\\\">\\r\\n  <h1 class=\\\"display-4 text-center\\\">Inventory Register</h1>\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12 mat-elevation-z8\\\">  \\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n            <form #form=\\\"ngForm\\\" (submit)=\\\"onSubmit()\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                  <mat-form-field>\\r\\n                    <input name=\\\"fromDate\\\" [(ngModel)]=\\\"fromDate\\\" class=\\\"form-control\\\" matInput [matDatepicker]=\\\"myDatepicker1\\\" placeholder=\\\"Start date\\\">\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"myDatepicker1\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #myDatepicker1></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n                    <input name=\\\"toDate\\\" [(ngModel)]=\\\"toDate\\\" class=\\\"form-control\\\" matInput [matDatepicker]=\\\"myDatepicker2\\\" placeholder=\\\"End date\\\">\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"myDatepicker2\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #myDatepicker2></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                  <button mat-button type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\">Load...</button>\\r\\n              </div>\\r\\n            </form>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <mat-form-field>\\r\\n              <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n            </mat-form-field>\\r\\n        </div>         \\r\\n      </div>  \\r\\n      <table class=\\\"table table-hover\\\" mat-table [dataSource]=\\\"receiptList\\\" matSort>\\r\\n        <ng-container matColumnDef=\\\"TranType\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Tran Type </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"openForEdit(element.ReceiptId)\\\"> {{element.TranType}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"ReceiptNbr\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> ReceiptNbr </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"openForEdit(element.ReceiptId)\\\"> {{element.ReceiptNbr}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"Description\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"openForEdit(element.ReceiptId)\\\"> {{element.Description}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"ReceiptDate\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Receipt Date </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"openForEdit(element.ReceiptId)\\\"> {{element.ReceiptDate | date}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"Delete\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> \\r\\n            <a class=\\\"btn btn-outline-success\\\" routerLink=\\\"/receiptheader\\\"><i class=\\\"fa fa-plus-square\\\"></i> Create New</a> \\r\\n          </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n            <a class=\\\"btn text-danger\\\" (click)=\\\"onReceiptDelete(element.ReceiptId,element.Release)\\\"><i class=\\\"fa fa-trash fa-lg\\\"></i></a> \\r\\n          </td>\\r\\n        </ng-container>\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n      </table>\\r\\n      <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ReceiptService } from '../shared/receipt.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\r\nimport { Receipt } from '../shared/receipt.model';\r\n\r\n@Component({\r\n  selector: 'app-receipt',\r\n  templateUrl: './receipt.component.html',\r\n  styleUrls: ['./receipt.component.css']\r\n})\r\nexport class ReceiptComponent implements OnInit {\r\n\r\n  fromDate:Date;\r\n  toDate:Date;\r\n  displayedColumns: string[] = ['TranType','ReceiptNbr', 'Description','ReceiptDate','Delete'];\r\n  receiptList: MatTableDataSource<Receipt>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(private service: ReceiptService,\r\n    private router: Router,\r\n    private toastr: ToastrService) { \r\n      \r\n    }\r\n\r\n  ngOnInit() {\r\n    this.refreshList();\r\n  }\r\n\r\n  refreshList() {\r\n    //this.service.getReceiptList().then(res => this.receiptList = res);\r\n    this.service.getReceiptList().then(res => {\r\n      this.receiptList = new MatTableDataSource(res as Array<Receipt>);\r\n      this.receiptList.paginator = this.paginator;\r\n      this.receiptList.sort = this.sort;\r\n    }); \r\n  }\r\n\r\n  getReceiptByDate(from,to){\r\n    this.service.getReceiptByDate(from,to).then(res => {\r\n      this.receiptList = new MatTableDataSource(res as Array<Receipt>);\r\n      this.receiptList.paginator = this.paginator;\r\n      this.receiptList.sort = this.sort;\r\n    }); \r\n  }\r\n\r\n  openForEdit(receiptId: number) {\r\n    this.router.navigate(['/receiptheader/edit/' + receiptId]);\r\n  }\r\n\r\n  onSubmit(){\r\n    this.getReceiptByDate(this.getLocalDate(this.fromDate.toLocaleDateString()),this.getLocalDate(this.toDate.toLocaleDateString()));\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.receiptList.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.receiptList.paginator) {\r\n      this.receiptList.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  onReceiptDelete(id: number,status:number) {\r\n    if(status == 1){\r\n      this.toastr.error(\"You cannot delete completed record.\", \"Receipt Register.\");\r\n    }\r\n    else{\r\n      if (confirm('Are you sure to delete this record?')) {\r\n        this.service.deleteReceipt(id).then(res => {\r\n          let index = this.receiptList.data.findIndex(x=>x.ReceiptId == id);\r\n          this.receiptList.data.splice(index,1);\r\n          //this.refreshList();\r\n          this.toastr.warning(\"Deleted Successfully\", \"Receipt Register.\");\r\n        });\r\n      }\r\n    }\r\n   \r\n  }\r\n\r\n  getLocalDate(item:string){\r\n    var ldate = item.split('/');\r\n    var date = ldate[2] + '-' + ldate[0] + '-' + ldate[1];\r\n    return date;\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvbGVzL3JvbGUtY3RsL3JvbGUtY3RsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\r\\n  role-ctl works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-role-ctl',\r\n  templateUrl: './role-ctl.component.html',\r\n  styleUrls: ['./role-ctl.component.css']\r\n})\r\nexport class RoleCtlComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvbGVzL3JvbGUvcm9sZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-menus></app-menus>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"jumbotron\\\">\\r\\n          <h1 class=\\\"display-4 text-center\\\"><i class=\\\"fas fa-toilet-paper\\\"></i>Roles Management</h1>\\r\\n        <hr>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n              <form [formGroup]=\\\"service.formModel\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit()\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <input hidden class=\\\"form-control\\\" formControlName=\\\"Id\\\">\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group required\\\">\\r\\n                    <label>RoleName</label>\\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"RoleName\\\">\\r\\n                    <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('RoleName').touched && service.formModel.get('RoleName').errors?.required\\\">This field is mandatory.</label>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-row\\\">\\r\\n                    <div class=\\\"form-group col-md-8 offset-md-2\\\">\\r\\n                      <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block\\\" [disabled]=\\\"!service.formModel.valid\\\">Submit</button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </form>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>Access List</label>                     \\r\\n                        <table class=\\\"table table-hover\\\">\\r\\n                          <tr *ngFor=\\\"let item of ctlList\\\">\\r\\n                            <td>{{item.Id}}</td>\\r\\n                            <td width=\\\"5%\\\"><i class=\\\"fas fa-minus\\\" (click)=\\\"onDelete(item)\\\"></i></td>\\r\\n                            <td width=\\\"5%\\\"><i class=\\\"fas fa-plus\\\" (click)=\\\"onAdd(item)\\\"></i></td>\\r\\n                          </tr>\\r\\n                        </table>\\r\\n                      </div> \\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <table class=\\\"table table-hover\\\">\\r\\n                      <tr *ngFor=\\\"let item of service.rolesAdded\\\">\\r\\n                        <td>{{item}}</td>\\r\\n                      </tr>\\r\\n                    </table>\\r\\n                  </div>\\r\\n                </div>\\r\\n \\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { RoleService } from 'src/app/shared/role.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { RoleCtlService } from 'src/app/shared/role-ctl.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Role } from 'src/app/shared/role.model';\r\nimport { forEach } from '@angular/router/src/utils/collection';\r\nimport { element } from '@angular/core/src/render3';\r\n\r\n@Component({\r\n  selector: 'app-role',\r\n  templateUrl: './role.component.html',\r\n  styleUrls: ['./role.component.css']\r\n})\r\nexport class RoleComponent implements OnInit {\r\n\r\n  ctlList;\r\n  roleList:Role;\r\n  constructor(public service:RoleService,\r\n    private serviceCtl:RoleCtlService,\r\n    private toastr:ToastrService,private currentRoute: ActivatedRoute,private router: Router) {\r\n     \r\n  } \r\n\r\n  ngOnInit() {\r\n    this.getCtl();\r\n    let roleId = this.currentRoute.snapshot.paramMap.get('id');\r\n    if(roleId == null){\r\n      this.service.formModel.reset();\r\n      this.service.rolesAdded = [];\r\n      this.service.selectedCtl = [];\r\n    }\r\n    else{\r\n      this.service.getRoleByID(roleId).then(res => {\r\n        this.roleList = res;\r\n        this.service.formModel.patchValue({\r\n          Id:this.roleList.Id,\r\n          RoleName:this.roleList.Name,\r\n        });\r\n        if(this.roleList.Access != null){\r\n          this.service.rolesAdded = [];\r\n          this.service.selectedCtl = [];\r\n          var accesslist = JSON.parse(this.roleList.Access);\r\n          this.service.selectedCtl = accesslist;\r\n          for(let i = 0; i < accesslist.length; i++){\r\n            this.service.rolesAdded.push(accesslist[i].Id);\r\n        }\r\n      }\r\n       this.service.formModel.value.Id = roleId;\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit()\r\n  {\r\n    if(this.service.formModel.value.Id == '' || this.service.formModel.value.Id == null){\r\n      this.postRole();\r\n      console.log('post');\r\n    }\r\n    else{\r\n      console.log('put');\r\n      this.putRole();\r\n    }\r\n    \r\n  }\r\n\r\n  postRole(){\r\n    this.service.postRoles().subscribe(\r\n      (res:any) => {\r\n        if(res.Succeeded){\r\n          \r\n          this.toastr.success(\"New role created\",\"Register Role\");\r\n        }\r\n      },\r\n      err =>{\r\n        console.log(err);\r\n      }\r\n\r\n    );\r\n  }\r\n\r\n  putRole(){\r\n    this.service.putRoles().subscribe(\r\n      (res:any) => {\r\n        if(res.Succeeded){\r\n          \r\n          this.toastr.success(\"New role updated\",\"Register Role\");\r\n        }\r\n      },\r\n      err =>{\r\n        console.log(err);\r\n      }\r\n\r\n    );\r\n  }\r\n\r\n  getCtl(){\r\n    this.serviceCtl.getTreeList().then(res => this.ctlList = res);\r\n  }\r\n\r\n  onDelete(item:any){\r\n    this.service.onDelete(item);\r\n  }\r\n\r\n  onAdd(item:any){\r\n    this.service.onAdd(item);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvbGVzL3JvbGVzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-menus></app-menus>\\r\\n<div class=\\\"jumbotron\\\">\\r\\n  <h1 class=\\\"display-4 text-center\\\">Roles Register</h1>\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <table class=\\\"table table-hover\\\">\\r\\n        <thead class=\\\"thead-light\\\">\\r\\n          <th>Name</th>\\r\\n          <th>Access</th>\\r\\n          <th>\\r\\n            <a class=\\\"btn btn-outline-success\\\" routerLink=\\\"/role\\\"><i class=\\\"fa fa-plus-square\\\"></i> Create New</a>\\r\\n          </th>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of roleList\\\">\\r\\n            <td (click)=\\\"openForEdit(item.Id)\\\">{{item.Name}}</td>\\r\\n            <td (click)=\\\"openForEdit(item.Id)\\\">{{item.Access}}</td>\\r\\n            <td>\\r\\n                <a class=\\\"btn text-danger\\\" (click)=\\\"onRoleDelete(item.Id)\\\"><i class=\\\"fa fa-trash fa-lg\\\"></i></a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { RoleService } from '../shared/role.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-roles',\r\n  templateUrl: './roles.component.html',\r\n  styleUrls: ['./roles.component.css']\r\n})\r\nexport class RolesComponent implements OnInit {\r\n\r\n  roleList;\r\n  constructor(private service: RoleService,\r\n    private router: Router,\r\n    private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.refreshList();\r\n  }\r\n\r\n  refreshList() {\r\n    this.service.getRolesList().then(res => this.roleList = res);\r\n  }\r\n\r\n  openForEdit(id: number) {\r\n    this.router.navigate(['/role/edit/' + id]);\r\n  }\r\n\r\n  onRoleDelete(id: number) {\r\n    if (confirm('Are you sure to delete this record?')) {\r\n      this.service.deleteRole(id).then(res => {\r\n        this.refreshList();\r\n        this.toastr.warning(\"Deleted Successfully\", \"Restaurent App.\");\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NhbGVpbnZvaWNlL3NhbGVpbnZvaWNlLWhlYWRlci9zYWxlaW52b2ljZS1oZWFkZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-menus></app-menus>\\r\\n<div class=\\\"jumbotron\\\">\\r\\n  <h1 class=\\\"display-4 text-center\\\">Invoice Register</h1>\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <form [formGroup]=\\\"service.formInvoice\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit()\\\">\\r\\n        <input type=\\\"hidden\\\" name=\\\"SaleInvoiceId\\\" [value]=\\\"service.formInvoice.SaleInvoiceId\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group required\\\">\\r\\n                <label>InvoiceNbr</label>\\r\\n                <input class=\\\"form-control\\\" formControlName=\\\"InvoiceNbr\\\" placeholder=\\\"NEW\\\" readonly> \\r\\n                <label class=\\\"text-danger\\\" *ngIf=\\\"service.formInvoice.get('InvoiceNbr').touched && service.formInvoice.get('InvoiceNbr').errors?.required\\\">This field is mandatory.</label>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <label>Currency</label>\\r\\n                  <select class=\\\"form-control\\\" formControlName=\\\"Currency\\\" required>\\r\\n                    <option value=\\\"KHR\\\" >KHR</option>\\r\\n                    <option value=\\\"USD\\\" >USD</option>\\r\\n                  </select>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Customer</label>\\r\\n                <select class=\\\"form-control\\\" formControlName=\\\"CustomerId\\\" required (change)=\\\"onChangeCustomer($event)\\\" >\\r\\n                  <option value=\\\"0\\\">-Select-</option>\\r\\n                  <option *ngFor=\\\"let item of customerList\\\" value=\\\"{{item.CustomerId}}\\\">{{item.CustomerName}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Project</label>\\r\\n                <select class=\\\"form-control\\\" formControlName=\\\"ProjectId\\\" required (change)=\\\"onChangeProject($event)\\\">\\r\\n                  <option value=\\\"0\\\">-Select-</option>\\r\\n                  <option *ngFor=\\\"let item of projectList\\\" value=\\\"{{item.ProjectId}}\\\">{{item.ProjectName}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"form-group required\\\">\\r\\n                      <label>TotalQty</label>\\r\\n                      <input class=\\\"form-control\\\" formControlName=\\\"TotalQty\\\" readonly>\\r\\n                      <label class=\\\"text-danger\\\" *ngIf=\\\"service.formInvoice.get('TotalQty').touched && service.formInvoice.get('TotalQty').errors?.required\\\">This field is mandatory.</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group required\\\">\\r\\n                      <label>TotalWeight</label>\\r\\n                      <input class=\\\"form-control\\\" formControlName=\\\"TotalWeight\\\" readonly>\\r\\n                      <label class=\\\"text-danger\\\" *ngIf=\\\"service.formInvoice.get('TotalWeight').touched && service.formInvoice.get('TotalWeight').errors?.required\\\">This field is mandatory.</label>\\r\\n                    </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"form-group required\\\">\\r\\n                    <label>TotalAmount</label>\\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"TotalAmount\\\" readonly>\\r\\n                    <label class=\\\"text-danger\\\" *ngIf=\\\"service.formInvoice.get('TotalAmount').touched && service.formInvoice.get('TotalAmount').errors?.required\\\">This field is mandatory.</label>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                      <mat-form-field>\\r\\n                        <input class=\\\"form-control\\\" formControlName=\\\"DocDate\\\" matInput [matDatepicker]=\\\"myDatepicker1\\\" placeholder=\\\"Choose date\\\">\\r\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"myDatepicker1\\\"></mat-datepicker-toggle>\\r\\n                        <mat-datepicker #myDatepicker1></mat-datepicker>\\r\\n                      </mat-form-field>\\r\\n                  </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group required\\\">\\r\\n              <label>Description</label>\\r\\n              <input class=\\\"form-control\\\" formControlName=\\\"Description\\\">\\r\\n              <label class=\\\"text-danger\\\" *ngIf=\\\"service.formInvoice.get('Description').touched && service.formInvoice.get('Description').errors?.required\\\">This field is mandatory.</label>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n        </div> \\r\\n        \\r\\n        <!--Receipt line table-->\\r\\n        <table class=\\\"table table-borderless\\\">\\r\\n            <thead class=\\\"thead-light\\\">\\r\\n              <th>WarehouseId</th>\\r\\n              <th>InventoryId</th>\\r\\n              <th>Qty</th>\\r\\n              <th>Weight</th>\\r\\n              <th>Unitprice</th>\\r\\n              <th>ExtAmount</th>\\r\\n              <th>\\r\\n                <a class=\\\"btn btn-sm btn-success text-white\\\" (click)=\\\"AddOrEditInvoiceLine(null,service.formInvoice.SaleInvoiceId)\\\"><i class=\\\"fa fa-plus\\\"></i> Add Item</a>\\r\\n              </th>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngIf=\\\"service.invoiceLine.length==0\\\" [class.text-danger]=\\\"!isValid && service.invoiceLine.length==0\\\">\\r\\n                <td class=\\\"font-italic text-center\\\" colspan=\\\"5\\\">\\r\\n                  No invoice line selected for this invoice.\\r\\n                </td>\\r\\n              </tr>\\r\\n  \\r\\n              <tr *ngFor=\\\"let item of service.invoiceLine;let i=index;\\\">\\r\\n                <td>{{item.WarehouseName}}</td>\\r\\n                <td>{{item.InventoryDesc}}</td>\\r\\n                <td>{{item.Qty}}</td>\\r\\n                <td>{{item.Weight}}</td>\\r\\n                <td>{{item.Unitprice}}</td>\\r\\n                <td>{{item.ExtAmount}}</td>\\r\\n                <td>\\r\\n                  <a class=\\\"btn btn-sm btn-info text-white\\\" (click)=\\\"AddOrEditInvoiceLine(i,service.formInvoice.SaleInvoiceId)\\\"><i class=\\\"fas fa-pencil-alt\\\"></i></a>\\r\\n                  <a class=\\\"btn btn-sm btn-danger text-white ml-1\\\" (click)=\\\"onDeleteInvoiceLine(item.SaleInvoiceLineId,i)\\\"><i class=\\\"fa fa-trash\\\"></i></a>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        \\r\\n        <div class=\\\"form-group\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-dark\\\" [disabled]=\\\"!service.formInvoice.valid\\\"><i class=\\\"fa fa-database\\\"></i> Submit</button>\\r\\n          <a class=\\\"btn btn-outline-dark ml-1\\\" routerLink=\\\"/invoice\\\"><i class=\\\"fa fa-table\\\"></i> View Invoice Register</a>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { SaleinvoiceService } from 'src/app/shared/saleinvoice.service';\r\nimport { ProjectService } from 'src/app/shared/project.service';\r\nimport { SaleinvoiceLineComponent } from '../saleinvoice-line/saleinvoice-line.component';\r\nimport { Customer } from 'src/app/shared/customer.model';\r\nimport { CustomerService } from 'src/app/shared/customer.service';\r\n\r\n@Component({\r\n  selector: 'app-saleinvoice-header',\r\n  templateUrl: './saleinvoice-header.component.html',\r\n  styleUrls: ['./saleinvoice-header.component.css']\r\n})\r\nexport class SaleinvoiceHeaderComponent implements OnInit {\r\n\r\n  deleteInvoiceLine:string;\r\n  customerList: Customer[];\r\n  projectList;\r\n  constructor(private service:SaleinvoiceService,private router: Router,private currentRoute: ActivatedRoute,\r\n    private toastr: ToastrService,private dialog: MatDialog,\r\n    private projectService:ProjectService,private customerService:CustomerService) { }\r\n\r\n  ngOnInit() {\r\n    let invoiceId = this.currentRoute.snapshot.paramMap.get('id');\r\n    this.customerService.getCustomerList().then(res => this.customerList = res as Customer[]);\r\n    this.projectService.getActiveProject().then(res => this.projectList = res);\r\n    if(invoiceId == null){\r\n      this.service.formInvoice.reset();\r\n      this.service.formInvoice.patchValue({\r\n        SaleInvoiceId:0,\r\n        Release:0,\r\n        InvoiceNbr:'NEW'\r\n      });\r\n      this.service.invoiceLine = [];\r\n      this.service.formInvoice.enable();\r\n    }\r\n    else{\r\n      //edit\r\n      this.service.invoiceLine = [];\r\n      this.deleteInvoiceLine='';\r\n      this.service.getInvoiceByID(parseInt(invoiceId)).then(res => {\r\n        this.service.formInvoice.setValue({\r\n          SaleInvoiceId:res.invoice['SaleInvoiceId'],\r\n          InvoiceNbr:res.invoice['InvoiceNbr'],\r\n          CustomerId:res.invoice['CustomerId'],\r\n          CustomerName:res.invoice['CustomerName'],\r\n          ProjectId:res.invoice['ProjectId'],\r\n          ProjectName:res.invoice['ProjectName'],\r\n          DocDate:res.invoice['DocDate'],\r\n          Currency:res.invoice['Currency'],\r\n          Description:res.invoice['Description'],\r\n          TotalQty:res.invoice['TotalQty'],\r\n          TotalWeight:res.invoice['TotalWeight'],\r\n          TotalAmount:res.invoice['TotalAmount'],\r\n          Release:res.invoice['Release'],\r\n          DeletedInvoiceLineIDs:''\r\n        });\r\n        if(this.service.formInvoice.value.Release == 1){\r\n          this.service.formInvoice.disable();\r\n        }\r\n        else{\r\n          this.service.formInvoice.enable();\r\n        }\r\n        this.service.invoiceLine = res.invoiceline;\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  AddOrEditInvoiceLine(invoiceLineIndex,invoiceId){\r\n    let projectId = this.service.formInvoice.value.ProjectId;\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.disableClose = true;\r\n    dialogConfig.width = \"50%\";\r\n    dialogConfig.data = { invoiceLineIndex, invoiceId, projectId };\r\n    this.dialog.open(SaleinvoiceLineComponent, dialogConfig).afterClosed().subscribe(res => {\r\n      this.updateGrandTotal();\r\n    });\r\n  }\r\n\r\n  onDeleteInvoiceLine(invoiceLineId:number,i:number){\r\n    if(invoiceLineId != null){\r\n      this.deleteInvoiceLine += invoiceLineId + \",\";\r\n      this.service.invoiceLine.splice(i,1);\r\n      this.updateGrandTotal();\r\n    }\r\n      \r\n  }\r\n\r\n  onChangeCustomer(item){\r\n    let text = item.target.options[item.target.options.selectedIndex].text;\r\n    this.service.formInvoice.patchValue({\r\n      CustomerName:text\r\n    });\r\n  }\r\n\r\n  onChangeProject(item){\r\n    let text = item.target.options[item.target.options.selectedIndex].text;\r\n    this.service.formInvoice.patchValue({\r\n      ProjectName:text\r\n    });\r\n  }\r\n\r\n  updateGrandTotal(){\r\n    this.service.formInvoice.patchValue({\r\n      TotalQty:this.service.invoiceLine.reduce((prev, curr) => {\r\n        return prev + parseFloat(curr.Qty.toString()) ;\r\n      }, 0),\r\n      TotalWeight:this.service.invoiceLine.reduce((prev, curr) => {\r\n        return prev + parseFloat(curr.Weight.toString()) ;\r\n      }, 0),\r\n      TotalAmount:this.service.invoiceLine.reduce((prev,curr) => { \r\n        return prev + curr.ExtAmount;\r\n      },0)\r\n    });\r\n  }\r\n\r\n  onSubmit(){\r\n    if(this.service.formInvoice.value.SaleInvoiceId == 0 ){\r\n      if (confirm('Do you want to complete this record?')) {\r\n        this.service.formInvoice.patchValue({\r\n          Release:1\r\n        });\r\n        this.insertRecord();\r\n      }\r\n      else{\r\n        this.insertRecord();\r\n      }\r\n    }\r\n    else{\r\n      if (confirm('Do you want to complete this record?')) {\r\n        this.service.formInvoice.patchValue({\r\n          Release:1\r\n        });\r\n        this.updateRecord();\r\n      }\r\n      else{\r\n        this.updateRecord();\r\n      }\r\n      \r\n    }\r\n  }\r\n\r\n  insertRecord(){\r\n    this.service.formInvoice.patchValue({\r\n      DocDate: this.getLocalDate(this.service.formInvoice.value.DocDate.toLocaleDateString())\r\n    });\r\n    this.service.postInvoice().subscribe(res => {\r\n      this.service.formInvoice.reset();\r\n      this.service.invoiceLine=[];\r\n      this.toastr.success('Submitted Successfully','Invoice Register');\r\n      this.router.navigate(['/invoice']);\r\n    })\r\n  }\r\n\r\n  updateRecord(){\r\n    if(this.service.formInvoice.value.DocDate.toLocaleString().indexOf('/') !== -1){\r\n      this.service.formInvoice.patchValue({\r\n        DocDate: this.getLocalDate(this.service.formInvoice.value.DocDate.toLocaleDateString())\r\n      });\r\n    }\r\n    this.service.formInvoice.patchValue({\r\n      DeletedInvoiceLineIDs:this.deleteInvoiceLine\r\n    });\r\n    this.service.putInvoice().subscribe(res => {\r\n      this.service.formInvoice.reset();\r\n      this.deleteInvoiceLine='';\r\n      this.service.invoiceLine = [];\r\n      this.toastr.success('Submitted Successfully','Invoice Register');\r\n      this.router.navigate(['/invoice']);\r\n    })\r\n  }\r\n\r\n  getLocalDate(item:string){\r\n    var ldate = item.split('/');\r\n    var date = ldate[2] + '-' + ldate[0] + '-' + ldate[1];\r\n    return new Date(date);\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NhbGVpbnZvaWNlL3NhbGVpbnZvaWNlLWxpbmUvc2FsZWludm9pY2UtbGluZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h4 class=\\\"dispaly-4\\\">Invoice Line Details</h4>\\r\\n<hr>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"jumbotron\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n              <form [formGroup]=\\\"service.formInvoiceLine\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit()\\\">\\r\\n                <input hidden class=\\\"form-control\\\" formControlName=\\\"SaleInvoiceLineId\\\">\\r\\n                <input hidden class=\\\"form-control\\\" formControlName=\\\"SaleInvoiceId\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Warehouse</label>\\r\\n                    <select class=\\\"form-control\\\" formControlName=\\\"WarehouseId\\\" (change)=\\\"onChangeWarehouse($event)\\\">\\r\\n                      <option value=\\\"0\\\">-Select Warehouse-</option>\\r\\n                      <option *ngFor=\\\"let item of warehouseList\\\" value=\\\"{{item.WarehouseId}}\\\">{{item.WarehouseName}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Inventory</label>\\r\\n                    <select class=\\\"form-control\\\" formControlName=\\\"InventoryId\\\" (change)=\\\"onChangeInventory($event)\\\">\\r\\n                      <option value=\\\"0\\\">-Select Inventory-</option>\\r\\n                      <option *ngFor=\\\"let item of inventoryList\\\" value=\\\"{{item.InventoryId}}\\\">{{item.InventoryDesr}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group required\\\">\\r\\n                  <label>Qty</label>\\r\\n                  <input class=\\\"form-control\\\" formControlName=\\\"Qty\\\">\\r\\n                  <label class=\\\"text-danger\\\" *ngIf=\\\"service.formInvoiceLine.get('Qty').touched && service.formInvoiceLine.get('Qty').errors?.required\\\">This field is mandatory.</label>\\r\\n                </div>\\r\\n                <div class=\\\"form-group required\\\">\\r\\n                  <label>Weight</label>\\r\\n                  <input class=\\\"form-control\\\" formControlName=\\\"Weight\\\" (change)=\\\"updatePrice($event.target.value,1)\\\">\\r\\n                  <label class=\\\"text-danger\\\" *ngIf=\\\"service.formInvoiceLine.get('Weight').touched && service.formInvoiceLine.get('Weight').errors?.required\\\">This field is mandatory.</label>\\r\\n                </div>\\r\\n                <div class=\\\"form-group required\\\">\\r\\n                    <label>Unitprice</label>\\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"Unitprice\\\" (change)=\\\"updatePrice($event.target.value,2)\\\">\\r\\n                    <label class=\\\"text-danger\\\" *ngIf=\\\"service.formInvoiceLine.get('Unitprice').touched && service.formInvoiceLine.get('Unitprice').errors?.required\\\">This field is mandatory.</label>\\r\\n                </div>\\r\\n                <div class=\\\"form-group required\\\">\\r\\n                    <label>ExtAmount</label>\\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"ExtAmount\\\" readonly>\\r\\n                    <label class=\\\"text-danger\\\" *ngIf=\\\"service.formInvoiceLine.get('ExtAmount').touched && service.formInvoiceLine.get('ExtAmount').errors?.required\\\">This field is mandatory.</label>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-dark\\\"><i class=\\\"fa fa-database\\\"></i> Submit</button>\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-outline-dark ml-1\\\" [mat-dialog-close]><i class=\\\"fa fa-close\\\"></i> Close</button>\\r\\n                </div>\\r\\n              </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\nimport { SaleinvoiceService } from 'src/app/shared/saleinvoice.service';\r\nimport { WarehouseService } from 'src/app/shared/warehouse.service';\r\nimport { InventoryService } from 'src/app/shared/inventory.service';\r\n\r\n@Component({\r\n  selector: 'app-saleinvoice-line',\r\n  templateUrl: './saleinvoice-line.component.html',\r\n  styleUrls: ['./saleinvoice-line.component.css']\r\n})\r\nexport class SaleinvoiceLineComponent implements OnInit {\r\n\r\n  warehouseList;\r\n  inventoryList;\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data,\r\n  public dialogRef: MatDialogRef<SaleinvoiceLineComponent>,private service:SaleinvoiceService,\r\n  private warehouseService:WarehouseService,private inventoryService:InventoryService) { }\r\n\r\n  ngOnInit() {\r\n    this.inventoryService.getInventoryAnimal().then(res => this.inventoryList = res);\r\n    this.warehouseService.getWarehouseByProjectId(this.data.projectId).then(res => this.warehouseList = res);\r\n    if(this.data.invoiceLineIndex == null){\r\n      this.service.formInvoiceLine.reset();\r\n      this.service.formInvoiceLine.patchValue({\r\n        SaleInvoiceLineId:0,\r\n        SaleInvoiceId:0\r\n      });\r\n    }\r\n    else{\r\n      //edit\r\n      this.service.formInvoiceLine.setValue(this.service.invoiceLine[this.data.invoiceLineIndex]);\r\n    }\r\n\r\n  }\r\n\r\n  onChangeWarehouse(item){\r\n    let text = item.target.options[item.target.options.selectedIndex].text;\r\n    this.service.formInvoiceLine.patchValue({\r\n      WarehouseName:text\r\n    });\r\n  }\r\n\r\n  onChangeInventory(item){\r\n    let text = item.target.options[item.target.options.selectedIndex].text;\r\n    this.service.formInvoiceLine.patchValue({\r\n      InventoryDesc:text\r\n    });\r\n  }\r\n\r\n  updatePrice(valuechange,type){\r\n    if(type == '1'){\r\n      let extamount = parseFloat((this.service.formInvoiceLine.value.Unitprice * valuechange).toFixed(2));\r\n      this.service.formInvoiceLine.patchValue({\r\n        ExtAmount:extamount\r\n      });\r\n    }\r\n    else{\r\n      let extamount = parseFloat((this.service.formInvoiceLine.value.Weight * valuechange).toFixed(2));\r\n      this.service.formInvoiceLine.patchValue({\r\n        ExtAmount:extamount\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit(){\r\n    if(this.data.receiptLineIndex == null){\r\n      //add\r\n      this.service.invoiceLine.push(this.service.formInvoiceLine.value);\r\n    }\r\n    else{\r\n      //edit\r\n      this.service.invoiceLine[this.data.receiptLineIndex] = this.service.formInvoiceLine.value;\r\n    }\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NhbGVpbnZvaWNlL3NhbGVpbnZvaWNlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-menus></app-menus>\\r\\n<div class=\\\"jumbotron\\\">\\r\\n  <h1 class=\\\"display-4 text-center\\\">Invoice Register</h1>\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12 mat-elevation-z8\\\">  \\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n            <form #form=\\\"ngForm\\\" (submit)=\\\"onSubmit()\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                  <mat-form-field>\\r\\n                    <input name=\\\"fromDate\\\" [(ngModel)]=\\\"fromDate\\\" class=\\\"form-control\\\" matInput [matDatepicker]=\\\"myDatepicker1\\\" placeholder=\\\"Start date\\\">\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"myDatepicker1\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #myDatepicker1></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n                    <input name=\\\"toDate\\\" [(ngModel)]=\\\"toDate\\\" class=\\\"form-control\\\" matInput [matDatepicker]=\\\"myDatepicker2\\\" placeholder=\\\"End date\\\">\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"myDatepicker2\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #myDatepicker2></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                  <button mat-button type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\">Load...</button>\\r\\n              </div>\\r\\n            </form>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <mat-form-field>\\r\\n              <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n            </mat-form-field>\\r\\n        </div>         \\r\\n      </div>  \\r\\n      <table class=\\\"table table-hover\\\" mat-table [dataSource]=\\\"invoiceList\\\" matSort>\\r\\n        <ng-container matColumnDef=\\\"InvoiceNbr\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> InvoiceNbr </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"openForEdit(element.SaleInvoiceId)\\\"> {{element.InvoiceNbr}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"CustomerName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Customer Name </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"openForEdit(element.SaleInvoiceId)\\\"> {{element.CustomerName}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"ProjectName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Project Name </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"openForEdit(element.SaleInvoiceId)\\\"> {{element.ProjectName}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"Description\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"openForEdit(element.SaleInvoiceId)\\\"> {{element.Description}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"Currency\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"openForEdit(element.SaleInvoiceId)\\\"> {{element.Currency}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"DocDate\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Doc Date </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"openForEdit(element.SaleInvoiceId)\\\"> {{element.DocDate | date}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"TotalQty\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> TotalQty </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"openForEdit(element.SaleInvoiceId)\\\"> {{element.TotalQty}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"TotalAmount\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> TotalAmount </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"openForEdit(element.SaleInvoiceId)\\\"> {{element.TotalAmount}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"Delete\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> \\r\\n            <a class=\\\"btn btn-outline-success\\\" routerLink=\\\"/invoiceheader\\\"><i class=\\\"fa fa-plus-square\\\"></i> Create New</a> \\r\\n          </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n            <a class=\\\"btn text-danger\\\" (click)=\\\"onInvoiceDelete(element.SaleInvoiceId,element.Release)\\\"><i class=\\\"fa fa-trash fa-lg\\\"></i></a> \\r\\n          </td>\\r\\n        </ng-container>\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n      </table>\\r\\n      <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { SaleinvoiceService } from '../shared/saleinvoice.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\r\nimport { Saleinvoice } from '../shared/saleinvoice.model';\r\n\r\n@Component({\r\n  selector: 'app-saleinvoice',\r\n  templateUrl: './saleinvoice.component.html',\r\n  styleUrls: ['./saleinvoice.component.css']\r\n})\r\nexport class SaleinvoiceComponent implements OnInit {\r\n\r\n  fromDate:Date;\r\n  toDate:Date;\r\n  displayedColumns: string[] = ['InvoiceNbr','CustomerName','ProjectName', 'Description','Currency','DocDate','TotalQty','TotalAmount','Delete'];\r\n  invoiceList: MatTableDataSource<Saleinvoice>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(private service: SaleinvoiceService,\r\n    private router: Router,\r\n    private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.getInvoiceList();\r\n  }\r\n\r\n  getInvoiceList(){\r\n    this.service.getInvoiceList().then(res => {\r\n      this.invoiceList = new MatTableDataSource(res as Array<Saleinvoice>);\r\n      this.invoiceList.paginator = this.paginator;\r\n      this.invoiceList.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  getReceiptByDate(from,to){\r\n    this.service.getInvoiceByDate(from,to).then(res => {\r\n      this.invoiceList = new MatTableDataSource(res as Array<Saleinvoice>);\r\n      this.invoiceList.paginator = this.paginator;\r\n      this.invoiceList.sort = this.sort;\r\n    }); \r\n  }\r\n\r\n  onInvoiceDelete(id: number,status:number) {\r\n    if(status == 1){\r\n      this.toastr.error(\"You cannot delete completed record.\", \"Invoice Register.\");\r\n    }\r\n    else{\r\n      if (confirm('Are you sure to delete this record?')) {\r\n        this.service.deleteInvoice(id).then(res => {\r\n          let index = this.invoiceList.data.findIndex(x=>x.SaleInvoiceId == id);\r\n          this.invoiceList.data.splice(index,1);\r\n          this.invoiceList._updateChangeSubscription();\r\n          this.toastr.warning(\"Deleted Successfully\", \"Invoice Register.\");\r\n        });\r\n      }\r\n    }\r\n   \r\n  }\r\n\r\n  openForEdit(invoiceId: number) {\r\n    this.router.navigate(['/invoiceheader/edit/' + invoiceId]);\r\n  }\r\n\r\n  onSubmit(){\r\n    this.getReceiptByDate(this.getLocalDate(this.fromDate.toLocaleDateString()),this.getLocalDate(this.toDate.toLocaleDateString()));\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.invoiceList.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.invoiceList.paginator) {\r\n      this.invoiceList.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getLocalDate(item:string){\r\n    var ldate = item.split('/');\r\n    var date = ldate[2] + '-' + ldate[0] + '-' + ldate[1];\r\n    return date;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Category } from './category.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { MatTableDataSource } from '@angular/material';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoryService {\r\n\r\n  formData:Category;\r\n  list:MatTableDataSource<Category>;\r\n  constructor(private http:HttpClient) { }\r\n\r\n  postCategoryDetail(){\r\n    return this.http.post(environment.apiURL + \"/Categories\", this.formData)\r\n  }\r\n\r\n  PutCategoryDetail(){\r\n    return this.http.put(environment.apiURL + \"/Categories/\" + this.formData.CategoryId , this.formData)\r\n  }\r\n  DeleteCategoryDetail(id){\r\n    return this.http.delete(environment.apiURL + \"/Categories/\" + id)\r\n  }\r\n\r\n  getCategory(){\r\n    return this.http.get(environment.apiURL + \"/Categories\").toPromise();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Customer } from './customer.model';\r\nimport { MatTableDataSource } from '@angular/material';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomerService {\r\n\r\n  formData:Customer;\r\n  list:MatTableDataSource<Customer>;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getCustomerList(){\r\n    return this.http.get(environment.apiURL+'/Customers').toPromise();\r\n   }\r\n\r\n   postCustomersDetail(){\r\n    return this.http.post(environment.apiURL + \"/Customers\", this.formData)\r\n  }\r\n\r\n  PutCustomersDetail(){\r\n    return this.http.put(environment.apiURL + \"/Customers/\" + this.formData.CustomerId , this.formData)\r\n  }\r\n\r\n  DeleteCustomersDetail(id){\r\n    return this.http.delete(environment.apiURL + \"/Customers/\" + id)\r\n  }\r\n}\r\n","import { Injectable, ViewChild } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\r\nimport { Dailyanimalgrow } from './dailyanimalgrow.model';\r\nimport { WarehouseService } from './warehouse.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DailyanimalgrowService {\r\n\r\n  warehouseList;\r\n  list:MatTableDataSource<Dailyanimalgrow>;\r\n  constructor(private fb:FormBuilder,private http: HttpClient,private warehouseService:WarehouseService) { }\r\n\r\n  formModel = this.fb.group({\r\n    DailyGrowId:[''],\r\n    InventoryId:['',Validators.required],\r\n    ProjectId:['',Validators.required],\r\n    WarehouseId:['',Validators.required],\r\n    ProjectName:[''],\r\n    WarehouseName:[''],\r\n    InventoryDesc:[''],\r\n    DateGrow:['',Validators.required],\r\n    Weight:['',Validators.required],\r\n  });\r\n\r\n  getDailyGrow(){\r\n    return this.http.get(environment.apiURL + '/DailyAnimalGrows').toPromise();\r\n  }\r\n\r\n  getDailyGrowById(Id:number){\r\n    return this.http.get(environment.apiURL + '/DailyAnimalGrows/' + Id).toPromise();\r\n  }\r\n\r\n  getDailyGrowWithStandard(projectId:number,standardId:number){\r\n    return this.http.get(environment.apiURL + '/DailyAnimalGrows/viewwithstandard/' + projectId + \"/\" + standardId).toPromise();\r\n  }\r\n\r\n  deleteDailyGrow(id:number){\r\n    return this.http.delete(environment.apiURL + '/DailyAnimalGrows/' + id);\r\n  }\r\n\r\n  postDailyGrow(){\r\n    return this.http.post(environment.apiURL + '/DailyAnimalGrows', this.formModel.value);\r\n  }\r\n\r\n  putDailyGrow(){\r\n    return this.http.put(environment.apiURL + '/DailyAnimalGrows/' + this.formModel.value.DailyGrowId, this.formModel.value);\r\n  }\r\n\r\n  populateForm(pd:Dailyanimalgrow){\r\n    this.warehouseService.getWarehouseByProjectId(pd.ProjectId).then(res => this.warehouseList = res);\r\n    this.formModel.patchValue(Object.assign({},pd));\r\n }\r\n\r\n onChangeProject(item){\r\n  this.warehouseService.getWarehouseByProjectId(item.target.value).then(res => this.warehouseList = res);\r\n  let text = item.target.options[item.target.options.selectedIndex].text;\r\n  this.formModel.patchValue({\r\n    ProjectName:text\r\n  });\r\n}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InsitestatusService {\r\n\r\n  constructor(private http: HttpClient,private fb:FormBuilder) { }\r\n\r\n  formInsiteFilter = this.fb.group({\r\n    ProjectId:['',Validators.required],\r\n    InventoryId:[''],\r\n  });\r\n  \r\n  getInsiteStatusByPWI(projectId:number,warehouseId:number,inventoryId:number):any {\r\n    return this.http.get(environment.apiURL + '/INSiteStatus/Cost/'+projectId+'/'+warehouseId + \"/\" + inventoryId).toPromise();\r\n  }\r\n\r\n  getInsiteStatusByProjectInventory(projectId:number,inventoryId:number):any {\r\n    return this.http.get(environment.apiURL + '/INSiteStatus/Projectstatus/'+projectId+'/' + inventoryId).toPromise();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Inventory } from './inventory.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatTableDataSource } from '@angular/material';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InventoryService {\r\n\r\n  formData:Inventory\r\n  list:MatTableDataSource<Inventory>;\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  postInventoryDetail(){\r\n    \r\n    return this.http.post(environment.apiURL + \"/Inventorys\", this.formData)\r\n  }\r\n\r\n  PutInventoryDetail(){\r\n    return this.http.put(environment.apiURL + \"/Inventorys/\" + this.formData.InventoryId , this.formData)\r\n  }\r\n\r\n  DeleteInventoryDetail(id){\r\n    return this.http.delete(environment.apiURL + \"/Inventorys/\" + id)\r\n  }\r\n  \r\n  getInventory(){\r\n    return this.http.get(environment.apiURL + \"/Inventorys\").toPromise();\r\n  }\r\n\r\n  getInventoryAnimal(){\r\n    return this.http.get(environment.apiURL + \"/Inventorys/Category/ANIMAL\").toPromise();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ItemService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  getItemList(){\r\n    return this.http.get(environment.apiURL+'/Inventorys').toPromise();\r\n   }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Order } from './order.model';\r\nimport { OrderItem } from './order-item.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n  formData:Order;\r\n  orderItems: OrderItem[];\r\n  constructor(private http: HttpClient) { }\r\n\r\n  saveOrUpdateOrder() {\r\n    var body = {\r\n      ...this.formData,\r\n      OrderLines: this.orderItems\r\n    };\r\n    return this.http.post(environment.apiURL + '/Orders', body);\r\n  }\r\n\r\n  postOrders(){\r\n    var body = {\r\n      ...this.formData,\r\n      OrderLines: this.orderItems\r\n    };\r\n    return this.http.post(environment.apiURL + '/Orders', body);\r\n  }\r\n\r\n  putOrders(){\r\n    var body = {\r\n      ...this.formData,\r\n      OrderLines: this.orderItems\r\n    };\r\n    return this.http.put(environment.apiURL + '/Orders/' + this.formData.OrderId, body);\r\n  }\r\n\r\n  getOrderList() {\r\n    return this.http.get(environment.apiURL + '/Orders').toPromise();\r\n  }\r\n\r\n  getOrderByID(id:number):any {\r\n    return this.http.get(environment.apiURL + '/Orders/'+id).toPromise();\r\n  }\r\n\r\n  deleteOrder(id:number) {\r\n    return this.http.delete(environment.apiURL + '/Orders/'+id).toPromise();\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { PaymentDetail } from './payment-detail.model';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PaymentDetailService {\r\n  formData:PaymentDetail\r\n  list: PaymentDetail[];\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  postPaymentDetail(){\r\n    return this.http.post(environment.apiURL + \"/PaymentDetail\", this.formData)\r\n  }\r\n\r\n  PutPaymentDetail(){\r\n    return this.http.put(environment.apiURL + \"/PaymentDetail/\" + this.formData.PMId , this.formData)\r\n  }\r\n  DeletePaymentDetail(id){\r\n    return this.http.delete(environment.apiURL + \"/PaymentDetail/\" + id)\r\n  }\r\n  refressList(){\r\n    this.http.get(environment.apiURL + \"/PaymentDetail\")\r\n        .toPromise()\r\n        .then(res => this.list = res as PaymentDetail[])\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Project } from './project.model';\r\nimport { MatTableDataSource } from '@angular/material';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectService {\r\n  formData:Project\r\n  list:MatTableDataSource<Project>;\r\n\r\n\r\n\r\n  constructor(private http:HttpClient,private fb:FormBuilder) { }\r\n\r\n  formDaily = this.fb.group({\r\n    ProjectId:['',Validators.required],\r\n    StdFeedId:['',Validators.required],\r\n    StdAnimalId:['',Validators.required]\r\n  });\r\n\r\n\r\n  postProjectsDetail(){\r\n    \r\n    return this.http.post(environment.apiURL + \"/Projects\", this.formData)\r\n  }\r\n\r\n  PutProjectsDetail(){\r\n    return this.http.put(environment.apiURL + \"/Projects/\" + this.formData.ProjectId , this.formData)\r\n  }\r\n  DeleteProjectsDetail(id){\r\n    return this.http.delete(environment.apiURL + \"/Projects/\" + id)\r\n  }\r\n  getAllProject(){\r\n    return this.http.get(environment.apiURL + \"/Projects\").toPromise();\r\n  }\r\n  getActiveProject(){\r\n   return this.http.get(environment.apiURL + \"/Projects/ProjectStatus/Active\").toPromise();\r\n  }\r\n  getDailyProject(projectId:number,standardFeed:number,standardAnimal:number){\r\n    return this.http.get(environment.apiURL + \"/Projects/ProjectDaily/\" + projectId + \"/\" + standardFeed + \"/\" + standardAnimal).toPromise();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectaccessService {\r\n  userAdded=[];\r\n  constructor(private fb:FormBuilder,private http:HttpClient) { }\r\n\r\n  formModel = this.fb.group({\r\n    ProjectAccessId:[''],\r\n    UserId:['',Validators.required],\r\n    ProjectId:['',Validators.required],\r\n  });\r\n\r\n  getProjectaccessList() {\r\n    return this.http.get(environment.apiURL + '/ProjectAccesses').toPromise();\r\n  }\r\n\r\n  getProjectaccessByID(deviceValue){\r\n    return this.http.get(environment.apiURL + '/ProjectAccesses/'+ deviceValue).toPromise()\r\n  }\r\n\r\n  onDelete(id:number,projectId:number){     \r\n    return this.http.delete(environment.apiURL + '/ProjectAccesses/'+ id + \"/\" + projectId ).toPromise();   \r\n  }\r\n\r\n  onAdd(item){\r\n    var body = {\r\n      ProjectId: this.formModel.value.ProjectId,\r\n      UserId: item.Id\r\n    }\r\n    return this.http.post(environment.apiURL + '/ProjectAccesses', body);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ReceiptLine } from './receipt-line.model';\r\nimport { Receipt } from './receipt.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReceiptService {\r\n\r\n  receipt:Receipt;\r\n  receiptLine:ReceiptLine[];\r\n  constructor(private http: HttpClient,private fb:FormBuilder) { }\r\n  \r\n  formReceipt = this.fb.group({\r\n    TranType:['',Validators.required],\r\n    ReceiptId:[''],\r\n    ReceiptNbr:[''],\r\n    Description:[''],\r\n    ReceiptDate:['',Validators.required],\r\n    TotalQty:[''],\r\n    TotalCost:[''],\r\n    Release:[''],\r\n    DeletedReceiptLineIDs:['']\r\n  });\r\n\r\n  formReceiptLine = this.fb.group({\r\n    ReceiptLineId:[''],\r\n    ReceiptId:['',Validators.required],\r\n    ProjectId:['',Validators.required],\r\n    ProjectName:[''],\r\n    Qty:['',Validators.required],\r\n    UnitCost:['',Validators.required],\r\n    ExtCost:['',Validators.required],\r\n    WarehouseId:['',Validators.required],\r\n    WarehouseName:[''],\r\n    InventoryId:['',Validators.required],\r\n    InventoryDesr:[''],\r\n    Reason:['',Validators.required]\r\n  });\r\n\r\n  getReceiptList() {\r\n    return this.http.get(environment.apiURL + '/Receipts').toPromise();\r\n  }\r\n\r\n  getReceiptByID(id:number):any {\r\n    return this.http.get(environment.apiURL + '/Receipts/'+id).toPromise();\r\n  }\r\n\r\n  getReceiptByDate(from:Date,to:Date){\r\n    return this.http.get(environment.apiURL + '/Receipts/ReceiptByDate/'+ from + \"/\" + to).toPromise();\r\n  }\r\n\r\n  postReceipt(){\r\n    var body = {\r\n      ...this.formReceipt.value,\r\n      ReceiptLines: this.receiptLine\r\n    };\r\n    return this.http.post(environment.apiURL + '/Receipts', body);\r\n  }\r\n\r\n  putReceipt(){\r\n    var body = {\r\n      ...this.formReceipt.value,\r\n      ReceiptLines: this.receiptLine\r\n    };\r\n    return this.http.put(environment.apiURL + '/Receipts/' + this.formReceipt.value.ReceiptId, body);\r\n  }\r\n\r\n  deleteReceipt(id:number) {\r\n    return this.http.delete(environment.apiURL + '/Receipts/'+id).toPromise();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Todoitemnode } from './todoitemnode.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleCtlService {\r\n\r\n  constructor(private http: HttpClient) { \r\n\r\n  }\r\n\r\n  getTreeList(){\r\n    return this.http.get(environment.apiURL+'/CtlDiscovery').toPromise();\r\n   }\r\n}\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { FormBuilder, Validators,FormGroup } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleService {\r\n  rolesAdded = [];\r\n  selectedCtl = [];\r\n  constructor(private fb:FormBuilder,private http:HttpClient) { }\r\n\r\n  formModel = this.fb.group({\r\n    Id:[''],\r\n    RoleName:['',Validators.required],\r\n    SelectedControllers:[''],\r\n  });\r\n\r\n  postRoles(){\r\n    var body = {\r\n      RoleName: this.formModel.value.RoleName,\r\n      SelectedControllers: this.selectedCtl\r\n    }\r\n    console.log(this.selectedCtl);\r\n    return this.http.post(environment.apiURL + '/ApplicationRole', body);\r\n  }\r\n\r\n  putRoles(){\r\n    var body = {\r\n      Id:this.formModel.value.Id,\r\n      RoleName: this.formModel.value.RoleName,\r\n      SelectedControllers: this.selectedCtl\r\n    }\r\n    return this.http.put(environment.apiURL + '/ApplicationRole/' + this.formModel.value.Id ,body);\r\n  }\r\n\r\n  getRolesList() {\r\n    return this.http.get(environment.apiURL + '/ApplicationRole').toPromise();\r\n  }\r\n\r\n  getRoleByID(id:string):any{\r\n    return this.http.get(environment.apiURL + '/ApplicationRole/'+id).toPromise();\r\n  }\r\n\r\n  deleteRole(id:number) {\r\n    return this.http.delete(environment.apiURL + '/ApplicationRole/'+id).toPromise();\r\n  }\r\n\r\n  onDelete(item:any){\r\n    var index = this.rolesAdded.indexOf(item.Id);\r\n    if (index > -1) {\r\n      this.rolesAdded.splice(index, 1);\r\n      var indexctl = this.selectedCtl.indexOf(item);\r\n      this.selectedCtl.splice(indexctl,1);\r\n    }\r\n  }\r\n\r\n  onAdd(item:any):void{\r\n    var index = this.rolesAdded.indexOf(item.Id);\r\n    if(index <= -1){\r\n        this.rolesAdded.push(item.Id);\r\n        this.selectedCtl.push(item);\r\n    }\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Saleinvoice } from './saleinvoice.model';\r\nimport { Saleinvoiceline } from './saleinvoiceline.model';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SaleinvoiceService {\r\n\r\n  invoice:Saleinvoice;\r\n  invoiceLine:Saleinvoiceline[];\r\n  constructor(private http: HttpClient,private fb:FormBuilder) { }\r\n\r\n  formInvoice = this.fb.group({\r\n    SaleInvoiceId:[''],\r\n    InvoiceNbr:['',Validators.required],\r\n    CustomerId:['',Validators.required],\r\n    CustomerName:[''],\r\n    ProjectId:['',Validators.required],\r\n    ProjectName:[''],\r\n    DocDate:['',Validators.required],\r\n    Currency:['',Validators.required],\r\n    Description:[''],\r\n    TotalQty:['',Validators.required],\r\n    TotalWeight:['',Validators.required],\r\n    TotalAmount:['',Validators.required],\r\n    Release:[''],\r\n    DeletedInvoiceLineIDs:['']\r\n  });\r\n\r\n  formInvoiceLine = this.fb.group({\r\n    SaleInvoiceLineId:[''],\r\n    SaleInvoiceId:['',Validators.required],\r\n    WarehouseId:['',Validators.required],\r\n    WarehouseName:[''],\r\n    InventoryDesc:[''],\r\n    InventoryId:['',Validators.required],\r\n    Qty:['',Validators.required],\r\n    Weight:['',Validators.required],\r\n    Unitprice:['',Validators.required],\r\n    ExtAmount:['',Validators.required],\r\n  });\r\n\r\n  getInvoiceList() {\r\n    return this.http.get(environment.apiURL + '/SaleInvoice').toPromise();\r\n  }\r\n\r\n  getInvoiceByID(id:number):any {\r\n    return this.http.get(environment.apiURL + '/SaleInvoice/'+id).toPromise();\r\n  }\r\n\r\n  getInvoiceByDate(from:Date,to:Date){\r\n    return this.http.get(environment.apiURL + '/SaleInvoice/InvoiceByDate/'+ from + \"/\" + to).toPromise();\r\n  }\r\n\r\n  postInvoice(){\r\n    var body = {\r\n      ...this.formInvoice.value,\r\n      SaleInvoiceLines: this.invoiceLine\r\n    };\r\n    return this.http.post(environment.apiURL + '/SaleInvoice', body);\r\n  }\r\n\r\n  putInvoice(){\r\n    var body = {\r\n      ...this.formInvoice.value,\r\n      SaleInvoiceLines: this.invoiceLine\r\n    };\r\n    return this.http.put(environment.apiURL + '/SaleInvoice/' + this.formInvoice.value.SaleInvoiceId, body);\r\n  }\r\n\r\n  deleteInvoice(id:number) {\r\n    return this.http.delete(environment.apiURL + '/SaleInvoice/'+id).toPromise();\r\n  }\r\n}\r\n","import { Injectable, ViewChild } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Standard } from './standard.model';\r\nimport { environment } from 'src/environments/environment';\r\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StandardService {\r\n\r\n  formData:Standard;\r\n  list:MatTableDataSource<Standard>;\r\n  constructor(private http:HttpClient) { }\r\n\r\n  postStandardDetail(){\r\n    return this.http.post(environment.apiURL + \"/Standards\", this.formData)\r\n  }\r\n\r\n  PutStandardDetail(){\r\n    return this.http.put(environment.apiURL + \"/Standards/\" + this.formData.StandardKey , this.formData)\r\n  }\r\n\r\n  DeleteStandardDetail(id){\r\n    return this.http.delete(environment.apiURL + \"/Standards/\" + id)\r\n  }\r\n\r\n  refressList(){\r\n    return this.http.get(environment.apiURL + \"/Standards\").toPromise();\r\n  }\r\n\r\n  getStandard(){\r\n    return this.http.get(environment.apiURL + \"/Standards\").toPromise();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Standardname } from './standardname.model';\r\nimport { MatTableDataSource } from '@angular/material';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StandardnameService {\r\n\r\n  formData:Standardname;\r\n  list:MatTableDataSource<Standardname>;\r\n  constructor(private http:HttpClient) { }\r\n\r\n  postStandardDetail(){\r\n    return this.http.post(environment.apiURL + \"/StandardNames\", this.formData)\r\n  }\r\n\r\n  PutStandardDetail(){\r\n    return this.http.put(environment.apiURL + \"/StandardNames/\" + this.formData.StandardNameId , this.formData)\r\n  }\r\n\r\n  DeleteStandardDetail(id){\r\n    return this.http.delete(environment.apiURL + \"/StandardNames/\" + id)\r\n  }\r\n\r\n  refressList(){\r\n    return this.http.get(environment.apiURL + \"/StandardNames\").toPromise();\r\n  }\r\n\r\n  getStandard(){\r\n    return this.http.get(environment.apiURL + \"/StandardNames\").toPromise();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Uom } from './uom';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { MatTableDataSource } from '@angular/material';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UomService {\r\n\r\n  formData:Uom\r\n  list:MatTableDataSource<Uom>;\r\n  constructor(private http:HttpClient) { }\r\n  postUomDetail(){\r\n    \r\n    return this.http.post(environment.apiURL + \"/UnitOfMeasures\", this.formData)\r\n  }\r\n\r\n  PutUomDetail(){\r\n    return this.http.put(environment.apiURL + \"/UnitOfMeasures/\" + this.formData.UomId , this.formData)\r\n  }\r\n\r\n  DeleteUomDetail(id){\r\n    return this.http.delete(environment.apiURL + \"/UnitOfMeasures/\" + id)\r\n  }\r\n  \r\n  getUom(){\r\n    return this.http.get(environment.apiURL + \"/UnitOfMeasures\").toPromise();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormBuilder,Validators, FormGroup, FormArray, FormControl } from '@angular/forms';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from 'src/environments/environment';\r\nimport { RoleService } from './role.service';\r\nimport { element } from '@angular/core/src/render3';\r\nimport { Role } from './role.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  rolesAdded = [];\r\n  constructor(private roleService:RoleService,private fb:FormBuilder,private http: HttpClient) {\r\n    \r\n   }\r\n\r\n  formModel = this.fb.group({\r\n    UserName: ['', Validators.required],\r\n    Email: ['', Validators.email],\r\n    FullName: [''],\r\n    Passwords: this.fb.group({\r\n      Password: ['', [Validators.required, Validators.minLength(4)]],\r\n      ConfirmPassword: ['', Validators.required]\r\n    }, { validator: this.comparePasswords })\r\n\r\n  });\r\n\r\n   userroleModel = this.fb.group({\r\n    UserId: [''],\r\n    UserName: ['', Validators.required],\r\n    Roles: ['']\r\n  });\r\n\r\n\r\n  comparePasswords(fb: FormGroup) {\r\n    let confirmPswrdCtrl = fb.get('ConfirmPassword');\r\n    //passwordMismatch\r\n    //confirmPswrdCtrl.errors={passwordMismatch:true}\r\n    if (confirmPswrdCtrl.errors == null || 'passwordMismatch' in confirmPswrdCtrl.errors) {\r\n      if (fb.get('Password').value != confirmPswrdCtrl.value)\r\n        confirmPswrdCtrl.setErrors({ passwordMismatch: true });\r\n      else\r\n        confirmPswrdCtrl.setErrors(null);\r\n    }\r\n  }\r\n\r\n  \r\n  onDelete(item:any){\r\n    var index = this.rolesAdded.indexOf(item.Name);\r\n    if (index > -1) {\r\n      this.rolesAdded.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  onAdd(item:any):void{\r\n    var index = this.rolesAdded.indexOf(item.Name);\r\n    if(index <= -1){\r\n      this.rolesAdded.push(item.Name);\r\n    }\r\n  }\r\n\r\n  register() {\r\n    var body = {\r\n      UserName: this.formModel.value.UserName,\r\n      Email: this.formModel.value.Email,\r\n      FullName: this.formModel.value.FullName,\r\n      Password: this.formModel.value.Passwords.Password\r\n    };\r\n    return this.http.post(environment.apiURL + '/ApplicationUser/Register', body);\r\n  }\r\n\r\n  putUser(){\r\n    var body = {\r\n      UserId: this.userroleModel.value.UserId,\r\n      UserName: this.userroleModel.value.UserName,\r\n      Roles: this.userroleModel.value.Roles\r\n    };\r\n    return this.http.put(environment.apiURL + '/Access/' + this.userroleModel.value.UserId,body);\r\n  }\r\n\r\n  login(formData) {\r\n    return this.http.post(environment.apiURL + '/ApplicationUser/Login', formData);\r\n  }\r\n\r\n  getUserProfile() {\r\n    return this.http.get(environment.apiURL + '/UserProfile');\r\n  }\r\n\r\n  getUserRoles(){\r\n    return this.http.get(environment.apiURL + '/Access').toPromise();\r\n  }\r\n\r\n  getUsers(){\r\n    return this.http.get(environment.apiURL + \"/ApplicationUser\").toPromise();\r\n  }\r\n\r\n  deleteUser(id:string){\r\n    return this.http.delete(environment.apiURL + '/Access/' + id).toPromise();\r\n  }\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Warehouse } from './warehouse.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { MatTableDataSource } from '@angular/material';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WarehouseService {\r\n  formData:Warehouse;\r\n  list:MatTableDataSource<Warehouse>;\r\n  constructor(private http:HttpClient) { }\r\n\r\n  postWarehousesDetail(){\r\n    return this.http.post(environment.apiURL + \"/Warehouses\", this.formData)\r\n  }\r\n\r\n  PutWarehousesDetail(){\r\n    return this.http.put(environment.apiURL + \"/Warehouses/\" + this.formData.WarehouseId , this.formData)\r\n  }\r\n  DeleteWarehousesDetail(id){\r\n    return this.http.delete(environment.apiURL + \"/Warehouses/\" + id)\r\n  }\r\n\r\n  getWarehouse(){\r\n    return this.http.get(environment.apiURL + \"/Warehouses\").toPromise();\r\n    \r\n  }\r\n\r\n  getWarehouseByProjectId(item){\r\n    return this.http.get(environment.apiURL + \"/Warehouses/ProjectId/\" + item).toPromise();\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WarehouseaccessService {\r\n  userAdded=[];\r\n  constructor(private fb:FormBuilder,private http:HttpClient) { }\r\n\r\n  formModel = this.fb.group({\r\n    WarehouseAccessId:[''],\r\n    UserId:['',Validators.required],\r\n    WarehouseId:['',Validators.required],\r\n  });\r\n\r\n  getWarehouseaccessList() {\r\n    return this.http.get(environment.apiURL + '/WarehouseAccesses').toPromise();\r\n  }\r\n\r\n  getWarehouseaccessByID(deviceValue){\r\n    return this.http.get(environment.apiURL + '/WarehouseAccesses/'+ deviceValue).toPromise()\r\n  }\r\n\r\n  onDelete(id:number,warhouseId:number){     \r\n    console.log(environment.apiURL + '/WarehouseAccesses/'+ id + \"/\" + warhouseId);\r\n    return this.http.delete(environment.apiURL + '/WarehouseAccesses/'+ id + \"/\" + warhouseId ).toPromise();   \r\n  }\r\n\r\n  onAdd(item){\r\n    var body = {\r\n      WarehouseId: this.formModel.value.WarehouseId,\r\n      UserId: item.Id\r\n    }\r\n    return this.http.post(environment.apiURL + '/WarehouseAccesses', body);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0YW5kYXJkL3N0YW5kYXJkLWRldGFpbC9zdGFuZGFyZC1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\">\\r\\n  <input type=\\\"hidden\\\" name=\\\"StandardKey\\\" [value]=\\\"service.formData.StandardKey\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"input-group\\\">\\r\\n        <div class=\\\"input-group-prepend\\\">\\r\\n          <div class=\\\"input-group-text bg-white\\\">\\r\\n              <i class=\\\"fas fa-thermometer-three-quarters\\\" [class.green-icon]=\\\"StandardNameId.valid\\\" [class.red-icon]=\\\"StandardNameId.invalid\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n        <select name=\\\"StandardNameId\\\" #StandardNameId=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.StandardNameId\\\" class=\\\"form-control\\\" (change)=\\\"onChangeStandard($event)\\\">\\r\\n          <option value=\\\"0\\\">-Select Standard-</option>\\r\\n          <option *ngFor=\\\"let item of standardList\\\" value=\\\"{{item.StandardNameId}}\\\">{{item.Standard}}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <div class=\\\"input-group\\\">\\r\\n      <div class=\\\"input-group-prepend\\\">\\r\\n        <div class=\\\"input-group-text bg-white\\\">\\r\\n            <i class=\\\"fas fa-sort-numeric-up\\\" [class.green-icon]=\\\"NumberOfDay.valid\\\" [class.red-icon]=\\\"NumberOfDay.invalid\\\"></i>\\r\\n        </div>\\r\\n      </div>\\r\\n      <input name=\\\"NumberOfDay\\\" #NumberOfDay=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.NumberOfDay\\\" class=\\\"form-control\\\" placeholder=\\\"NumberOfDay\\\" required>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"input-group\\\">\\r\\n        <div class=\\\"input-group-prepend\\\">\\r\\n          <div class=\\\"input-group-text bg-white\\\">\\r\\n              <i class=\\\"fas fa-poll\\\" [class.green-icon]=\\\"ResultOfDay.valid\\\" [class.red-icon]=\\\"ResultOfDay.invalid\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n        <input name=\\\"ResultOfDay\\\" #ResultOfDay=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.ResultOfDay\\\" class=\\\"form-control\\\" placeholder=\\\"ResultOfDay\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <div class=\\\"input-group-text bg-white\\\">\\r\\n                <i class=\\\"fas fa-align-right\\\" [class.green-icon]=\\\"UomId.valid\\\" [class.red-icon]=\\\"UomId.invalid\\\"></i>\\r\\n            </div>\\r\\n          </div>\\r\\n          <select name=\\\"UomId\\\" #UomId=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.UomId\\\" class=\\\"form-control\\\"\\r\\n          [class.is-invalid]=\\\"service.formData.UomId==0\\\" (change)=\\\"onChangeUom($event)\\\">\\r\\n            <option value=\\\"0\\\">-Select Uom-</option>\\r\\n            <option *ngFor=\\\"let item of uomList\\\" value=\\\"{{item.UomId}}\\\">{{item.UOM}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n    </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <button class=\\\"btn btn-success btn-lg btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\"><i class=\\\"fas fa-database\\\"></i>Submit</button>\\r\\n  </div>\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { StandardService } from 'src/app/shared/standard.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NgForm } from '@angular/forms';\r\nimport { UomService } from 'src/app/shared/uom.service';\r\nimport { Standard } from 'src/app/shared/standard.model';\r\nimport { StandardnameService } from 'src/app/shared/standardname.service';\r\n\r\n@Component({\r\n  selector: 'app-standard-detail',\r\n  templateUrl: './standard-detail.component.html',\r\n  styleUrls: ['./standard-detail.component.css']\r\n})\r\nexport class StandardDetailComponent implements OnInit {\r\n\r\n  uomList;\r\n  standardList;\r\n  constructor(public service:StandardService,private uomService:UomService,private standardnameService:StandardnameService,\r\n    private toastr:ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.resetForm();\r\n    this.getUom();\r\n    this.getStandardname();\r\n  }\r\n\r\n  resetForm(form?:NgForm){\r\n    if(form!=null)\r\n      form.resetForm();\r\n    this.service.formData = {\r\n      StandardKey:0,\r\n      StandardNameId:0,\r\n      StandardName:'',\r\n      NumberOfDay:0,\r\n      ResultOfDay:0,\r\n      UomId:0,\r\n      UOM:''\r\n    }\r\n  }\r\n\r\n  onChangeStandard(item){\r\n    let text = item.target.options[item.target.options.selectedIndex].text;\r\n    this.service.formData.StandardName = text;\r\n  }\r\n\r\n  onChangeUom(item){\r\n    let text = item.target.options[item.target.options.selectedIndex].text;\r\n    this.service.formData.UOM = text;\r\n  }\r\n\r\n  getStandardname(){\r\n    this.standardnameService.getStandard().then(res => this.standardList = res);\r\n  }\r\n\r\n  getUom(){\r\n    this.uomService.getUom().then(res => this.uomList = res);\r\n  }\r\n\r\n  onSubmit(form:NgForm){\r\n    if(this.service.formData.StandardKey == 0){\r\n      this.insertRecord(form);\r\n    }\r\n    else{\r\n      this.updateRecord(form);\r\n    }\r\n  }\r\n\r\n  \r\n  insertRecord(form:NgForm){\r\n    this.service.postStandardDetail().subscribe(\r\n      res=>{\r\n        this.service.list.data.push(res as Standard);\r\n        this.service.list._updateChangeSubscription();\r\n        this.resetForm(form);\r\n        this.toastr.success(\"Submited successfully\",\"Standard Detail Register\");\r\n      },\r\n      err=>{\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  updateRecord(form:NgForm){\r\n    this.service.PutStandardDetail().subscribe(\r\n      res=>{\r\n        let index = this.service.list.data.findIndex(x=>x.StandardKey == this.service.formData.StandardKey);\r\n        this.service.list.data[index].StandardKey = this.service.formData.StandardKey;\r\n        this.service.list.data[index].StandardName = this.service.formData.StandardName;\r\n        this.service.list.data[index].NumberOfDay = this.service.formData.NumberOfDay;\r\n        this.service.list.data[index].ResultOfDay = this.service.formData.ResultOfDay;\r\n        this.service.list.data[index].UOM = this.service.formData.UOM;\r\n        this.service.list.data[index].UomId = this.service.formData.UomId;\r\n        this.service.list._updateChangeSubscription();\r\n        this.resetForm(form);\r\n        this.toastr.info(\"Submited successfully\",\"Standard Detail Register\");\r\n      },\r\n      err=>{\r\n        console.log(err);\r\n      })\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0YW5kYXJkL3N0YW5kYXJkLWxpc3Qvc3RhbmRhcmQtbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12 mat-elevation-z8\\\">  \\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <mat-form-field>\\r\\n              <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n            </mat-form-field>\\r\\n        </div>         \\r\\n      </div>  \\r\\n      <table class=\\\"table table-hover\\\" mat-table [dataSource]=\\\"service.list\\\" matSort>\\r\\n        <ng-container matColumnDef=\\\"StandardName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Standard Name </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"populateForm(element)\\\"> {{element.StandardName}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"NumberOfDay\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Number Of Day </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"populateForm(element)\\\"> {{element.NumberOfDay}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"ResultOfDay\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Result Of Day </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"populateForm(element)\\\"> {{element.ResultOfDay}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"Delete\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> \\r\\n            \\r\\n          </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n              <i class=\\\"fa fa-trash-alt fa-lg text-danger\\\" (click)=\\\"onDelete(element.StandardKey)\\\"></i>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n      </table>\\r\\n      <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n    </div>\\r\\n  </div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { StandardService } from 'src/app/shared/standard.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Standard } from 'src/app/shared/standard.model';\r\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-standard-list',\r\n  templateUrl: './standard-list.component.html',\r\n  styleUrls: ['./standard-list.component.css']\r\n})\r\nexport class StandardListComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['StandardName','NumberOfDay', 'ResultOfDay','Delete'];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(public service:StandardService,private toastr:ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.refressList();\r\n  }\r\n\r\n  populateForm(pd:Standard){\r\n    this.service.formData = Object.assign({},pd);\r\n }\r\n\r\n refressList(){\r\n  this.service.refressList().then(res=> {\r\n    this.service.list = new MatTableDataSource(res as Array<Standard>);\r\n    this.service.list.paginator = this.paginator;\r\n    this.service.list.sort = this.sort;\r\n  });\r\n}\r\n\r\napplyFilter(filterValue: string) {\r\n  this.service.list.filter = filterValue.trim().toLowerCase();\r\n\r\n  if (this.service.list.paginator) {\r\n    this.service.list.paginator.firstPage();\r\n  }\r\n}\r\n\r\n onDelete(PMId){\r\n   if(confirm('Are you sure to delete this record?')){\r\n     this.service.DeleteStandardDetail(PMId).subscribe(\r\n       res => {\r\n        let index = this.service.list.data.findIndex(x=>x.StandardKey == PMId);\r\n        this.service.list.data.splice(index,1);\r\n        this.service.list._updateChangeSubscription();\r\n         this.toastr.warning(\"Deleted successfully\",\"Standard Detail Register\");\r\n       },\r\n       err => {\r\n         console.log(err);\r\n       }\r\n     )\r\n   }\r\n\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0YW5kYXJkL3N0YW5kYXJkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-menus></app-menus>\\r\\n<div class=\\\"jumbotron\\\">\\r\\n  <h1 class=\\\"display-4 text-center\\\">Standard Register</h1>\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <app-standard-detail></app-standard-detail>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      <app-standard-list></app-standard-list>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-standard',\r\n  templateUrl: './standard.component.html',\r\n  styleUrls: ['./standard.component.css']\r\n})\r\nexport class StandardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0YW5kYXJkbmFtZS9zdGFuZGFyZG5hbWUtZGV0YWlsL3N0YW5kYXJkbmFtZS1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\">\\r\\n  <input type=\\\"hidden\\\" name=\\\"StandardNameId\\\" [value]=\\\"service.formData.StandardNameId\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <div class=\\\"input-group\\\">\\r\\n      <div class=\\\"input-group-prepend\\\">\\r\\n        <div class=\\\"input-group-text bg-white\\\">\\r\\n            <i class=\\\"fab fa-staylinked\\\" [class.green-icon]=\\\"Standard.valid\\\" [class.red-icon]=\\\"Standard.invalid\\\"></i>\\r\\n        </div>\\r\\n      </div>\\r\\n      <input name=\\\"Standard\\\" #Standard=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Standard\\\" class=\\\"form-control\\\" placeholder=\\\"Standard\\\" required>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"input-group\\\">\\r\\n        <div class=\\\"input-group-prepend\\\">\\r\\n          <div class=\\\"input-group-text bg-white\\\">\\r\\n              <i class=\\\"fas fa-thermometer-three-quarters\\\" [class.green-icon]=\\\"Type.valid\\\" [class.red-icon]=\\\"Type.invalid\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n        <select name=\\\"Type\\\" #Type=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Type\\\" class=\\\"form-control\\\">\\r\\n          <option value=\\\"0\\\">-Select Type-</option>\\r\\n          <option value=\\\"FEED\\\">FEED</option>\\r\\n          <option value=\\\"ANIMAL\\\">ANIMAL</option>\\r\\n        </select>\\r\\n      </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <button class=\\\"btn btn-success btn-lg btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\"><i class=\\\"fas fa-database\\\"></i>Submit</button>\\r\\n  </div>\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { StandardnameService } from 'src/app/shared/standardname.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Standard } from 'src/app/shared/standard.model';\r\nimport { Standardname } from 'src/app/shared/standardname.model';\r\n\r\n@Component({\r\n  selector: 'app-standardname-detail',\r\n  templateUrl: './standardname-detail.component.html',\r\n  styleUrls: ['./standardname-detail.component.css']\r\n})\r\nexport class StandardnameDetailComponent implements OnInit {\r\n\r\n  constructor(public service:StandardnameService,private toastr:ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.resetForm();\r\n    \r\n  }\r\n\r\n  resetForm(form?:NgForm){\r\n    if(form!=null)\r\n      form.resetForm();\r\n    this.service.formData = {\r\n      StandardNameId:0,\r\n      Standard:'',\r\n      Type:''\r\n    }\r\n  }\r\n\r\n  onSubmit(form:NgForm){\r\n    if(this.service.formData.StandardNameId == 0){\r\n      this.insertRecord(form);\r\n    }\r\n    else{\r\n      this.updateRecord(form);\r\n    }\r\n  }\r\n\r\n  \r\n  insertRecord(form:NgForm){\r\n    this.service.postStandardDetail().subscribe(\r\n      res=>{\r\n        this.service.list.data.push(res as Standardname);\r\n        this.service.list._updateChangeSubscription();\r\n        this.resetForm(form);\r\n        this.toastr.success(\"Submited successfully\",\"Standard Detail Register\");\r\n      },\r\n      err=>{\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  updateRecord(form:NgForm){\r\n    this.service.PutStandardDetail().subscribe(\r\n      res=>{\r\n        let index = this.service.list.data.findIndex(x=>x.StandardNameId == this.service.formData.StandardNameId);\r\n        this.service.list.data[index].StandardNameId = this.service.formData.StandardNameId;\r\n        this.service.list.data[index].Standard = this.service.formData.Standard;\r\n        this.service.list._updateChangeSubscription();\r\n        this.resetForm(form);\r\n        this.toastr.info(\"Submited successfully\",\"Standard Detail Register\");\r\n      },\r\n      err=>{\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0YW5kYXJkbmFtZS9zdGFuZGFyZG5hbWUtbGlzdC9zdGFuZGFyZG5hbWUtbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12 mat-elevation-z8\\\">  \\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n          <mat-form-field>\\r\\n            <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n          </mat-form-field>\\r\\n      </div>         \\r\\n    </div>  \\r\\n    <table class=\\\"table table-hover\\\" mat-table [dataSource]=\\\"service.list\\\" matSort>\\r\\n      <ng-container matColumnDef=\\\"Standard\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Standard Name </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"populateForm(element)\\\"> {{element.Standard}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"Type\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Type </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"populateForm(element)\\\"> {{element.Type}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"Delete\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> \\r\\n          \\r\\n        </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n            <i class=\\\"fa fa-trash-alt fa-lg text-danger\\\" (click)=\\\"onDelete(element.StandardNameId)\\\"></i>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\r\nimport { StandardnameService } from 'src/app/shared/standardname.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Standardname } from 'src/app/shared/standardname.model';\r\n\r\n@Component({\r\n  selector: 'app-standardname-list',\r\n  templateUrl: './standardname-list.component.html',\r\n  styleUrls: ['./standardname-list.component.css']\r\n})\r\nexport class StandardnameListComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['Standard','Type','Delete'];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(public service:StandardnameService,private toastr:ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.refressList();\r\n  }\r\n\r\n  populateForm(pd:Standardname){\r\n    this.service.formData = Object.assign({},pd);\r\n }\r\n\r\n refressList(){\r\n  this.service.refressList().then(res=> {\r\n    this.service.list = new MatTableDataSource(res as Array<Standardname>);\r\n    this.service.list.paginator = this.paginator;\r\n    this.service.list.sort = this.sort;\r\n  });\r\n}\r\n\r\napplyFilter(filterValue: string) {\r\n  this.service.list.filter = filterValue.trim().toLowerCase();\r\n\r\n  if (this.service.list.paginator) {\r\n    this.service.list.paginator.firstPage();\r\n  }\r\n}\r\n\r\n onDelete(PMId){\r\n   if(confirm('Are you sure to delete this record?')){\r\n     this.service.DeleteStandardDetail(PMId).subscribe(\r\n       res => {\r\n        let index = this.service.list.data.findIndex(x=>x.StandardNameId == PMId);\r\n        this.service.list.data.splice(index,1);\r\n        this.service.list._updateChangeSubscription();\r\n         this.toastr.warning(\"Deleted successfully\",\"Standard Detail Register\");\r\n       },\r\n       err => {\r\n         console.log(err);\r\n       }\r\n     )\r\n   }\r\n\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0YW5kYXJkbmFtZS9zdGFuZGFyZG5hbWUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-menus></app-menus>\\r\\n<div class=\\\"jumbotron\\\">\\r\\n  <h1 class=\\\"display-4 text-center\\\">Standard Name Register</h1>\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <app-standardname-detail></app-standardname-detail>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      <app-standardname-list></app-standardname-list>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-standardname',\r\n  templateUrl: './standardname.component.html',\r\n  styleUrls: ['./standardname.component.css']\r\n})\r\nexport class StandardnameComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VvbS91b20tZGV0YWlsL3VvbS1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\">\\r\\n    <input type=\\\"hidden\\\" name=\\\"UomId\\\" [value]=\\\"service.formData.UomId\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"input-group\\\">\\r\\n        <div class=\\\"input-group-prepend\\\">\\r\\n          <div class=\\\"input-group-text bg-white\\\">\\r\\n              <i class=\\\"fas fa-shopping-bag\\\" [class.green-icon]=\\\"UOM.valid\\\" [class.red-icon]=\\\"UOM.invalid\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n        <input name=\\\"UOM\\\" #UOM=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.UOM\\\" class=\\\"form-control\\\" placeholder=\\\"UOM\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <button class=\\\"btn btn-success btn-lg btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\"><i class=\\\"fas fa-database\\\"></i>Submit</button>\\r\\n    </div>\\r\\n  </form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { UomService } from 'src/app/shared/uom.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Uom } from 'src/app/shared/uom';\r\n\r\n@Component({\r\n  selector: 'app-uom-detail',\r\n  templateUrl: './uom-detail.component.html',\r\n  styleUrls: ['./uom-detail.component.css']\r\n})\r\nexport class UomDetailComponent implements OnInit {\r\n\r\n  constructor(public service:UomService,\r\n    private toastr:ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.resetForm();\r\n  }\r\n\r\n  resetForm(form?:NgForm){\r\n    if(form!=null)\r\n      form.resetForm();\r\n    this.service.formData = {\r\n      UomId:0,\r\n      UOM:''\r\n    }\r\n  }\r\n\r\n  onSubmit(form:NgForm){\r\n    if(this.service.formData.UomId == 0){\r\n      this.insertRecord(form);\r\n    }\r\n    else{\r\n      this.updateRecord(form);\r\n    }\r\n  }\r\n\r\n  \r\n  insertRecord(form:NgForm){\r\n    this.service.postUomDetail().subscribe(\r\n      res=>{\r\n        this.service.list.data.push(res as Uom);\r\n        this.service.list._updateChangeSubscription();\r\n        this.resetForm(form);\r\n        this.toastr.success(\"Submited successfully\",\"UOM Detail Register\");\r\n      },\r\n      err=>{\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  updateRecord(form:NgForm){\r\n    this.service.PutUomDetail().subscribe(\r\n      res=>{\r\n        let index = this.service.list.data.findIndex(x=>x.UomId == this.service.formData.UomId);\r\n        this.service.list.data[index].UomId = this.service.formData.UomId;\r\n        this.service.list.data[index].UOM = this.service.formData.UOM;\r\n        this.resetForm(form);\r\n        this.toastr.info(\"Submited successfully\",\"UOM Detail Register\");\r\n      },\r\n      err=>{\r\n        console.log(err);\r\n      })\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VvbS91b20tbGlzdC91b20tbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12 mat-elevation-z8\\\">  \\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <mat-form-field>\\r\\n              <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n            </mat-form-field>\\r\\n        </div>         \\r\\n      </div>  \\r\\n      <table class=\\\"table table-hover\\\" mat-table [dataSource]=\\\"service.list\\\" matSort>\\r\\n        <ng-container matColumnDef=\\\"UOM\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> UOM </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"populateForm(element)\\\"> {{element.UOM}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"Delete\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> \\r\\n            \\r\\n          </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n              <i class=\\\"fa fa-trash-alt fa-lg text-danger\\\" (click)=\\\"onDelete(element.UomId)\\\"></i>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n      </table>\\r\\n      <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n    </div>\\r\\n  </div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UomService } from 'src/app/shared/uom.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Uom } from 'src/app/shared/uom';\r\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-uom-list',\r\n  templateUrl: './uom-list.component.html',\r\n  styleUrls: ['./uom-list.component.css']\r\n})\r\nexport class UomListComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['UOM','Delete'];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(public service:UomService,private toastr:ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.service.getUom().then(res=> {\r\n      this.service.list = new MatTableDataSource(res as Array<Uom>);\r\n      this.service.list.paginator = this.paginator;\r\n      this.service.list.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.service.list.filter = filterValue.trim().toLowerCase();\r\n  \r\n    if (this.service.list.paginator) {\r\n      this.service.list.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  populateForm(pd:Uom){\r\n    this.service.formData = Object.assign({},pd);\r\n }\r\n\r\n onDelete(PMId){\r\n   if(confirm('Are you sure to delete this record?')){\r\n     this.service.DeleteUomDetail(PMId).subscribe(\r\n       res => {\r\n        let index = this.service.list.data.findIndex(x=>x.UomId == PMId);\r\n        this.service.list.data.splice(index,1);\r\n        this.service.list._updateChangeSubscription();\r\n         this.toastr.warning(\"Deleted successfully\",\"Uom Detail Register\");\r\n       },\r\n       err => {\r\n         console.log(err);\r\n       }\r\n     )\r\n   }\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VvbS91b20uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-menus></app-menus>\\r\\n<div class=\\\"jumbotron\\\">\\r\\n  <h1 class=\\\"display-4 text-center\\\">Unit of Measure Register</h1>\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <app-uom-detail></app-uom-detail>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <app-uom-list></app-uom-list>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-uom',\r\n  templateUrl: './uom.component.html',\r\n  styleUrls: ['./uom.component.css']\r\n})\r\nexport class UomComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"col-md-8 offset-md-2\\\">\\r\\n      <div class=\\\"jumbotron\\\">\\r\\n        <h1 class=\\\"display-4 text-center\\\"><i class=\\\"fas fa-chalkboard-teacher\\\"></i>Login</h1>\\r\\n      <hr>\\r\\n      <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n          <form #form='ngForm' autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Username</label>\\r\\n                <input class=\\\"form-control\\\" #UserName=\\\"ngModel\\\" name=\\\"UserName\\\" [(ngModel)]=\\\"formModel.UserName\\\" required>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Password</label>\\r\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" #Password=\\\"ngModel\\\" name=\\\"Password\\\" [(ngModel)]=\\\"formModel.Password\\\" required>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-8 offset-md-2\\\">\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block\\\" [disabled]=\\\"form.invalid\\\">Login</button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/shared/user.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  formModel = {\r\n    UserName: '',\r\n    Password: ''\r\n  }\r\n  constructor(private service: UserService, private router: Router, private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    if (localStorage.getItem('token') != null)\r\n      this.router.navigateByUrl('/home');\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    this.service.login(form.value).subscribe(\r\n      (res: any) => {\r\n        localStorage.setItem('token', res.token);\r\n        this.router.navigateByUrl('/home');\r\n      },\r\n      err => {\r\n        if (err.status == 400)\r\n          this.toastr.error('Incorrect username or password.', 'Authentication failed.');\r\n        else\r\n          console.log(err);\r\n      }\r\n    );\r\n  }\r\n  \r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvcmVnaXN0cmF0aW9uL3JlZ2lzdHJhdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-menus></app-menus>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"col-md-8 offset-md-2\\\">\\r\\n      <div class=\\\"jumbotron\\\">\\r\\n          <h1 class=\\\"display-4 text-center\\\"><i class=\\\"fas fa-users\\\"></i>Registration</h1>\\r\\n        <hr>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n              <form [formGroup]=\\\"service.formModel\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit()\\\">\\r\\n                  <div class=\\\"form-group required\\\">\\r\\n                    <label>Username</label>\\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"UserName\\\">\\r\\n                    <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('UserName').touched && service.formModel.get('UserName').errors?.required\\\">This field is mandatory.</label>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Email</label>\\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"Email\\\">\\r\\n                    <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('Email').touched && service.formModel.get('Email').errors?.email\\\">Invalid email address.</label>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Full Name</label>\\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"FullName\\\">\\r\\n                  </div>\\r\\n                  <div formGroupName=\\\"Passwords\\\">\\r\\n                    <div class=\\\"form-group required\\\">\\r\\n                      <label>Password</label>\\r\\n                      <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"Password\\\">\\r\\n                      <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('Passwords.Password').touched && service.formModel.get('Passwords.Password').errors?.required\\\">This field is mandatory.</label>\\r\\n                      <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('Passwords.Password').touched && service.formModel.get('Passwords.Password').errors?.minlength\\\">Minimum 4 characters required.</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group required\\\">\\r\\n                      <label>Confirm Password</label>\\r\\n                      <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"ConfirmPassword\\\">\\r\\n                      <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('Passwords.ConfirmPassword').touched && service.formModel.get('Passwords.ConfirmPassword').errors?.required\\\">This field is mandatory.</label>\\r\\n                      <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('Passwords.ConfirmPassword').touched && service.formModel.get('Passwords.ConfirmPassword').errors?.passwordMismatch\\\">Confirm Password does not match.</label>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-row\\\">\\r\\n                    <div class=\\\"form-group col-md-8 offset-md-2\\\">\\r\\n                      <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block\\\" [disabled]=\\\"!service.formModel.valid\\\">Sign Up</button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/shared/user.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n\r\n  constructor(public service: UserService, private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.service.formModel.reset();\r\n  }\r\n\r\n  onSubmit() {\r\n    this.service.register().subscribe(\r\n      (res: any) => {\r\n        if (res.Succeeded) {\r\n          this.service.formModel.reset();\r\n          this.toastr.success('New user created!', 'Registration successful.');\r\n        } else {\r\n          res.Errors.forEach(element => {\r\n            switch (element.Code) {\r\n              case 'DuplicateUserName':\r\n                this.toastr.error('Username is already taken','Registration failed.');\r\n                break;\r\n\r\n              default:\r\n              this.toastr.error(element.Description,'Registration failed.');\r\n                break;\r\n            }\r\n          });\r\n        }\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n  \r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJyb2xlcy91c2Vycm9sZS91c2Vycm9sZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<form [formGroup]=\\\"service.userroleModel\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit()\\\">\\r\\n  <input hidden class=\\\"form-control\\\" formControlName=\\\"UserId\\\">\\r\\n  <div class=\\\"form-group required\\\">\\r\\n    <label>UserName</label>\\r\\n    <input class=\\\"form-control\\\" formControlName=\\\"UserName\\\">\\r\\n    <label class=\\\"text-danger\\\" *ngIf=\\\"service.userroleModel.get('UserName').touched && service.userroleModel.get('UserName').errors?.required\\\">This field is mandatory.</label>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Roles</label>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-5\\\">\\r\\n        <table class=\\\"table table-hover\\\">\\r\\n          <tr *ngFor=\\\"let item of rolesList\\\">\\r\\n            <td>{{item.Name}}</td>\\r\\n            <td><i class=\\\"fas fa-minus\\\" (click)=\\\"onDelete(item)\\\"></i></td>\\r\\n            <td><i class=\\\"fas fa-plus\\\" (click)=\\\"onAdd(item)\\\"></i></td>\\r\\n          </tr>\\r\\n        </table>     \\r\\n      </div>\\r\\n      <div class=\\\"col-md-5\\\">\\r\\n        <table class=\\\"table table-hover\\\">\\r\\n          <tr *ngFor=\\\"let item of service.rolesAdded\\\">\\r\\n            <td>{{item}}</td>\\r\\n          </tr>\\r\\n        </table>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block\\\" [disabled]=\\\"!service.userroleModel.valid\\\">Submit</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/shared/user.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { RoleService } from 'src/app/shared/role.service';\r\nimport { Role } from 'src/app/shared/role.model';\r\n\r\n@Component({\r\n  selector: 'app-userrole',\r\n  templateUrl: './userrole.component.html',\r\n  styleUrls: ['./userrole.component.css']\r\n})\r\nexport class UserroleComponent implements OnInit {\r\n\r\n  rolesList: Role[];\r\n  constructor(public service:UserService,private router: Router,\r\n    private toastr:ToastrService,private roleService:RoleService) { }\r\n\r\n  ngOnInit() {\r\n    this.onGetRole();\r\n  }\r\n\r\n  onSubmit(){\r\n    this.service.userroleModel.value.Roles = this.service.rolesAdded;\r\n    this.service.putUser().subscribe(res => {\r\n      this.service.userroleModel.reset();\r\n      this.toastr.success(\"Submitted Successfully\",\"User Roles\");\r\n    })\r\n  }\r\n  \r\n  onGetRole(){\r\n    this.roleService.getRolesList().then(res => this.rolesList  = res as Role[]);;\r\n    \r\n  }\r\n\r\n  onDelete(item:any){\r\n    this.service.onDelete(item);\r\n  }\r\n\r\n  onAdd(item:any):void{\r\n    this.service.onAdd(item);\r\n  }\r\n  \r\n}\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJyb2xlcy91c2Vycm9sZWxpc3QvdXNlcnJvbGVsaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<table class=\\\"table table-hover\\\">\\r\\n    <tr *ngFor=\\\"let item of userroleList\\\">\\r\\n      <td (click)=\\\"populateForm(item)\\\">{{item.UserName}}</td>\\r\\n      <td>\\r\\n        <i class=\\\"fa fa-trash-alt fa-lg text-danger\\\" (click)=\\\"onUserDelete(item.UserId)\\\"></i>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </table>\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/shared/user.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { RoleService } from 'src/app/shared/role.service';\r\n\r\n@Component({\r\n  selector: 'app-userrolelist',\r\n  templateUrl: './userrolelist.component.html',\r\n  styleUrls: ['./userrolelist.component.css']\r\n})\r\nexport class UserrolelistComponent implements OnInit {\r\n\r\n  userroleList;\r\n  constructor(private service:UserService,private router: Router,\r\n    private toastr:ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.refressList();\r\n  }\r\n\r\n  populateForm(item){\r\n    this.service.userroleModel.setValue({\r\n      UserId:item.UserId,\r\n      UserName:item.UserName,\r\n      Roles:item.Roles\r\n    });\r\n    this.service.rolesAdded = item.Roles;\r\n  }\r\n\r\n\r\n\r\n  refressList(){\r\n    this.service.getUserRoles().then(res => this.userroleList = res);\r\n  }\r\n\r\n  onUserDelete(id: string) {\r\n    if (confirm('Are you sure to delete this record?')) {\r\n      this.service.deleteUser(id).then(res => {\r\n        this.refressList();\r\n        this.toastr.warning(\"Deleted Successfully\", \"User Roles.\");\r\n      });\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJyb2xlcy91c2Vycm9sZXMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-menus></app-menus>\\r\\n<div class=\\\"jumbotron\\\">\\r\\n  <h1 class=\\\"display-4 text-center\\\">User Roles Register</h1>\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      <app-userrole></app-userrole>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <app-userrolelist></app-userrolelist>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-userroles',\r\n  templateUrl: './userroles.component.html',\r\n  styleUrls: ['./userroles.component.css']\r\n})\r\nexport class UserrolesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Zpc3VhbC1kYXRhL3Byb2plY3RkYWlseS9wcm9qZWN0ZGFpbHkuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div *ngIf=\\\"isLoaded\\\">\\r\\n  <app-menus></app-menus>\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"col-md-8 offset-md-2\\\">\\r\\n        <div class=\\\"jumbotron\\\">\\r\\n            <h1 class=\\\"display-6 text-center\\\">Daily Project Performance</h1>\\r\\n            <hr>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <form [formGroup]=\\\"service.formDaily\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit()\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label>Project</label>\\r\\n                        <select class=\\\"form-control\\\" formControlName=\\\"ProjectId\\\" required (change)=\\\"onChangeProject($event)\\\">\\r\\n                          <option value=\\\"0\\\">-Select-</option>\\r\\n                          <option *ngFor=\\\"let item of projectList\\\" value=\\\"{{item.ProjectId}}\\\">{{item.ProjectName}}</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label>Standard Animal</label>\\r\\n                        <select class=\\\"form-control\\\" formControlName=\\\"StdAnimalId\\\" required>\\r\\n                          <option value=\\\"0\\\">-Select-</option>\\r\\n                          <option *ngFor=\\\"let item of filterItemsOfType('ANIMAL')\\\" value=\\\"{{item.StandardNameId}}\\\">{{item.Standard}}</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label>Standard Feed</label>\\r\\n                        <select class=\\\"form-control\\\" formControlName=\\\"StdFeedId\\\" required>\\r\\n                          <option value=\\\"0\\\">-Select-</option>\\r\\n                          <option *ngFor=\\\"let item of filterItemsOfType('FEED')\\\" value=\\\"{{item.StandardNameId}}\\\">{{item.Standard}}</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8 offset-md-2\\\">\\r\\n                          <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block\\\" [disabled]=\\\"!service.formDaily.valid\\\">Load</button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n              </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"!isLoaded\\\">\\r\\n  <h2 class=\\\"display-6 text-center\\\" (click)=\\\"LoadAgain()\\\" >Daily Performance Of {{projectheader}}</h2>\\r\\n  <mat-list>\\r\\n    <mat-list-item>Total Dead:{{getTotalDead()}} | Total Feed: {{getTotalFeed()}} | Total Qty Sold:{{getTotalQtySold()}} | Total Weight Sold: {{getTotalWeightSold()}} | Total Amount: {{getTotalAmount()}} | FCR: {{getFCR()}}</mat-list-item>\\r\\n    <mat-divider></mat-divider>\\r\\n  </mat-list>\\r\\n  <table class=\\\"table table-hover\\\">\\r\\n    <thead class=\\\"thead-dark\\\">\\r\\n        <tr>\\r\\n          <th>Daily Date</th>\\r\\n          <th>#Day</th>\\r\\n          <th>#Dead</th>\\r\\n          <th>Acual Feed</th>\\r\\n          <th>Standard Feed</th>\\r\\n          <th>Acual Weight</th>\\r\\n          <th>Standard Animal</th>\\r\\n          <th>Qty Sold</th>\\r\\n          <th>Amount</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tr *ngFor=\\\"let pd of dailyList\\\">\\r\\n      <td >{{pd.DailyDate | date}}</td>\\r\\n      <td >{{pd.NumberOfDay}}</td>\\r\\n      <td >{{pd.AnimalDead}}</td>\\r\\n      <td >{{pd.AcualFeed}}</td>\\r\\n      <td >{{pd.ResultOfDayFeed}}</td>\\r\\n      <td>{{pd.AcualAnimalWeight}}</td>\\r\\n      <td >{{pd.ResultOfDayAnimal}}</td>\\r\\n      <td>{{pd.QtySale}}</td>\\r\\n      <td>{{pd.ExtAmount}}</td>\\r\\n    </tr>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ProjectService } from 'src/app/shared/project.service';\r\nimport { StandardnameService } from 'src/app/shared/standardname.service';\r\nimport { Standardname } from 'src/app/shared/standardname.model';\r\nimport { Projectdailyperformance } from 'src/app/shared/projectdailyperformance.model';\r\n\r\n@Component({\r\n  selector: 'app-projectdaily',\r\n  templateUrl: './projectdaily.component.html',\r\n  styleUrls: ['./projectdaily.component.css']\r\n})\r\nexport class ProjectdailyComponent implements OnInit {\r\n\r\n  projectList;\r\n  stdList:Standardname[];\r\n  dailyList:Projectdailyperformance[];\r\n  public isLoaded = true;\r\n  projectheader;\r\n  //displayedColumns: string[] = ['DailyDate', 'NumberOfDay','AnimalDead','AcualFeed','ResultOfDayFeed','AcualAnimalWeight','ResultOfDayAnimal','QtySale','ExtAmount'];\r\n  constructor(private service:ProjectService,private stdService:StandardnameService) { }\r\n\r\n  ngOnInit() {\r\n    this.service.formDaily.reset();\r\n    this.service.getActiveProject().then(res => this.projectList = res);\r\n    this.stdService.getStandard().then(res => this.stdList = res as Standardname[]);\r\n  }\r\n\r\n  filterItemsOfType(type){\r\n    return this.stdList.filter(x=>x.Type == type);\r\n  }\r\n\r\n  onChangeProject(item){\r\n    let text = item.target.options[item.target.options.selectedIndex].text;\r\n    this.projectheader = text;\r\n  }\r\n\r\n  getTotalDead() {\r\n    return this.dailyList.map(t => t.AnimalDead).reduce((acc, value) => acc + value, 0);\r\n  }\r\n\r\n  getTotalFeed() {\r\n    return this.dailyList.map(t => t.AcualFeed).reduce((acc, value) => acc + value, 0);\r\n  }\r\n\r\n  getTotalQtySold() {\r\n    return this.dailyList.map(t => t.QtySale).reduce((acc, value) => acc + value, 0);\r\n  }\r\n\r\n  getTotalWeightSold() {\r\n    return this.dailyList.map(t => t.AcualAnimalWeight).reduce((acc, value) => acc + value, 0);\r\n  }\r\n\r\n  getTotalAmount() {\r\n    return this.dailyList.map(t => t.ExtAmount).reduce((acc, value) => acc + value, 0);\r\n  }\r\n\r\n  getFCR(){\r\n    let fcr = this.getTotalFeed() / this.getTotalWeightSold();\r\n    return fcr.toFixed(2);\r\n  }\r\n\r\n  getDailyProject(projectId:number,standardFeed:number,standardAnimal:number){\r\n    this.service.getDailyProject(projectId,standardFeed,standardAnimal).then(res => this.dailyList = res as Projectdailyperformance[] );\r\n  }\r\n\r\n  onSubmit(){\r\n    this.isLoaded = false;\r\n    this.service.getDailyProject(this.service.formDaily.value.ProjectId,this.service.formDaily.value.StdFeedId,this.service.formDaily.value.StdAnimalId).then(res => this.dailyList = res as Projectdailyperformance[]);\r\n  }\r\n\r\n  LoadAgain(){\r\n    this.isLoaded = true;\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Zpc3VhbC1kYXRhL3Byb2plY3RzdGF0dXMvcHJvamVjdHN0YXR1cy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div *ngIf=\\\"isLoaded\\\">\\r\\n    <app-menus></app-menus>\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"col-md-8 offset-md-2\\\">\\r\\n          <div class=\\\"jumbotron\\\">\\r\\n              <h1 class=\\\"display-6 text-center\\\">Project Inventory Status</h1>\\r\\n              <hr>\\r\\n              <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-12\\\">\\r\\n                      <form [formGroup]=\\\"service.formInsiteFilter\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit()\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label>Project</label>\\r\\n                          <select class=\\\"form-control\\\" formControlName=\\\"ProjectId\\\" required (change)=\\\"onChangeProject($event)\\\">\\r\\n                            <option value=\\\"0\\\">-Select-</option>\\r\\n                            <option *ngFor=\\\"let item of projectList\\\" value=\\\"{{item.ProjectId}}\\\">{{item.ProjectName}}</option>\\r\\n                          </select>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label>Inventory</label>\\r\\n                          <select class=\\\"form-control\\\" formControlName=\\\"InventoryId\\\" required>\\r\\n                            <option value=\\\"0\\\">-Select-</option>\\r\\n                            <option *ngFor=\\\"let item of inventoryList\\\" value=\\\"{{item.InventoryId}}\\\">{{item.InventoryDesr}}</option>\\r\\n                          </select>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-row\\\">\\r\\n                          <div class=\\\"form-group col-md-8 offset-md-2\\\">\\r\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block\\\" [disabled]=\\\"!service.formInsiteFilter.valid\\\">Load</button>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </form>\\r\\n                  </div>\\r\\n                </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"!isLoaded\\\">\\r\\n    <h2 class=\\\"display-6 text-center\\\" (click)=\\\"LoadAgain()\\\" >Status Of {{projectheader}}</h2>\\r\\n    <mat-list>\\r\\n      <mat-list-item></mat-list-item>\\r\\n      <mat-divider></mat-divider>\\r\\n    </mat-list>\\r\\n    <table class=\\\"table table-hover\\\">\\r\\n      <thead class=\\\"thead-dark\\\">\\r\\n          <tr>\\r\\n            <th>Warehouse</th>\\r\\n            <th>Inventory</th>\\r\\n            <th>On Hand</th>\\r\\n            <th>Issue</th>\\r\\n            <th>Receipt</th>\\r\\n            <th>Adjust</th>\\r\\n            <th>S.Unit</th>\\r\\n            <th>S.Kg</th>\\r\\n            <th>I.Cost</th>\\r\\n            <th>R.Cost</th>\\r\\n            <th>A.Cost</th>\\r\\n            <th>A.USD</th>\\r\\n            <th>A.KHR</th>\\r\\n          </tr>\\r\\n      </thead>\\r\\n      <tr *ngFor=\\\"let pd of insiteList\\\">\\r\\n        <td >{{pd.WarehouseName}}</td>\\r\\n        <td >{{pd.InventoryDesc}}</td>\\r\\n        <td >{{pd.QtyOnHand}}</td>\\r\\n        <td >{{pd.QtyIssue}}</td>\\r\\n        <td >{{pd.QtyReceipt}}</td>\\r\\n        <td>{{pd.QtyAdjust}}</td>\\r\\n        <td >{{pd.QtySaleByUnit}}</td>\\r\\n        <td>{{pd.QtySaleByKg}}</td>\\r\\n        <td>{{pd.IssueCost}}</td>\\r\\n        <td>{{pd.ReceiptCost}}</td>\\r\\n        <td>{{pd.AdjustCost}}</td>\\r\\n        <td>{{pd.SaleAmount}}</td>\\r\\n        <td>{{pd.SaleAmountKhr}}</td>\\r\\n      </tr>\\r\\n      <tr class=\\\"bg-success\\\">\\r\\n          <td >------</td>\\r\\n          <td >Total:</td>\\r\\n          <td >{{getTotalQtyOnHand()}}</td>\\r\\n          <td >{{getTotalQtyIssue()}}</td>\\r\\n          <td >{{getTotalQtyReceipt()}}</td>\\r\\n          <td>{{getTotalQtyAdjust()}}</td>\\r\\n          <td>{{getTotalQtySaleByUnit()}}</td>\\r\\n          <td>{{getTotalQtySaleByKg()}}</td>\\r\\n          <td>{{getTotalIssueCost()}}</td>\\r\\n          <td>{{getTotalReceiptCost()}}</td>\\r\\n          <td>{{getTotalAdjustCost()}}</td>\\r\\n          <td>{{getTotalSaleAmount()}}</td>\\r\\n          <td>{{getTotalSaleAmountKhr()}}</td>\\r\\n      </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n  \"","import { Component, OnInit } from '@angular/core';\r\nimport { InsitestatusService } from 'src/app/shared/insitestatus.service';\r\nimport { ProjectService } from 'src/app/shared/project.service';\r\nimport { InventoryService } from 'src/app/shared/inventory.service';\r\n\r\n@Component({\r\n  selector: 'app-projectstatus',\r\n  templateUrl: './projectstatus.component.html',\r\n  styleUrls: ['./projectstatus.component.css']\r\n})\r\nexport class ProjectstatusComponent implements OnInit {\r\n\r\n  insiteList;\r\n  projectList;\r\n  inventoryList;\r\n  projectheader;\r\n  public isLoaded = true;\r\n  constructor(private service:InsitestatusService,private projectService:ProjectService,private inventoryService:InventoryService) { }\r\n\r\n  ngOnInit() {\r\n    this.projectService.getActiveProject().then(res => this.projectList = res);\r\n    this.inventoryService.getInventory().then(res => this.inventoryList = res);\r\n  }\r\n\r\n  onChangeProject(item){\r\n    let text = item.target.options[item.target.options.selectedIndex].text;\r\n    this.projectheader = text;\r\n    console.log(this.projectheader);\r\n  }\r\n\r\n  onSubmit(){\r\n    this.isLoaded = false;\r\n    this.service.getInsiteStatusByProjectInventory(this.service.formInsiteFilter.value.ProjectId,this.service.formInsiteFilter.value.InventoryId).then(res => this.insiteList = res);\r\n  }\r\n\r\n  getTotalQtyOnHand() {\r\n    return this.insiteList.map(t => t.QtyOnHand).reduce((acc, value) => acc + value, 0);\r\n  }\r\n\r\n  getTotalQtyIssue() {\r\n    return this.insiteList.map(t => t.QtyIssue).reduce((acc, value) => acc + value, 0);\r\n  }\r\n\r\n  getTotalQtyReceipt() {\r\n    return this.insiteList.map(t => t.QtyReceipt).reduce((acc, value) => acc + value, 0);\r\n  }\r\n\r\n  getTotalQtyAdjust() {\r\n    return this.insiteList.map(t => t.QtyAdjust).reduce((acc, value) => acc + value, 0);\r\n  }\r\n\r\n  getTotalQtySaleByUnit() {\r\n    return this.insiteList.map(t => t.QtySaleByUnit).reduce((acc, value) => acc + value, 0);\r\n  }\r\n\r\n  getTotalQtySaleByKg() {\r\n    return this.insiteList.map(t => t.QtySaleByKg).reduce((acc, value) => acc + value, 0);\r\n  }\r\n\r\n  getTotalIssueCost() {\r\n    return this.insiteList.map(t => t.IssueCost).reduce((acc, value) => acc + value, 0);\r\n  }\r\n\r\n  getTotalReceiptCost() {\r\n    return this.insiteList.map(t => t.ReceiptCost).reduce((acc, value) => acc + value, 0);\r\n  }\r\n\r\n  getTotalAdjustCost() {\r\n    return this.insiteList.map(t => t.AdjustCost).reduce((acc, value) => acc + value, 0);\r\n  }\r\n\r\n  getTotalSaleAmount() {\r\n    return this.insiteList.map(t => t.SaleAmount).reduce((acc, value) => acc + value, 0);\r\n  }\r\n\r\n  getTotalSaleAmountKhr() {\r\n    return this.insiteList.map(t => t.SaleAmountKhr).reduce((acc, value) => acc + value, 0);\r\n  }\r\n\r\n  LoadAgain(){\r\n    this.isLoaded = true;\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Zpc3VhbC1kYXRhL3Zpc3VhbC1kYXRhLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\r\\n  visual-data works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-visual-data',\r\n  templateUrl: './visual-data.component.html',\r\n  styleUrls: ['./visual-data.component.css']\r\n})\r\nexport class VisualDataComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dhcmVob3VzZS93YXJlaG91c2UtZGV0YWlscy93YXJlaG91c2UtZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\">\\r\\n  <input type=\\\"hidden\\\" name=\\\"WarehouseId\\\" [value]=\\\"service.formData.WarehouseId\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <div class=\\\"input-group\\\">\\r\\n      <div class=\\\"input-group-prepend\\\">\\r\\n        <div class=\\\"input-group-text bg-white\\\">\\r\\n            <i class=\\\"fas fa-warehouse\\\" [class.green-icon]=\\\"WarehouseName.valid\\\" [class.red-icon]=\\\"WarehouseName.invalid\\\"></i>\\r\\n        </div>\\r\\n      </div>\\r\\n      <input name=\\\"WarehouseName\\\" #WarehouseName=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.WarehouseName\\\" class=\\\"form-control\\\" placeholder=\\\"WarehouseName\\\" required>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <button class=\\\"btn btn-success btn-lg btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\"><i class=\\\"fas fa-database\\\"></i>Submit</button>\\r\\n  </div>\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { WarehouseService } from 'src/app/shared/warehouse.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Warehouse } from 'src/app/shared/warehouse.model';\r\n\r\n@Component({\r\n  selector: 'app-warehouse-details',\r\n  templateUrl: './warehouse-details.component.html',\r\n  styleUrls: ['./warehouse-details.component.css']\r\n})\r\nexport class WarehouseDetailsComponent implements OnInit {\r\n\r\n  constructor(public service:WarehouseService,\r\n    private toastr:ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.resetForm();\r\n  }\r\n\r\n  resetForm(form?:NgForm){\r\n    if(form!=null)\r\n      form.resetForm();\r\n    this.service.formData = {\r\n      WarehouseId:0,\r\n      WarehouseName:''\r\n    }\r\n  }\r\n\r\n  onSubmit(form:NgForm){\r\n    if(this.service.formData.WarehouseId == 0){\r\n      this.insertRecord(form);\r\n    }\r\n    else{\r\n      this.updateRecord(form);\r\n    }\r\n  }\r\n\r\n  \r\n  insertRecord(form:NgForm){\r\n    this.service.postWarehousesDetail().subscribe(\r\n      res=>{\r\n        this.service.list.data.push(res as Warehouse);\r\n        this.service.list._updateChangeSubscription();\r\n        this.resetForm(form);\r\n        this.toastr.success(\"Submited successfully\",\"Warehouse Detail Register\");\r\n      },\r\n      err=>{\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  updateRecord(form:NgForm){\r\n    this.service.PutWarehousesDetail().subscribe(\r\n      res=>{\r\n        let index = this.service.list.data.findIndex(x=>x.WarehouseId == this.service.formData.WarehouseId);\r\n        this.service.list.data[index].WarehouseId = this.service.formData.WarehouseId;\r\n        this.service.list.data[index].WarehouseName = this.service.formData.WarehouseName;\r\n        this.resetForm(form);\r\n        this.toastr.info(\"Submited successfully\",\"Warehouse Detail Register\");\r\n      },\r\n      err=>{\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dhcmVob3VzZS93YXJlaG91c2UtbGlzdC93YXJlaG91c2UtbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12 mat-elevation-z8\\\">  \\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <mat-form-field>\\r\\n              <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n            </mat-form-field>\\r\\n        </div>         \\r\\n      </div>  \\r\\n      <table class=\\\"table table-hover\\\" mat-table [dataSource]=\\\"service.list\\\" matSort>\\r\\n        <ng-container matColumnDef=\\\"WarehouseName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Warehouse Name </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"populateForm(element)\\\"> {{element.WarehouseName}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"Delete\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> \\r\\n            \\r\\n          </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n              <i class=\\\"fa fa-trash-alt fa-lg text-danger\\\" (click)=\\\"onDelete(element.WarehouseId)\\\"></i>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n      </table>\\r\\n      <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n    </div>\\r\\n  </div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { WarehouseService } from 'src/app/shared/warehouse.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Warehouse } from 'src/app/shared/warehouse.model';\r\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-warehouse-list',\r\n  templateUrl: './warehouse-list.component.html',\r\n  styleUrls: ['./warehouse-list.component.css']\r\n})\r\nexport class WarehouseListComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['WarehouseName','Delete'];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(public service:WarehouseService,private toastr:ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.service.getWarehouse().then(res => {\r\n      this.service.list = new MatTableDataSource(res as Array<Warehouse>);\r\n      this.service.list.paginator = this.paginator;\r\n      this.service.list.sort = this.sort;\r\n    })\r\n  }\r\n\r\n  populateForm(pd:Warehouse){\r\n    this.service.formData = Object.assign({},pd);\r\n }\r\n\r\n onDelete(PMId){\r\n   if(confirm('Are you sure to delete this record?')){\r\n     this.service.DeleteWarehousesDetail(PMId).subscribe(\r\n       res => {\r\n        let index = this.service.list.data.findIndex(x=>x.WarehouseId == PMId);\r\n        this.service.list.data.splice(index,1);\r\n        this.service.list._updateChangeSubscription();\r\n         this.toastr.warning(\"Deleted successfully\",\"Warehouse Detail Register\");\r\n       },\r\n       err => {\r\n         console.log(err);\r\n       }\r\n     )\r\n   }\r\n\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dhcmVob3VzZS93YXJlaG91c2UuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-menus></app-menus>\\r\\n<div class=\\\"jumbotron\\\">\\r\\n  <h1 class=\\\"display-4 text-center\\\">Warehouse Register</h1>\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <app-warehouse-details></app-warehouse-details>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      <app-warehouse-list></app-warehouse-list>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-warehouse',\r\n  templateUrl: './warehouse.component.html',\r\n  styleUrls: ['./warehouse.component.css']\r\n})\r\nexport class WarehouseComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dhcmVob3VzZWFjY2Vzcy93YXJlaG91c2VhY2Nlc3MuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-menus></app-menus>\\r\\n<div class=\\\"jumbotron\\\">\\r\\n  <h1 class=\\\"display-4 text-center\\\">Warehouse Access Register</h1>\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      <app-warehouseacess-detail></app-warehouseacess-detail>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <app-warehouseacess-list></app-warehouseacess-list>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-warehouseaccess',\r\n  templateUrl: './warehouseaccess.component.html',\r\n  styleUrls: ['./warehouseaccess.component.css']\r\n})\r\nexport class WarehouseaccessComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dhcmVob3VzZWFjY2Vzcy93YXJlaG91c2VhY2Vzcy1kZXRhaWwvd2FyZWhvdXNlYWNlc3MtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<form [formGroup]=\\\"service.formModel\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input hidden class=\\\"form-control\\\" formControlName=\\\"WarehouseAccessId\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group required\\\">\\r\\n    <label>Warehouse</label>\\r\\n    <select class=\\\"form-control\\\" formControlName=\\\"WarehouseId\\\" (change)=\\\"onChange($event.target.value)\\\" >\\r\\n      <option value=\\\"0\\\">-Select Warehouse-</option>\\r\\n      <option *ngFor=\\\"let item of warehouseList\\\" value=\\\"{{item.WarehouseId}}\\\">{{item.WarehouseName}}</option>\\r\\n    </select>\\r\\n    <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('WarehouseId').touched && service.formModel.get('WarehouseId').errors?.required\\\">This field is mandatory.</label>\\r\\n  </div>\\r\\n</form>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-6\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Users List</label>                     \\r\\n        <table class=\\\"table table-hover\\\">\\r\\n          <tr *ngFor=\\\"let item of userList\\\">\\r\\n            <td>{{item.UserName}}</td>\\r\\n            <td width=\\\"5%\\\"><i class=\\\"fas fa-minus\\\" (click)=\\\"onDelete(item)\\\"></i></td>\\r\\n            <td width=\\\"5%\\\"><i class=\\\"fas fa-plus\\\" (click)=\\\"onAdd(item)\\\"></i></td>\\r\\n          </tr>\\r\\n        </table>\\r\\n      </div> \\r\\n  </div>\\r\\n  <div class=\\\"col-md-6\\\">\\r\\n    <table class=\\\"table table-hover\\\">\\r\\n      <tr *ngFor=\\\"let item of userwarehouseChange\\\">\\r\\n        <td>{{item.UserName}}</td>\\r\\n      </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n  \\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { WarehouseaccessService } from 'src/app/shared/warehouseaccess.service';\r\nimport { UserService } from 'src/app/shared/user.service';\r\nimport { WarehouseService } from 'src/app/shared/warehouse.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-warehouseacess-detail',\r\n  templateUrl: './warehouseacess-detail.component.html',\r\n  styleUrls: ['./warehouseacess-detail.component.css']\r\n})\r\nexport class WarehouseacessDetailComponent implements OnInit {\r\n\r\n  userList;\r\n  warehouseList;\r\n  userwarehouseChange=[];\r\n  warehouseId;\r\n  constructor(private service:WarehouseaccessService,private userService:UserService,\r\n    private toastr:ToastrService,private warehouseService:WarehouseService) { }\r\n\r\n  ngOnInit() {\r\n    this.getUsers();\r\n    this.getWarehouses();\r\n  }\r\n\r\n  getUsers(){\r\n    this.userService.getUsers().then(res => this.userList = res);\r\n  }\r\n\r\n  getWarehouses(){\r\n    this.warehouseService.getWarehouse().then(res=> this.warehouseList = res);\r\n  }\r\n\r\n  onAdd(item){\r\n    let index = this.userwarehouseChange.findIndex( record => record.UserName === item.UserName );\r\n    if(index <= -1){\r\n      this.userwarehouseChange.push({UserName:item.UserName});\r\n      this.service.onAdd(item).subscribe(   \r\n        res=>{\r\n          this.toastr.success(\"New role created\",\"Register WarehouseAccess\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  onDelete(item){\r\n    if (confirm('Are you sure to delete this record?')) {\r\n      this.service.onDelete(item.Id,this.warehouseId).then(res => {\r\n        let index = this.userwarehouseChange.findIndex( record => record.UserName === item.UserName );\r\n        if(index > -1){\r\n          this.userwarehouseChange.splice(index, 1);\r\n        }\r\n        this.toastr.warning(\"Deleted Successfully\", \"Warehouse Access\");\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange(deviceValue){\r\n    if(this.service.userAdded != null){\r\n      this.service.userAdded=[];\r\n    }\r\n    this.warehouseId = deviceValue;\r\n    this.service.getWarehouseaccessByID(deviceValue).then(res=> this.userwarehouseChange=res as []); \r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dhcmVob3VzZWFjY2Vzcy93YXJlaG91c2VhY2Vzcy1saXN0L3dhcmVob3VzZWFjZXNzLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { WarehouseaccessService } from 'src/app/shared/warehouseaccess.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-warehouseacess-list',\r\n  templateUrl: './warehouseacess-list.component.html',\r\n  styleUrls: ['./warehouseacess-list.component.css']\r\n})\r\nexport class WarehouseacessListComponent implements OnInit {\r\n\r\n  constructor(public service:WarehouseaccessService,private router: Router,\r\n    private toastr:ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiURL: 'http://localhost:2394/api'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}